{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/Groups/RenderGroups.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Users controlpanel groups.\n * @module components/manage/Controlpanels/UsersControlpanelGroups\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { Icon } from '@plone/volto/components';\n/**\n * UsersControlpanelGroups class.\n * @class UsersControlpanelGroups\n * @extends Component\n */\n\nclass RenderGroups extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"isAuthGroup\", roleId => {\n      return this.props.inheritedRole.includes(roleId);\n    });\n\n    this.onChange = this.onChange.bind(this);\n  }\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n\n\n  onChange(event, _ref) {\n    let {\n      value\n    } = _ref;\n    const [group, role] = value.split('.');\n    this.props.updateGroups(group, role);\n  }\n  /**\n   *@param {*}\n   *@returns {Boolean}\n   *@memberof RenderGroups\n   */\n\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(Table.Row, {\n      key: this.props.group.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, this.props.group.groupname), this.props.roles.map(role => __jsx(Table.Cell, {\n      key: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, this.props.inheritedRole && this.props.inheritedRole.includes(role.id) && this.props.group.roles.includes('Authenticated') ? __jsx(Icon, {\n      name: ploneSVG,\n      size: \"20px\",\n      color: \"#007EB1\",\n      title: 'plone-svg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }) : __jsx(Checkbox, {\n      checked: this.props.group.id === 'AuthenticatedUsers' ? this.isAuthGroup(role.id) : this.props.group.roles.includes(role.id),\n      onChange: this.onChange,\n      value: `${this.props.group.id}.${role.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }))), __jsx(Table.Cell, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(Dropdown, {\n      icon: \"ellipsis horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, __jsx(Dropdown.Menu, {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, __jsx(Dropdown.Item, {\n      onClick: this.props.onDelete,\n      value: this.props.group['@id'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: trashSVG,\n      size: \"15px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Delete\",\n      defaultMessage: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\n_defineProperty(RenderGroups, \"propTypes\", {\n  //single group\n  group: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    email: PropTypes.string,\n    groupname: PropTypes.string,\n    roles: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  roles: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string\n  })).isRequired,\n  inheritedRole: PropTypes.array,\n  onDelete: PropTypes.func.isRequired\n});\n\nexport default _c = injectIntl(RenderGroups);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["PropTypes","React","Component","FormattedMessage","injectIntl","Dropdown","Table","Checkbox","trashSVG","ploneSVG","Icon","RenderGroups","constructor","props","roleId","inheritedRole","includes","onChange","bind","event","value","group","role","split","updateGroups","render","title","groupname","roles","map","id","isAuthGroup","onDelete","shape","string","description","email","arrayOf","isRequired","array","func"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/Groups/RenderGroups.jsx"],"sourcesContent":["/**\n * Users controlpanel groups.\n * @module components/manage/Controlpanels/UsersControlpanelGroups\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { Icon } from '@plone/volto/components';\n\n/**\n * UsersControlpanelGroups class.\n * @class UsersControlpanelGroups\n * @extends Component\n */\nclass RenderGroups extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    //single group\n    group: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      email: PropTypes.string,\n      groupname: PropTypes.string,\n      roles: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    inheritedRole: PropTypes.array,\n    onDelete: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n  onChange(event, { value }) {\n    const [group, role] = value.split('.');\n    this.props.updateGroups(group, role);\n  }\n\n  /**\n   *@param {*}\n   *@returns {Boolean}\n   *@memberof RenderGroups\n   */\n  isAuthGroup = (roleId) => {\n    return this.props.inheritedRole.includes(roleId);\n  };\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Table.Row key={this.props.group.title}>\n        <Table.Cell>{this.props.group.groupname}</Table.Cell>\n        {this.props.roles.map((role) => (\n          <Table.Cell key={role.id}>\n            {this.props.inheritedRole &&\n            this.props.inheritedRole.includes(role.id) &&\n            this.props.group.roles.includes('Authenticated') ? (\n              <Icon\n                name={ploneSVG}\n                size=\"20px\"\n                color=\"#007EB1\"\n                title={'plone-svg'}\n              />\n            ) : (\n              <Checkbox\n                checked={\n                  this.props.group.id === 'AuthenticatedUsers'\n                    ? this.isAuthGroup(role.id)\n                    : this.props.group.roles.includes(role.id)\n                }\n                onChange={this.onChange}\n                value={`${this.props.group.id}.${role.id}`}\n              />\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell textAlign=\"right\">\n          <Dropdown icon=\"ellipsis horizontal\">\n            <Dropdown.Menu className=\"left\">\n              <Dropdown.Item\n                onClick={this.props.onDelete}\n                value={this.props.group['@id']}\n              >\n                <Icon name={trashSVG} size=\"15px\" />\n                <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nexport default injectIntl(RenderGroups);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Delete","defaultMessage":"Delete"}]}},"sourceType":"module"}