{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as slateConfig from './config';\nimport installDefaultPlugins from './plugins';\nimport _SlateEditor from './SlateEditor';\nexport { _SlateEditor as SlateEditor };\nimport _EditorReference from './EditorReference';\nexport { _EditorReference as EditorReference };\nexport default (config => {\n  config.settings.slate = _objectSpread(_objectSpread({}, slateConfig), {}, {\n    // showExpandedToolbar: false,\n    enableExpandedToolbar: false\n  });\n  config = installDefaultPlugins(config);\n  return config;\n});","map":{"version":3,"names":["slateConfig","installDefaultPlugins","SlateEditor","EditorReference","config","settings","slate","enableExpandedToolbar"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/index.js"],"sourcesContent":["import * as slateConfig from './config';\nimport installDefaultPlugins from './plugins';\nexport SlateEditor from './SlateEditor';\nexport EditorReference from './EditorReference';\n\nexport default (config) => {\n  config.settings.slate = {\n    ...slateConfig,\n    // showExpandedToolbar: false,\n    enableExpandedToolbar: false,\n  };\n  config = installDefaultPlugins(config);\n  return config;\n};\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,UAA7B;AACA,OAAOC,qBAAP,MAAkC,WAAlC;yBACwB,e;yBAAjBC,W;6BACqB,mB;6BAArBC,e;AAEP,gBAAgBC,MAAD,IAAY;EACzBA,MAAM,CAACC,QAAP,CAAgBC,KAAhB,mCACKN,WADL;IAEE;IACAO,qBAAqB,EAAE;EAHzB;EAKAH,MAAM,GAAGH,qBAAqB,CAACG,MAAD,CAA9B;EACA,OAAOA,MAAP;AACD,CARD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}