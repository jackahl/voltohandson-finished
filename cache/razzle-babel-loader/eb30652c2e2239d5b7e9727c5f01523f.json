{"ast":null,"code":"import _last from \"lodash/last\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypes.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Content Types component.\n * @module components/manage/Controlpanels/ContentTypes\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Confirm, Container, Table, Button, Header } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Error, Icon, ModalForm, Toolbar, Toast, ContentTypesActions } from '@plone/volto/components';\nimport { getControlpanel, postControlpanel, deleteControlpanel } from '@plone/volto/actions';\nimport { getId } from '@plone/volto/helpers';\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  add: {\n    \"id\": \"Add\",\n    \"defaultMessage\": \"Add\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  yes: {\n    \"id\": \"Yes\",\n    \"defaultMessage\": \"Yes\"\n  },\n  no: {\n    \"id\": \"No\",\n    \"defaultMessage\": \"No\"\n  },\n  addTypeFormTitle: {\n    \"id\": \"Add new content type\",\n    \"defaultMessage\": \"Add new content type\"\n  },\n  addTypeButtonTitle: {\n    \"id\": \"Add new content type\",\n    \"defaultMessage\": \"Add new content type\"\n  },\n  addTypeFormTitleTitle: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  addTypeFormDescriptionTitle: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  typeCreated: {\n    \"id\": \"Content type created\",\n    \"defaultMessage\": \"Content type created\"\n  },\n  deleteConfirmTitle: {\n    \"id\": \"Delete Type\",\n    \"defaultMessage\": \"Delete Type\"\n  },\n  typeDeleted: {\n    \"id\": \"Content type deleted\",\n    \"defaultMessage\": \"Content type deleted\"\n  }\n});\n/**\n * ContentTypes class.\n * @class ContentTypes\n * @extends Component\n */\n\nclass ContentTypes extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Types\n   */\n  constructor(props) {\n    super(props);\n    this.onAddTypeSubmit = this.onAddTypeSubmit.bind(this);\n    this.onAddTypeError = this.onAddTypeError.bind(this);\n    this.onAddTypeSuccess = this.onAddTypeSuccess.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n    this.onSchema = this.onSchema.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteTypeSuccess = this.onDeleteTypeSuccess.bind(this);\n    this.state = {\n      showAddType: false,\n      addTypeError: '',\n      showDelete: false,\n      typeToDelete: undefined,\n      error: null,\n      isClient: false\n    };\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({\n      isClient: true\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Get\n    if (this.props.cpanelRequest.get.loading && nextProps.cpanelRequest.get.error) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error\n      });\n    } // Create\n\n\n    if (this.props.cpanelRequest.post.loading && nextProps.cpanelRequest.post.loaded) {\n      this.props.getControlpanel(this.props.id);\n      this.onAddTypeSuccess();\n    }\n\n    if (this.props.cpanelRequest.post.loading && nextProps.cpanelRequest.post.error) {\n      this.onAddTypeError(nextProps.cpanelRequest.post.error);\n    } // Delete\n\n\n    if (this.props.cpanelRequest.delete.loading && nextProps.cpanelRequest.delete.loaded) {\n      this.props.getControlpanel(this.props.id);\n      this.onDeleteTypeSuccess();\n    }\n  }\n  /** Add  */\n\n  /**\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n\n\n  onAddTypeSubmit(data, callback) {\n    this.props.postControlpanel(this.props.id, data);\n    this.setState({\n      addTypeSetFormDataCallback: callback\n    });\n  }\n  /**\n   * Handle Errors after postControlpanel()\n   *\n   * @param {*} error object. Requires the property .message\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n\n\n  onAddTypeError(error) {\n    this.setState({\n      addTypeError: error.message\n    });\n  }\n  /**\n   * Handle Success after postControlpanel()\n   *\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n\n\n  onAddTypeSuccess() {\n    this.state.addTypeSetFormDataCallback({});\n    this.setState({\n      showAddType: false,\n      addTypeError: undefined,\n      addTypeSetFormDataCallback: undefined\n    });\n    toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.typeCreated),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }\n    }));\n  }\n  /** Edit  */\n\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n\n\n  onEdit(event, {\n    value\n  }) {\n    this.props.history.push(value);\n  }\n  /**\n   * Layout button click\n   * @param {*} event\n   * @param {string} value\n   * @returns {undefined}\n   */\n\n\n  onLayout(event, {\n    value\n  }) {\n    this.props.history.push(value);\n  }\n  /** Delete */\n\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n\n\n  onDelete(event, {\n    value\n  }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        typeToDelete: value\n      });\n    }\n  }\n  /** Folder\n   * @param {Object} event Event object.\n   * @param {string} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n\n\n  onSchema(event, {\n    value\n  }) {\n    if (value) {\n      this.props.history.push(`${this.props.pathname}/${value}/schema`);\n    }\n  }\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n\n\n  onDeleteOk() {\n    const item = getId(this.state.typeToDelete);\n    this.props.deleteControlpanel(this.props.id, item);\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined\n    });\n  }\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n\n\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined\n    });\n  }\n  /**\n   * Handle Success after deleteControlpanel()\n   *\n   * @method onDeleteTypeSuccess\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n\n\n  onDeleteTypeSuccess() {\n    toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.typeDeleted),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 7\n      }\n    }));\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    // Error\n    if (this.state.error) {\n      return __jsx(Error, {\n        error: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (!this.props.controlpanel) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return __jsx(Container, {\n      className: \"types-control-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }\n    }, __jsx(Confirm, {\n      open: this.state.showDelete,\n      header: this.props.intl.formatMessage(messages.deleteConfirmTitle),\n      cancelButton: this.props.intl.formatMessage(messages.no),\n      confirmButton: this.props.intl.formatMessage(messages.yes),\n      content: __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }\n      }, __jsx(\"ul\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Do you really want to delete the type {typename}?\",\n        defaultMessage: \"Do you really want to delete type {typename}?\",\n        values: {\n          typename: __jsx(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 33\n            }\n          }, getId(this.state.typeToDelete || ''))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 19\n        }\n      }))),\n      onCancel: this.onDeleteCancel,\n      onConfirm: this.onDeleteOk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }\n    }), __jsx(ModalForm, {\n      open: this.state.showAddType,\n      className: \"modal\",\n      onSubmit: this.onAddTypeSubmit,\n      submitError: this.state.addTypeError,\n      onCancel: () => this.setState({\n        showAddType: false\n      }),\n      title: this.props.intl.formatMessage(messages.addTypeFormTitle),\n      loading: this.props.cpanelRequest.post.loading,\n      schema: {\n        fieldsets: [{\n          id: 'default',\n          title: 'Content type',\n          fields: ['title', 'description']\n        }],\n        properties: {\n          title: {\n            title: this.props.intl.formatMessage(messages.addTypeFormTitleTitle),\n            type: 'string',\n            description: ''\n          },\n          description: {\n            title: this.props.intl.formatMessage(messages.addTypeFormDescriptionTitle),\n            type: 'string',\n            description: ''\n          }\n        },\n        required: ['title']\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }\n    })), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, __jsx(Header, {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, this.props.controlpanel.title), __jsx(\"section\", {\n      id: \"content-core\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }\n    }, __jsx(Table, {\n      compact: true,\n      singleLine: true,\n      striped: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 19\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Type\",\n      defaultMessage: \"Type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Description\",\n      defaultMessage: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Items\",\n      defaultMessage: \"Items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Actions\",\n      defaultMessage: \"Actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 23\n      }\n    })))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }\n    }, this.props.controlpanel.items.map(item => __jsx(Table.Row, {\n      key: item['@id'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 21\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }\n    }, __jsx(Link, {\n      to: `${this.props.pathname}/${item['id']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 25\n      }\n    }, item.title)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 23\n      }\n    }, item.description), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 23\n      }\n    }, item.count), __jsx(Table.Cell, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 23\n      }\n    }, __jsx(ContentTypesActions, {\n      item: item,\n      path: this.props.pathname,\n      onEdit: this.onEdit,\n      onDelete: this.onDelete,\n      onSchema: this.onSchema,\n      onLayout: this.onLayout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 25\n      }\n    }))))))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(React.Fragment, null, __jsx(Link, {\n        to: getParentUrl(this.props.pathname),\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        size: \"30px\",\n        className: \"contents circled\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }\n      })), __jsx(Button, {\n        className: \"add\",\n        \"aria-label\": this.props.intl.formatMessage(messages.add),\n        tabIndex: 0,\n        id: \"toolbar-add\",\n        onClick: () => {\n          this.setState({\n            showAddType: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: addSVG,\n        title: this.props.intl.formatMessage(messages.addTypeButtonTitle),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\n_defineProperty(ContentTypes, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  getControlpanel: PropTypes.func.isRequired,\n  postControlpanel: PropTypes.func.isRequired,\n  deleteControlpanel: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n  controlpanel: PropTypes.shape({\n    '@id': PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      '@id': PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n      count: PropTypes.integer\n    }))\n  })\n});\n\nexport default compose(injectIntl, connect((state, props) => ({\n  controlpanel: state.controlpanels.controlpanel,\n  cpanelRequest: state.controlpanels,\n  pathname: props.location.pathname,\n  id: _last(props.location.pathname.split('/'))\n}), {\n  getControlpanel,\n  postControlpanel,\n  deleteControlpanel\n}))(ContentTypes);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getParentUrl","Portal","Confirm","Container","Table","Button","Header","toast","FormattedMessage","defineMessages","injectIntl","Error","Icon","ModalForm","Toolbar","Toast","ContentTypesActions","getControlpanel","postControlpanel","deleteControlpanel","getId","addSVG","backSVG","messages","add","back","yes","no","addTypeFormTitle","addTypeButtonTitle","addTypeFormTitleTitle","addTypeFormDescriptionTitle","success","typeCreated","deleteConfirmTitle","typeDeleted","ContentTypes","constructor","props","onAddTypeSubmit","bind","onAddTypeError","onAddTypeSuccess","onEdit","onLayout","onSchema","onDelete","onDeleteCancel","onDeleteOk","onDeleteTypeSuccess","state","showAddType","addTypeError","showDelete","typeToDelete","undefined","error","isClient","componentDidMount","id","setState","UNSAFE_componentWillReceiveProps","nextProps","cpanelRequest","get","loading","post","loaded","delete","data","callback","addTypeSetFormDataCallback","message","intl","formatMessage","event","value","history","push","pathname","item","render","controlpanel","typename","fieldsets","title","fields","properties","type","description","required","items","map","count","document","getElementById","string","isRequired","func","objectOf","any","shape","arrayOf","integer","controlpanels","location","split"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypes.jsx"],"sourcesContent":["/**\n * Content Types component.\n * @module components/manage/Controlpanels/ContentTypes\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { last } from 'lodash';\nimport { Confirm, Container, Table, Button, Header } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport {\n  Error,\n  Icon,\n  ModalForm,\n  Toolbar,\n  Toast,\n  ContentTypesActions,\n} from '@plone/volto/components';\nimport {\n  getControlpanel,\n  postControlpanel,\n  deleteControlpanel,\n} from '@plone/volto/actions';\nimport { getId } from '@plone/volto/helpers';\n\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add',\n    defaultMessage: 'Add',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  yes: {\n    id: 'Yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'No',\n    defaultMessage: 'No',\n  },\n  addTypeFormTitle: {\n    id: 'Add new content type',\n    defaultMessage: 'Add new content type',\n  },\n  addTypeButtonTitle: {\n    id: 'Add new content type',\n    defaultMessage: 'Add new content type',\n  },\n  addTypeFormTitleTitle: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  addTypeFormDescriptionTitle: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  typeCreated: {\n    id: 'Content type created',\n    defaultMessage: 'Content type created',\n  },\n  deleteConfirmTitle: {\n    id: 'Delete Type',\n    defaultMessage: 'Delete Type',\n  },\n  typeDeleted: {\n    id: 'Content type deleted',\n    defaultMessage: 'Content type deleted',\n  },\n});\n\n/**\n * ContentTypes class.\n * @class ContentTypes\n * @extends Component\n */\nclass ContentTypes extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    postControlpanel: PropTypes.func.isRequired,\n    deleteControlpanel: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          '@id': PropTypes.string,\n          title: PropTypes.string,\n          description: PropTypes.string,\n          count: PropTypes.integer,\n        }),\n      ),\n    }),\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Types\n   */\n  constructor(props) {\n    super(props);\n    this.onAddTypeSubmit = this.onAddTypeSubmit.bind(this);\n    this.onAddTypeError = this.onAddTypeError.bind(this);\n    this.onAddTypeSuccess = this.onAddTypeSuccess.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n    this.onSchema = this.onSchema.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteTypeSuccess = this.onDeleteTypeSuccess.bind(this);\n\n    this.state = {\n      showAddType: false,\n      addTypeError: '',\n      showDelete: false,\n      typeToDelete: undefined,\n      error: null,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({ isClient: true });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Get\n    if (\n      this.props.cpanelRequest.get.loading &&\n      nextProps.cpanelRequest.get.error\n    ) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error,\n      });\n    }\n\n    // Create\n    if (\n      this.props.cpanelRequest.post.loading &&\n      nextProps.cpanelRequest.post.loaded\n    ) {\n      this.props.getControlpanel(this.props.id);\n      this.onAddTypeSuccess();\n    }\n    if (\n      this.props.cpanelRequest.post.loading &&\n      nextProps.cpanelRequest.post.error\n    ) {\n      this.onAddTypeError(nextProps.cpanelRequest.post.error);\n    }\n\n    // Delete\n    if (\n      this.props.cpanelRequest.delete.loading &&\n      nextProps.cpanelRequest.delete.loaded\n    ) {\n      this.props.getControlpanel(this.props.id);\n      this.onDeleteTypeSuccess();\n    }\n  }\n\n  /** Add  */\n\n  /**\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSubmit(data, callback) {\n    this.props.postControlpanel(this.props.id, data);\n    this.setState({\n      addTypeSetFormDataCallback: callback,\n    });\n  }\n\n  /**\n   * Handle Errors after postControlpanel()\n   *\n   * @param {*} error object. Requires the property .message\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeError(error) {\n    this.setState({\n      addTypeError: error.message,\n    });\n  }\n\n  /**\n   * Handle Success after postControlpanel()\n   *\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSuccess() {\n    this.state.addTypeSetFormDataCallback({});\n    this.setState({\n      showAddType: false,\n      addTypeError: undefined,\n      addTypeSetFormDataCallback: undefined,\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.typeCreated)}\n      />,\n    );\n  }\n\n  /** Edit  */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onEdit(event, { value }) {\n    this.props.history.push(value);\n  }\n\n  /**\n   * Layout button click\n   * @param {*} event\n   * @param {string} value\n   * @returns {undefined}\n   */\n  onLayout(event, { value }) {\n    this.props.history.push(value);\n  }\n\n  /** Delete */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDelete(event, { value }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        typeToDelete: value,\n      });\n    }\n  }\n\n  /** Folder\n   * @param {Object} event Event object.\n   * @param {string} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onSchema(event, { value }) {\n    if (value) {\n      this.props.history.push(`${this.props.pathname}/${value}/schema`);\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    const item = getId(this.state.typeToDelete);\n    this.props.deleteControlpanel(this.props.id, item);\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined,\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined,\n    });\n  }\n\n  /**\n   * Handle Success after deleteControlpanel()\n   *\n   * @method onDeleteTypeSuccess\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteTypeSuccess() {\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.typeDeleted)}\n      />,\n    );\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    if (!this.props.controlpanel) {\n      return <div />;\n    }\n    return (\n      <Container className=\"types-control-panel\">\n        <div className=\"container\">\n          <Confirm\n            open={this.state.showDelete}\n            header={this.props.intl.formatMessage(messages.deleteConfirmTitle)}\n            cancelButton={this.props.intl.formatMessage(messages.no)}\n            confirmButton={this.props.intl.formatMessage(messages.yes)}\n            content={\n              <div className=\"content\">\n                <ul className=\"content\">\n                  <FormattedMessage\n                    id=\"Do you really want to delete the type {typename}?\"\n                    defaultMessage=\"Do you really want to delete type {typename}?\"\n                    values={{\n                      typename: <b>{getId(this.state.typeToDelete || '')}</b>,\n                    }}\n                  />\n                </ul>\n              </div>\n            }\n            onCancel={this.onDeleteCancel}\n            onConfirm={this.onDeleteOk}\n          />\n          <ModalForm\n            open={this.state.showAddType}\n            className=\"modal\"\n            onSubmit={this.onAddTypeSubmit}\n            submitError={this.state.addTypeError}\n            onCancel={() => this.setState({ showAddType: false })}\n            title={this.props.intl.formatMessage(messages.addTypeFormTitle)}\n            loading={this.props.cpanelRequest.post.loading}\n            schema={{\n              fieldsets: [\n                {\n                  id: 'default',\n                  title: 'Content type',\n                  fields: ['title', 'description'],\n                },\n              ],\n              properties: {\n                title: {\n                  title: this.props.intl.formatMessage(\n                    messages.addTypeFormTitleTitle,\n                  ),\n                  type: 'string',\n                  description: '',\n                },\n                description: {\n                  title: this.props.intl.formatMessage(\n                    messages.addTypeFormDescriptionTitle,\n                  ),\n                  type: 'string',\n                  description: '',\n                },\n              },\n              required: ['title'],\n            }}\n          />\n        </div>\n        <Container>\n          <article id=\"content\">\n            <Header disabled>{this.props.controlpanel.title}</Header>\n            <section id=\"content-core\">\n              <Table compact singleLine striped>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Type\" defaultMessage=\"Type\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage\n                        id=\"Description\"\n                        defaultMessage=\"Description\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Items\" defaultMessage=\"Items\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell textAlign=\"right\">\n                      <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {this.props.controlpanel.items.map((item) => (\n                    <Table.Row key={item['@id']}>\n                      <Table.Cell>\n                        <Link to={`${this.props.pathname}/${item['id']}`}>\n                          {item.title}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{item.description}</Table.Cell>\n                      <Table.Cell>{item.count}</Table.Cell>\n                      <Table.Cell textAlign=\"right\">\n                        <ContentTypesActions\n                          item={item}\n                          path={this.props.pathname}\n                          onEdit={this.onEdit}\n                          onDelete={this.onDelete}\n                          onSchema={this.onSchema}\n                          onLayout={this.onLayout}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </section>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to={getParentUrl(this.props.pathname)} className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      size=\"30px\"\n                      className=\"contents circled\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                  <Button\n                    className=\"add\"\n                    aria-label={this.props.intl.formatMessage(messages.add)}\n                    tabIndex={0}\n                    id=\"toolbar-add\"\n                    onClick={() => {\n                      this.setState({ showAddType: true });\n                    }}\n                  >\n                    <Icon\n                      name={addSVG}\n                      title={this.props.intl.formatMessage(\n                        messages.addTypeButtonTitle,\n                      )}\n                    />\n                  </Button>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      cpanelRequest: state.controlpanels,\n      pathname: props.location.pathname,\n      id: last(props.location.pathname.split('/')),\n    }),\n    {\n      getControlpanel,\n      postControlpanel,\n      deleteControlpanel,\n    },\n  ),\n)(ContentTypes);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add","defaultMessage":"Add"},{"id":"Back","defaultMessage":"Back"},{"id":"Yes","defaultMessage":"Yes"},{"id":"No","defaultMessage":"No"},{"id":"Add new content type","defaultMessage":"Add new content type"},{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Success","defaultMessage":"Success"},{"id":"Content type created","defaultMessage":"Content type created"},{"id":"Delete Type","defaultMessage":"Delete Type"},{"id":"Content type deleted","defaultMessage":"Content type deleted"},{"id":"Do you really want to delete the type {typename}?","defaultMessage":"Do you really want to delete type {typename}?"},{"id":"Type","defaultMessage":"Type"},{"id":"Items","defaultMessage":"Items"},{"id":"Actions","defaultMessage":"Actions"}]}},"sourceType":"module"}