{"ast":null,"code":"/**\n * Toolbar reducer.\n * @module reducers/toolbar/toolbar\n */\nimport { EXPAND_TOOLBAR } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  expanded: false\n};\n/**\n * Toolbar reducer.\n * @function toolbar\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\nexport default function toolbar() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case EXPAND_TOOLBAR:\n      return {\n        expanded: action.isExpanded\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["EXPAND_TOOLBAR","initialState","expanded","toolbar","state","action","type","isExpanded"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/reducers/toolbar/toolbar.js"],"sourcesContent":["/**\n * Toolbar reducer.\n * @module reducers/toolbar/toolbar\n */\n\nimport { EXPAND_TOOLBAR } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  expanded: false,\n};\n\n/**\n * Toolbar reducer.\n * @function toolbar\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function toolbar(state = initialState, action = {}) {\n  switch (action.type) {\n    case EXPAND_TOOLBAR:\n      return {\n        expanded: action.isExpanded,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,cAAT,QAA+B,oCAA/B;AAEA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AADS,CAArB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,OAAT,GAAoD;EAAA,IAAnCC,KAAmC,uEAA3BH,YAA2B;EAAA,IAAbI,MAAa,uEAAJ,EAAI;;EACjE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,cAAL;MACE,OAAO;QACLE,QAAQ,EAAEG,MAAM,CAACE;MADZ,CAAP;;IAGF;MACE,OAAOH,KAAP;EANJ;AAQD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}