{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _map from \"lodash/map\";\nimport _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Contents/ContentsPropertiesModal.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Contents properties modal.\n * @module components/manage/Contents/ContentsPropertiesModal\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\nconst messages = defineMessages({\n  properties: {\n    \"id\": \"Properties\",\n    \"defaultMessage\": \"Properties\"\n  },\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  effectiveTitle: {\n    \"id\": \"Publishing Date\",\n    \"defaultMessage\": \"Publishing Date\"\n  },\n  effectiveDescription: {\n    \"id\": \"If this date is in the future, the content will not show up in listings and searches until this date.\",\n    \"defaultMessage\": \"If this date is in the future, the content will not show up in listings and searches until this date.\"\n  },\n  expiresTitle: {\n    \"id\": \"Expiration Date\",\n    \"defaultMessage\": \"Expiration Date\"\n  },\n  expiresDescription: {\n    \"id\": \"When this date is reached, the content will nolonger be visible in listings and searches.\",\n    \"defaultMessage\": \"When this date is reached, the content will nolonger be visible in listings and searches.\"\n  },\n  rightsTitle: {\n    \"id\": \"Rights\",\n    \"defaultMessage\": \"Rights\"\n  },\n  rightsDescription: {\n    \"id\": \"Copyright statement or other rights information on this item.\",\n    \"defaultMessage\": \"Copyright statement or other rights information on this item.\"\n  },\n  creatorsTitle: {\n    \"id\": \"Creators\",\n    \"defaultMessage\": \"Creators\"\n  },\n  creatorsDescription: {\n    \"id\": \"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.\",\n    \"defaultMessage\": \"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.\"\n  },\n  excludeFromNavTitle: {\n    \"id\": \"Exclude from navigation\",\n    \"defaultMessage\": \"Exclude from navigation\"\n  },\n  excludeFromNavDescription: {\n    \"id\": \"If selected, this item will not appear in the navigation tree\",\n    \"defaultMessage\": \"If selected, this item will not appear in the navigation tree\"\n  },\n  yes: {\n    \"id\": \"Yes\",\n    \"defaultMessage\": \"Yes\"\n  },\n  no: {\n    \"id\": \"No\",\n    \"defaultMessage\": \"No\"\n  }\n});\n/**\n * ContentsPropertiesModal class.\n * @class ContentsPropertiesModal\n * @extends Component\n */\n\nclass ContentsPropertiesModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n\n\n  onSubmit(data) {\n    if (_isEmpty(data)) {\n      this.props.onOk();\n    } else {\n      this.props.updateContent(this.props.items, _map(this.props.items, () => data));\n    }\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    return this.props.open && __jsx(ModalForm, {\n      open: this.props.open,\n      onSubmit: this.onSubmit,\n      onCancel: this.props.onCancel,\n      title: this.props.intl.formatMessage(messages.properties),\n      schema: {\n        fieldsets: [{\n          id: 'default',\n          title: this.props.intl.formatMessage(messages.default),\n          fields: ['effective', 'expires', 'rights', 'creators', 'exclude_from_nav']\n        }],\n        properties: {\n          effective: {\n            description: this.props.intl.formatMessage(messages.effectiveDescription),\n            title: this.props.intl.formatMessage(messages.effectiveTitle),\n            type: 'string',\n            widget: 'datetime'\n          },\n          expires: {\n            description: this.props.intl.formatMessage(messages.expiresDescription),\n            title: this.props.intl.formatMessage(messages.expiresTitle),\n            type: 'string',\n            widget: 'datetime'\n          },\n          rights: {\n            description: this.props.intl.formatMessage(messages.rightsDescription),\n            title: this.props.intl.formatMessage(messages.rightsTitle),\n            type: 'string',\n            widget: 'textarea'\n          },\n          creators: {\n            description: this.props.intl.formatMessage(messages.creatorsDescription),\n            title: this.props.intl.formatMessage(messages.creatorsTitle),\n            type: 'array'\n          },\n          exclude_from_nav: {\n            description: this.props.intl.formatMessage(messages.excludeFromNavDescription),\n            title: this.props.intl.formatMessage(messages.excludeFromNavTitle),\n            type: 'array',\n            choices: [[true, this.props.intl.formatMessage(messages.yes)], [false, this.props.intl.formatMessage(messages.no)]]\n          }\n        },\n        required: []\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\n_defineProperty(ContentsPropertiesModal, \"propTypes\", {\n  updateContent: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n});\n\nexport default compose(injectIntl, connect(state => ({\n  request: state.content.update\n}), {\n  updateContent\n}))(ContentsPropertiesModal);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","defineMessages","injectIntl","updateContent","ModalForm","messages","properties","default","effectiveTitle","effectiveDescription","expiresTitle","expiresDescription","rightsTitle","rightsDescription","creatorsTitle","creatorsDescription","excludeFromNavTitle","excludeFromNavDescription","yes","no","ContentsPropertiesModal","constructor","props","onSubmit","bind","UNSAFE_componentWillReceiveProps","nextProps","request","loading","loaded","onOk","data","items","render","open","onCancel","intl","formatMessage","fieldsets","id","title","fields","effective","description","type","widget","expires","rights","creators","exclude_from_nav","choices","required","func","isRequired","arrayOf","string","shape","bool","state","content","update"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Contents/ContentsPropertiesModal.jsx"],"sourcesContent":["/**\n * Contents properties modal.\n * @module components/manage/Contents/ContentsPropertiesModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { isEmpty, map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  properties: {\n    id: 'Properties',\n    defaultMessage: 'Properties',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  effectiveTitle: {\n    id: 'Publishing Date',\n    defaultMessage: 'Publishing Date',\n  },\n  effectiveDescription: {\n    id:\n      'If this date is in the future, the content will not show up in listings and searches until this date.',\n    defaultMessage:\n      'If this date is in the future, the content will not show up in listings and searches until this date.',\n  },\n  expiresTitle: {\n    id: 'Expiration Date',\n    defaultMessage: 'Expiration Date',\n  },\n  expiresDescription: {\n    id:\n      'When this date is reached, the content will nolonger be visible in listings and searches.',\n    defaultMessage:\n      'When this date is reached, the content will nolonger be visible in listings and searches.',\n  },\n  rightsTitle: {\n    id: 'Rights',\n    defaultMessage: 'Rights',\n  },\n  rightsDescription: {\n    id: 'Copyright statement or other rights information on this item.',\n    defaultMessage:\n      'Copyright statement or other rights information on this item.',\n  },\n  creatorsTitle: {\n    id: 'Creators',\n    defaultMessage: 'Creators',\n  },\n  creatorsDescription: {\n    id:\n      'Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.',\n    defaultMessage:\n      'Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.',\n  },\n  excludeFromNavTitle: {\n    id: 'Exclude from navigation',\n    defaultMessage: 'Exclude from navigation',\n  },\n  excludeFromNavDescription: {\n    id: 'If selected, this item will not appear in the navigation tree',\n    defaultMessage:\n      'If selected, this item will not appear in the navigation tree',\n  },\n  yes: {\n    id: 'Yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'No',\n    defaultMessage: 'No',\n  },\n});\n\n/**\n * ContentsPropertiesModal class.\n * @class ContentsPropertiesModal\n * @extends Component\n */\nclass ContentsPropertiesModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(PropTypes.string).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    if (isEmpty(data)) {\n      this.props.onOk();\n    } else {\n      this.props.updateContent(\n        this.props.items,\n        map(this.props.items, () => data),\n      );\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open && (\n        <ModalForm\n          open={this.props.open}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          title={this.props.intl.formatMessage(messages.properties)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: [\n                  'effective',\n                  'expires',\n                  'rights',\n                  'creators',\n                  'exclude_from_nav',\n                ],\n              },\n            ],\n            properties: {\n              effective: {\n                description: this.props.intl.formatMessage(\n                  messages.effectiveDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.effectiveTitle),\n                type: 'string',\n                widget: 'datetime',\n              },\n              expires: {\n                description: this.props.intl.formatMessage(\n                  messages.expiresDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.expiresTitle),\n                type: 'string',\n                widget: 'datetime',\n              },\n              rights: {\n                description: this.props.intl.formatMessage(\n                  messages.rightsDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.rightsTitle),\n                type: 'string',\n                widget: 'textarea',\n              },\n              creators: {\n                description: this.props.intl.formatMessage(\n                  messages.creatorsDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.creatorsTitle),\n                type: 'array',\n              },\n              exclude_from_nav: {\n                description: this.props.intl.formatMessage(\n                  messages.excludeFromNavDescription,\n                ),\n                title: this.props.intl.formatMessage(\n                  messages.excludeFromNavTitle,\n                ),\n                type: 'array',\n                choices: [\n                  [true, this.props.intl.formatMessage(messages.yes)],\n                  [false, this.props.intl.formatMessage(messages.no)],\n                ],\n              },\n            },\n            required: [],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.update,\n    }),\n    { updateContent },\n  ),\n)(ContentsPropertiesModal);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Properties","defaultMessage":"Properties"},{"id":"Default","defaultMessage":"Default"},{"id":"Publishing Date","defaultMessage":"Publishing Date"},{"id":"If this date is in the future, the content will not show up in listings and searches until this date.","defaultMessage":"If this date is in the future, the content will not show up in listings and searches until this date."},{"id":"Expiration Date","defaultMessage":"Expiration Date"},{"id":"When this date is reached, the content will nolonger be visible in listings and searches.","defaultMessage":"When this date is reached, the content will nolonger be visible in listings and searches."},{"id":"Rights","defaultMessage":"Rights"},{"id":"Copyright statement or other rights information on this item.","defaultMessage":"Copyright statement or other rights information on this item."},{"id":"Creators","defaultMessage":"Creators"},{"id":"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.","defaultMessage":"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first."},{"id":"Exclude from navigation","defaultMessage":"Exclude from navigation"},{"id":"If selected, this item will not appear in the navigation tree","defaultMessage":"If selected, this item will not appear in the navigation tree"},{"id":"Yes","defaultMessage":"Yes"},{"id":"No","defaultMessage":"No"}]}},"sourceType":"module"}