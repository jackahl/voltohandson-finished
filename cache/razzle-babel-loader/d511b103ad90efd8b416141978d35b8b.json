{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserButton.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport { Icon, BlockChooser } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nconst messages = defineMessages({\n  addBlock: {\n    \"id\": \"Add block\",\n    \"defaultMessage\": \"Add block\"\n  }\n});\nexport const ButtonComponent = props => {\n  const intl = useIntl();\n  const {\n    className = 'block-add-button',\n    size = '19px',\n    onShowBlockChooser\n  } = props;\n  return __jsx(Button, {\n    icon: true,\n    basic: true,\n    title: intl.formatMessage(messages.addBlock),\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      onShowBlockChooser();\n    },\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    name: addSVG,\n    className: className,\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst BlockChooserButton = props => {\n  const {\n    block,\n    allowedBlocks,\n    showRestricted,\n    data,\n    onMutateBlock,\n    onInsertBlock,\n    blocksConfig,\n    buttonComponent,\n    properties\n  } = props;\n  const {\n    disableNewBlocks\n  } = data;\n  const [addNewBlockOpened, setAddNewBlockOpened] = React.useState(false);\n  const blockChooserRef = React.useRef();\n  const handleClickOutside = React.useCallback(e => {\n    if (blockChooserRef.current && doesNodeContainClick(blockChooserRef.current, e)) return;\n    setAddNewBlockOpened(false);\n  }, []);\n  const Component = buttonComponent || ButtonComponent;\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  }, [handleClickOutside]);\n  return __jsx(React.Fragment, null, !disableNewBlocks && !blockHasValue(data) && __jsx(Component, _extends({}, props, {\n    onShowBlockChooser: () => setAddNewBlockOpened(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), addNewBlockOpened && __jsx(BlockChooser, {\n    onMutateBlock: onMutateBlock ? (id, value) => {\n      setAddNewBlockOpened(false);\n      onMutateBlock(id, value);\n    } : null,\n    onInsertBlock: onInsertBlock ? (id, value) => {\n      setAddNewBlockOpened(false);\n      onInsertBlock(id, value);\n    } : null,\n    currentBlock: block,\n    allowedBlocks: allowedBlocks,\n    blocksConfig: blocksConfig,\n    properties: properties,\n    showRestricted: showRestricted,\n    ref: blockChooserRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default BlockChooserButton;","map":{"version":3,"names":["React","doesNodeContainClick","addSVG","blockHasValue","Icon","BlockChooser","Button","defineMessages","useIntl","messages","addBlock","ButtonComponent","props","intl","className","size","onShowBlockChooser","formatMessage","e","preventDefault","stopPropagation","BlockChooserButton","block","allowedBlocks","showRestricted","data","onMutateBlock","onInsertBlock","blocksConfig","buttonComponent","properties","disableNewBlocks","addNewBlockOpened","setAddNewBlockOpened","useState","blockChooserRef","useRef","handleClickOutside","useCallback","current","Component","useEffect","document","addEventListener","removeEventListener","id","value"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserButton.jsx"],"sourcesContent":["import React from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport { Icon, BlockChooser } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  addBlock: {\n    id: 'Add block',\n    defaultMessage: 'Add block',\n  },\n});\n\nexport const ButtonComponent = (props) => {\n  const intl = useIntl();\n  const {\n    className = 'block-add-button',\n    size = '19px',\n    onShowBlockChooser,\n  } = props;\n\n  return (\n    <Button\n      icon\n      basic\n      title={intl.formatMessage(messages.addBlock)}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onShowBlockChooser();\n      }}\n      className={className}\n    >\n      <Icon name={addSVG} className={className} size={size} />\n    </Button>\n  );\n};\n\nconst BlockChooserButton = (props) => {\n  const {\n    block,\n    allowedBlocks,\n    showRestricted,\n    data,\n    onMutateBlock,\n    onInsertBlock,\n    blocksConfig,\n    buttonComponent,\n    properties,\n  } = props;\n  const { disableNewBlocks } = data;\n  const [addNewBlockOpened, setAddNewBlockOpened] = React.useState(false);\n\n  const blockChooserRef = React.useRef();\n\n  const handleClickOutside = React.useCallback((e) => {\n    if (\n      blockChooserRef.current &&\n      doesNodeContainClick(blockChooserRef.current, e)\n    )\n      return;\n    setAddNewBlockOpened(false);\n  }, []);\n\n  const Component = buttonComponent || ButtonComponent;\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  }, [handleClickOutside]);\n\n  return (\n    <>\n      {!disableNewBlocks && !blockHasValue(data) && (\n        <Component\n          {...props}\n          onShowBlockChooser={() => setAddNewBlockOpened(true)}\n        />\n      )}\n      {addNewBlockOpened && (\n        <BlockChooser\n          onMutateBlock={\n            onMutateBlock\n              ? (id, value) => {\n                  setAddNewBlockOpened(false);\n                  onMutateBlock(id, value);\n                }\n              : null\n          }\n          onInsertBlock={\n            onInsertBlock\n              ? (id, value) => {\n                  setAddNewBlockOpened(false);\n                  onInsertBlock(id, value);\n                }\n              : null\n          }\n          currentBlock={block}\n          allowedBlocks={allowedBlocks}\n          blocksConfig={blocksConfig}\n          properties={properties}\n          showRestricted={showRestricted}\n          ref={blockChooserRef}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BlockChooserButton;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add block","defaultMessage":"Add block"}]}},"sourceType":"module"}