{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Addons reducer.\n * @module reducers/addons/addons\n */\nimport { INSTALL_ADDON, LIST_ADDONS, UNINSTALL_ADDON } from '../../constants/ActionTypes';\nconst initialState = {\n  error: null,\n  installedAddons: [],\n  availableAddons: [],\n  upgradableAddons: [],\n  loaded: false,\n  loading: false\n};\n/**\n * Case-insensitive sorting method for Addons names.\n * @function addonsSorter\n * @param {String} a Add-on name.\n * @param {String} b Add-on name.\n * @returns {Number} Comparison result.\n */\n\nfunction addonsSorter(a, b) {\n  const titleA = a.title.toUpperCase();\n  const titleB = b.title.toUpperCase();\n\n  if (titleA < titleB) {\n    return -1;\n  } else if (titleA > titleB) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Addons reducer.\n * @function addons\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\n\nexport default function addons(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${INSTALL_ADDON}_PENDING`:\n    case `${LIST_ADDONS}_PENDING`:\n    case `${UNINSTALL_ADDON}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n\n    case `${LIST_ADDONS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        installedAddons: action.result.items.filter(elem => elem.is_installed === true).sort(addonsSorter),\n        availableAddons: action.result.items.filter(elem => elem.is_installed === false).sort(addonsSorter),\n        upgradableAddons: action.result.items.filter(elem => elem.upgrade_info.available === true).sort(addonsSorter),\n        loaded: true,\n        loading: false\n      });\n\n    case `${INSTALL_ADDON}_SUCCESS`:\n    case `${UNINSTALL_ADDON}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: true,\n        loading: false\n      });\n\n    case `${INSTALL_ADDON}_FAIL`:\n    case `${LIST_ADDONS}_FAIL`:\n    case `${UNINSTALL_ADDON}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        installedAddons: [],\n        availableAddons: [],\n        upgradableAddons: [],\n        loaded: false,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["INSTALL_ADDON","LIST_ADDONS","UNINSTALL_ADDON","initialState","error","installedAddons","availableAddons","upgradableAddons","loaded","loading","addonsSorter","a","b","titleA","title","toUpperCase","titleB","addons","state","action","type","result","items","filter","elem","is_installed","sort","upgrade_info","available"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/reducers/addons/addons.js"],"sourcesContent":["/**\n * Addons reducer.\n * @module reducers/addons/addons\n */\n\nimport {\n  INSTALL_ADDON,\n  LIST_ADDONS,\n  UNINSTALL_ADDON,\n} from '../../constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  installedAddons: [],\n  availableAddons: [],\n  upgradableAddons: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Case-insensitive sorting method for Addons names.\n * @function addonsSorter\n * @param {String} a Add-on name.\n * @param {String} b Add-on name.\n * @returns {Number} Comparison result.\n */\nfunction addonsSorter(a, b) {\n  const titleA = a.title.toUpperCase();\n  const titleB = b.title.toUpperCase();\n  if (titleA < titleB) {\n    return -1;\n  } else if (titleA > titleB) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n * Addons reducer.\n * @function addons\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function addons(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${INSTALL_ADDON}_PENDING`:\n    case `${LIST_ADDONS}_PENDING`:\n    case `${UNINSTALL_ADDON}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${LIST_ADDONS}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        installedAddons: action.result.items\n          .filter((elem) => elem.is_installed === true)\n          .sort(addonsSorter),\n        availableAddons: action.result.items\n          .filter((elem) => elem.is_installed === false)\n          .sort(addonsSorter),\n        upgradableAddons: action.result.items\n          .filter((elem) => elem.upgrade_info.available === true)\n          .sort(addonsSorter),\n        loaded: true,\n        loading: false,\n      };\n    case `${INSTALL_ADDON}_SUCCESS`:\n    case `${UNINSTALL_ADDON}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loaded: true,\n        loading: false,\n      };\n    case `${INSTALL_ADDON}_FAIL`:\n    case `${LIST_ADDONS}_FAIL`:\n    case `${UNINSTALL_ADDON}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        installedAddons: [],\n        availableAddons: [],\n        upgradableAddons: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,SACEA,aADF,EAEEC,WAFF,EAGEC,eAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IADY;EAEnBC,eAAe,EAAE,EAFE;EAGnBC,eAAe,EAAE,EAHE;EAInBC,gBAAgB,EAAE,EAJC;EAKnBC,MAAM,EAAE,KALW;EAMnBC,OAAO,EAAE;AANU,CAArB;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;EAC1B,MAAMC,MAAM,GAAGF,CAAC,CAACG,KAAF,CAAQC,WAAR,EAAf;EACA,MAAMC,MAAM,GAAGJ,CAAC,CAACE,KAAF,CAAQC,WAAR,EAAf;;EACA,IAAIF,MAAM,GAAGG,MAAb,EAAqB;IACnB,OAAO,CAAC,CAAR;EACD,CAFD,MAEO,IAAIH,MAAM,GAAGG,MAAb,EAAqB;IAC1B,OAAO,CAAP;EACD;;EACD,OAAO,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,MAAT,CAAgBC,KAAK,GAAGf,YAAxB,EAAsCgB,MAAM,GAAG,EAA/C,EAAmD;EAChE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,GAAEpB,aAAc,UAAtB;IACA,KAAM,GAAEC,WAAY,UAApB;IACA,KAAM,GAAEC,eAAgB,UAAxB;MACE,uCACKgB,KADL;QAEEd,KAAK,EAAE,IAFT;QAGEI,MAAM,EAAE,KAHV;QAIEC,OAAO,EAAE;MAJX;;IAMF,KAAM,GAAER,WAAY,UAApB;MACE,uCACKiB,KADL;QAEEd,KAAK,EAAE,IAFT;QAGEC,eAAe,EAAEc,MAAM,CAACE,MAAP,CAAcC,KAAd,CACdC,MADc,CACNC,IAAD,IAAUA,IAAI,CAACC,YAAL,KAAsB,IADzB,EAEdC,IAFc,CAEThB,YAFS,CAHnB;QAMEJ,eAAe,EAAEa,MAAM,CAACE,MAAP,CAAcC,KAAd,CACdC,MADc,CACNC,IAAD,IAAUA,IAAI,CAACC,YAAL,KAAsB,KADzB,EAEdC,IAFc,CAEThB,YAFS,CANnB;QASEH,gBAAgB,EAAEY,MAAM,CAACE,MAAP,CAAcC,KAAd,CACfC,MADe,CACPC,IAAD,IAAUA,IAAI,CAACG,YAAL,CAAkBC,SAAlB,KAAgC,IADlC,EAEfF,IAFe,CAEVhB,YAFU,CATpB;QAYEF,MAAM,EAAE,IAZV;QAaEC,OAAO,EAAE;MAbX;;IAeF,KAAM,GAAET,aAAc,UAAtB;IACA,KAAM,GAAEE,eAAgB,UAAxB;MACE,uCACKgB,KADL;QAEEd,KAAK,EAAE,IAFT;QAGEI,MAAM,EAAE,IAHV;QAIEC,OAAO,EAAE;MAJX;;IAMF,KAAM,GAAET,aAAc,OAAtB;IACA,KAAM,GAAEC,WAAY,OAApB;IACA,KAAM,GAAEC,eAAgB,OAAxB;MACE,uCACKgB,KADL;QAEEd,KAAK,EAAEe,MAAM,CAACf,KAFhB;QAGEC,eAAe,EAAE,EAHnB;QAIEC,eAAe,EAAE,EAJnB;QAKEC,gBAAgB,EAAE,EALpB;QAMEC,MAAM,EAAE,KANV;QAOEC,OAAO,EAAE;MAPX;;IASF;MACE,OAAOS,KAAP;EA/CJ;AAiDD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}