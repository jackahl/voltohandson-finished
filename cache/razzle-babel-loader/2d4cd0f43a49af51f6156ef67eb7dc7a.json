{"ast":null,"code":"import { updateIntl } from 'react-intl-redux';\nimport { normalizeLanguageName, getCookieOptions } from '@plone/volto/helpers';\nimport Cookies from 'universal-cookie';\nexport function changeLanguageCookies(language, req) {\n  var _req$protocol;\n\n  const cookies = new Cookies();\n  const cookieOptions = getCookieOptions({\n    secure: req !== null && req !== void 0 && (_req$protocol = req.protocol) !== null && _req$protocol !== void 0 && _req$protocol.startsWith('https') ? true : false\n  });\n\n  if (!req) {\n    cookies.set('I18N_LANGUAGE', normalizeLanguageName(language) || '', cookieOptions);\n  } else {\n    req.universalCookies.set('I18N_LANGUAGE', normalizeLanguageName(language) || '', cookieOptions);\n  }\n}\n/**\n * Changes current language using react-intl-redux action and setting the cookie\n * @function changeLanguage\n * @param {string} language target language.\n * @param {number} locale set of locales corresponding the target language.\n * @returns {Object} Change the target language action.\n */\n\nexport function changeLanguage(language, locale, req) {\n  changeLanguageCookies(language, req);\n  return updateIntl({\n    locale: language,\n    messages: locale\n  });\n}","map":{"version":3,"names":["updateIntl","normalizeLanguageName","getCookieOptions","Cookies","changeLanguageCookies","language","req","cookies","cookieOptions","secure","protocol","startsWith","set","universalCookies","changeLanguage","locale","messages"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/actions/language/language.js"],"sourcesContent":["import { updateIntl } from 'react-intl-redux';\nimport { normalizeLanguageName, getCookieOptions } from '@plone/volto/helpers';\nimport Cookies from 'universal-cookie';\n\nexport function changeLanguageCookies(language, req) {\n  const cookies = new Cookies();\n\n  const cookieOptions = getCookieOptions({\n    secure: req?.protocol?.startsWith('https') ? true : false,\n  });\n\n  if (!req) {\n    cookies.set(\n      'I18N_LANGUAGE',\n      normalizeLanguageName(language) || '',\n      cookieOptions,\n    );\n  } else {\n    req.universalCookies.set(\n      'I18N_LANGUAGE',\n      normalizeLanguageName(language) || '',\n      cookieOptions,\n    );\n  }\n}\n\n/**\n * Changes current language using react-intl-redux action and setting the cookie\n * @function changeLanguage\n * @param {string} language target language.\n * @param {number} locale set of locales corresponding the target language.\n * @returns {Object} Change the target language action.\n */\nexport function changeLanguage(language, locale, req) {\n  changeLanguageCookies(language, req);\n\n  return updateIntl({\n    locale: language,\n    messages: locale,\n  });\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,qBAAT,EAAgCC,gBAAhC,QAAwD,sBAAxD;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,OAAO,SAASC,qBAAT,CAA+BC,QAA/B,EAAyCC,GAAzC,EAA8C;EAAA;;EACnD,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;EAEA,MAAMK,aAAa,GAAGN,gBAAgB,CAAC;IACrCO,MAAM,EAAEH,GAAG,SAAH,IAAAA,GAAG,WAAH,qBAAAA,GAAG,CAAEI,QAAL,wDAAeC,UAAf,CAA0B,OAA1B,IAAqC,IAArC,GAA4C;EADf,CAAD,CAAtC;;EAIA,IAAI,CAACL,GAAL,EAAU;IACRC,OAAO,CAACK,GAAR,CACE,eADF,EAEEX,qBAAqB,CAACI,QAAD,CAArB,IAAmC,EAFrC,EAGEG,aAHF;EAKD,CAND,MAMO;IACLF,GAAG,CAACO,gBAAJ,CAAqBD,GAArB,CACE,eADF,EAEEX,qBAAqB,CAACI,QAAD,CAArB,IAAmC,EAFrC,EAGEG,aAHF;EAKD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,cAAT,CAAwBT,QAAxB,EAAkCU,MAAlC,EAA0CT,GAA1C,EAA+C;EACpDF,qBAAqB,CAACC,QAAD,EAAWC,GAAX,CAArB;EAEA,OAAON,UAAU,CAAC;IAChBe,MAAM,EAAEV,QADQ;IAEhBW,QAAQ,EAAED;EAFM,CAAD,CAAjB;AAID"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}