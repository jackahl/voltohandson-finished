{"ast":null,"code":"import ReactDOM from 'react-dom';\nimport { Editor } from 'slate'; // import { ReactEditor } from 'slate-react';\n\nimport { splitEditorInTwoFragments, setEditorContent, createAndSelectNewBlockAfter, rangeIsInSplittableNode // deconstructToVoltoBlocks,\n} from '@plone/volto-slate/utils';\n/**\n * @param {Editor} editor The Slate editor object to extend.\n * @description If the selection exists and touches with one of its edges a\n * closest-to-root `Text` node (`Path` with length `2`)\n *\n *   - if the parent node of the selection exists, split editor into two\n *     fragments put inside separate Volto Slate Text blocks;\n *   - if the parent node of the selection does not exist, do nothing;\n *\n * and if the selection does not exist or does not touch with one of its edges a\n * closest-to-root `Text` node, call the default behavior.\n */\n\nexport const withSplitBlocksOnBreak = editor => {\n  const {\n    insertBreak\n  } = editor;\n\n  editor.insertBreak = () => {\n    // if selection is expanded, delete it\n    if (rangeIsInSplittableNode(editor, editor.selection)) {\n      const block = Editor.parent(editor, editor.selection);\n\n      if (block) {\n        const blockProps = editor.getBlockProps();\n        const {\n          data\n        } = blockProps; // Don't add new block if not allowed\n\n        if (data !== null && data !== void 0 && data.disableNewBlocks) {\n          return insertBreak();\n        } // TODO: another method would be to simply insert a break and call\n        // deconstructToVoltoBlocks\n\n\n        ReactDOM.unstable_batchedUpdates(() => {\n          const [top, bottom] = splitEditorInTwoFragments(editor);\n          setEditorContent(editor, top); // ReactEditor.blur(editor);\n\n          createAndSelectNewBlockAfter(editor, bottom);\n        });\n      }\n\n      return;\n    }\n\n    return insertBreak();\n  };\n\n  return editor;\n};","map":{"version":3,"names":["ReactDOM","Editor","splitEditorInTwoFragments","setEditorContent","createAndSelectNewBlockAfter","rangeIsInSplittableNode","withSplitBlocksOnBreak","editor","insertBreak","selection","block","parent","blockProps","getBlockProps","data","disableNewBlocks","unstable_batchedUpdates","top","bottom"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/blocks/Text/extensions/insertBreak.js"],"sourcesContent":["import ReactDOM from 'react-dom';\nimport { Editor } from 'slate';\n// import { ReactEditor } from 'slate-react';\nimport {\n  splitEditorInTwoFragments,\n  setEditorContent,\n  createAndSelectNewBlockAfter,\n  rangeIsInSplittableNode,\n  // deconstructToVoltoBlocks,\n} from '@plone/volto-slate/utils';\n\n/**\n * @param {Editor} editor The Slate editor object to extend.\n * @description If the selection exists and touches with one of its edges a\n * closest-to-root `Text` node (`Path` with length `2`)\n *\n *   - if the parent node of the selection exists, split editor into two\n *     fragments put inside separate Volto Slate Text blocks;\n *   - if the parent node of the selection does not exist, do nothing;\n *\n * and if the selection does not exist or does not touch with one of its edges a\n * closest-to-root `Text` node, call the default behavior.\n */\nexport const withSplitBlocksOnBreak = (editor) => {\n  const { insertBreak } = editor;\n\n  editor.insertBreak = () => {\n    // if selection is expanded, delete it\n    if (rangeIsInSplittableNode(editor, editor.selection)) {\n      const block = Editor.parent(editor, editor.selection);\n\n      if (block) {\n        const blockProps = editor.getBlockProps();\n        const { data } = blockProps;\n\n        // Don't add new block if not allowed\n        if (data?.disableNewBlocks) {\n          return insertBreak();\n        }\n\n        // TODO: another method would be to simply insert a break and call\n        // deconstructToVoltoBlocks\n        ReactDOM.unstable_batchedUpdates(() => {\n          const [top, bottom] = splitEditorInTwoFragments(editor);\n          setEditorContent(editor, top);\n          // ReactEditor.blur(editor);\n          createAndSelectNewBlockAfter(editor, bottom);\n        });\n      }\n      return;\n    }\n\n    return insertBreak();\n  };\n\n  return editor;\n};\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,OAAvB,C,CACA;;AACA,SACEC,yBADF,EAEEC,gBAFF,EAGEC,4BAHF,EAIEC,uBAJF,CAKE;AALF,OAMO,0BANP;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,sBAAsB,GAAIC,MAAD,IAAY;EAChD,MAAM;IAAEC;EAAF,IAAkBD,MAAxB;;EAEAA,MAAM,CAACC,WAAP,GAAqB,MAAM;IACzB;IACA,IAAIH,uBAAuB,CAACE,MAAD,EAASA,MAAM,CAACE,SAAhB,CAA3B,EAAuD;MACrD,MAAMC,KAAK,GAAGT,MAAM,CAACU,MAAP,CAAcJ,MAAd,EAAsBA,MAAM,CAACE,SAA7B,CAAd;;MAEA,IAAIC,KAAJ,EAAW;QACT,MAAME,UAAU,GAAGL,MAAM,CAACM,aAAP,EAAnB;QACA,MAAM;UAAEC;QAAF,IAAWF,UAAjB,CAFS,CAIT;;QACA,IAAIE,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEC,gBAAV,EAA4B;UAC1B,OAAOP,WAAW,EAAlB;QACD,CAPQ,CAST;QACA;;;QACAR,QAAQ,CAACgB,uBAAT,CAAiC,MAAM;UACrC,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,yBAAyB,CAACK,MAAD,CAA/C;UACAJ,gBAAgB,CAACI,MAAD,EAASU,GAAT,CAAhB,CAFqC,CAGrC;;UACAb,4BAA4B,CAACG,MAAD,EAASW,MAAT,CAA5B;QACD,CALD;MAMD;;MACD;IACD;;IAED,OAAOV,WAAW,EAAlB;EACD,CA3BD;;EA6BA,OAAOD,MAAP;AACD,CAjCM"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}