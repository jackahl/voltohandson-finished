{"ast":null,"code":"import { Editor, Range, Transforms, Path } from 'slate';\nimport config from '@plone/volto/registry';\nexport function isCursorInList(editor) {\n  const {\n    slate\n  } = config.settings;\n  const result = Editor.above(editor, {\n    match: n => n.type === slate.listItemType\n  });\n\n  if (!result) {\n    return false;\n  }\n\n  const [listItemWithSelection] = result; // whether the selection is inside a list item\n\n  const listItemCase = Range.isCollapsed(editor.selection) && listItemWithSelection;\n  return listItemCase;\n}\nexport function isCursorAtListBlockStart(editor) {\n  if (editor.selection && Range.isCollapsed(editor.selection)) {\n    const {\n      anchor\n    } = editor.selection;\n    return anchor.offset > 0 ? false : anchor.path.length === 3 && anchor.path.reduce((acc, x) => acc + x, 0) === 0;\n  }\n}\n\nconst getPreviousSiblingPath = function (path) {\n  // Doesn't raise an error if no previous sibling exists\n  const last = path[path.length - 1];\n\n  if (last <= 0) {\n    return null;\n  }\n\n  return path.slice(0, -1).concat(last - 1);\n};\n\nexport function mergeWithPreviousList(editor, listPath) {\n  const {\n    slate\n  } = config.settings;\n  const prevSiblingPath = getPreviousSiblingPath(listPath);\n  const [currentList] = Editor.node(editor, listPath);\n\n  if (prevSiblingPath) {\n    const [prevSibling] = Editor.node(editor, prevSiblingPath);\n\n    if (slate.listTypes.includes(prevSibling.type)) {\n      Transforms.mergeNodes(editor, {\n        // match: (node) => slate.listTypes.includes(node.type),\n        match: node => node === prevSibling || node === currentList,\n        mode: 'highest',\n        at: listPath\n      });\n    }\n  }\n}\nexport function mergeWithNextList(editor, listPath) {\n  const {\n    slate\n  } = config.settings;\n  const [currentList] = Editor.node(editor, listPath);\n  const [parent] = Editor.parent(editor, listPath);\n\n  if (parent.children.length - 1 > listPath[listPath.length - 1]) {\n    const nextSiblingPath = Path.next(listPath);\n    const [nextSibling] = Editor.node(editor, nextSiblingPath);\n\n    if (slate.listTypes.includes(nextSibling.type)) {\n      Transforms.mergeNodes(editor, {\n        match: node => {\n          return node === currentList || node === nextSibling;\n        },\n        at: nextSiblingPath,\n        mode: 'highest'\n      });\n    }\n  }\n}\nexport function getCurrentListItem(editor) {\n  const {\n    slate\n  } = config.settings;\n  const [match] = Editor.nodes(editor, {\n    at: editor.selection.anchor.path,\n    match: n => n.type === slate.listItemType,\n    mode: 'lowest'\n  });\n  return match || []; // empty entry if nothing is found\n}","map":{"version":3,"names":["Editor","Range","Transforms","Path","config","isCursorInList","editor","slate","settings","result","above","match","n","type","listItemType","listItemWithSelection","listItemCase","isCollapsed","selection","isCursorAtListBlockStart","anchor","offset","path","length","reduce","acc","x","getPreviousSiblingPath","last","slice","concat","mergeWithPreviousList","listPath","prevSiblingPath","currentList","node","prevSibling","listTypes","includes","mergeNodes","mode","at","mergeWithNextList","parent","children","nextSiblingPath","next","nextSibling","getCurrentListItem","nodes"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/utils/lists.js"],"sourcesContent":["import { Editor, Range, Transforms, Path } from 'slate';\nimport config from '@plone/volto/registry';\n\nexport function isCursorInList(editor) {\n  const { slate } = config.settings;\n\n  const result = Editor.above(editor, {\n    match: (n) => n.type === slate.listItemType,\n  });\n\n  if (!result) {\n    return false;\n  }\n\n  const [listItemWithSelection] = result;\n\n  // whether the selection is inside a list item\n  const listItemCase =\n    Range.isCollapsed(editor.selection) && listItemWithSelection;\n\n  return listItemCase;\n}\n\nexport function isCursorAtListBlockStart(editor) {\n  if (editor.selection && Range.isCollapsed(editor.selection)) {\n    const { anchor } = editor.selection;\n    return anchor.offset > 0\n      ? false\n      : anchor.path.length === 3 &&\n          anchor.path.reduce((acc, x) => acc + x, 0) === 0;\n  }\n}\n\nconst getPreviousSiblingPath = function (path) {\n  // Doesn't raise an error if no previous sibling exists\n  const last = path[path.length - 1];\n\n  if (last <= 0) {\n    return null;\n  }\n\n  return path.slice(0, -1).concat(last - 1);\n};\n\nexport function mergeWithPreviousList(editor, listPath) {\n  const { slate } = config.settings;\n  const prevSiblingPath = getPreviousSiblingPath(listPath);\n  const [currentList] = Editor.node(editor, listPath);\n  if (prevSiblingPath) {\n    const [prevSibling] = Editor.node(editor, prevSiblingPath);\n\n    if (slate.listTypes.includes(prevSibling.type)) {\n      Transforms.mergeNodes(editor, {\n        // match: (node) => slate.listTypes.includes(node.type),\n        match: (node) => node === prevSibling || node === currentList,\n        mode: 'highest',\n        at: listPath,\n      });\n    }\n  }\n}\n\nexport function mergeWithNextList(editor, listPath) {\n  const { slate } = config.settings;\n  const [currentList] = Editor.node(editor, listPath);\n  const [parent] = Editor.parent(editor, listPath);\n\n  if (parent.children.length - 1 > listPath[listPath.length - 1]) {\n    const nextSiblingPath = Path.next(listPath);\n    const [nextSibling] = Editor.node(editor, nextSiblingPath);\n\n    if (slate.listTypes.includes(nextSibling.type)) {\n      Transforms.mergeNodes(editor, {\n        match: (node) => {\n          return node === currentList || node === nextSibling;\n        },\n        at: nextSiblingPath,\n        mode: 'highest',\n      });\n    }\n  }\n}\n\nexport function getCurrentListItem(editor) {\n  const { slate } = config.settings;\n  const [match] = Editor.nodes(editor, {\n    at: editor.selection.anchor.path,\n    match: (n) => n.type === slate.listItemType,\n    mode: 'lowest',\n  });\n  return match || []; // empty entry if nothing is found\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}