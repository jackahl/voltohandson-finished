{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  loaded: false,\n  loadState: {}\n};\nexport default function asyncConnect(state = initialState, action = {}) {\n  const {\n    key,\n    data,\n    error\n  } = action;\n\n  switch (action.type) {\n    case '@redux-conn/BEGIN_GLOBAL_LOAD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loaded: false\n      });\n\n    case '@redux-conn/END_GLOBAL_LOAD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loaded: true\n      });\n\n    case '@redux-conn/LOAD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadState: _objectSpread(_objectSpread({}, state.loadState), {}, {\n          [key]: {\n            loading: true,\n            loaded: false\n          }\n        })\n      });\n\n    case '@redux-conn/LOAD_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadState: _objectSpread(_objectSpread({}, state.loadState), {}, {\n          [key]: {\n            loading: false,\n            loaded: true,\n            error: null\n          }\n        }),\n        [key]: data\n      });\n\n    case '@redux-conn/LOAD_FAIL':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadState: _objectSpread(_objectSpread({}, state.loadState), {}, {\n          [key]: {\n            loading: false,\n            loaded: false,\n            error: error\n          }\n        })\n      });\n\n    case '@redux-conn/CLEAR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loadState: _objectSpread(_objectSpread({}, state.loadState), {}, {\n          [key]: {\n            loading: false,\n            loaded: false,\n            error: null\n          }\n        }),\n        [key]: null\n      });\n\n    default:\n      break;\n  }\n\n  return state;\n}","map":{"version":3,"names":["initialState","loaded","loadState","asyncConnect","state","action","key","data","error","type","loading"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/reducers/asyncConnect/asyncConnect.js"],"sourcesContent":["const initialState = {\n  loaded: false,\n  loadState: {},\n};\n\nexport default function asyncConnect(state = initialState, action = {}) {\n  const { key, data, error } = action;\n  switch (action.type) {\n    case '@redux-conn/BEGIN_GLOBAL_LOAD':\n      return {\n        ...state,\n        loaded: false,\n      };\n    case '@redux-conn/END_GLOBAL_LOAD':\n      return {\n        ...state,\n        loaded: true,\n      };\n    case '@redux-conn/LOAD':\n      return {\n        ...state,\n        loadState: {\n          ...state.loadState,\n          [key]: {\n            loading: true,\n            loaded: false,\n          },\n        },\n      };\n    case '@redux-conn/LOAD_SUCCESS':\n      return {\n        ...state,\n        loadState: {\n          ...state.loadState,\n          [key]: {\n            loading: false,\n            loaded: true,\n            error: null,\n          },\n        },\n        [key]: data,\n      };\n    case '@redux-conn/LOAD_FAIL':\n      return {\n        ...state,\n        loadState: {\n          ...state.loadState,\n          [key]: {\n            loading: false,\n            loaded: false,\n            error: error,\n          },\n        },\n      };\n    case '@redux-conn/CLEAR':\n      return {\n        ...state,\n        loadState: {\n          ...state.loadState,\n          [key]: {\n            loading: false,\n            loaded: false,\n            error: null,\n          },\n        },\n        [key]: null,\n      };\n    default:\n      break;\n  }\n  return state;\n}\n"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;EACnBC,MAAM,EAAE,KADW;EAEnBC,SAAS,EAAE;AAFQ,CAArB;AAKA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGJ,YAA9B,EAA4CK,MAAM,GAAG,EAArD,EAAyD;EACtE,MAAM;IAAEC,GAAF;IAAOC,IAAP;IAAaC;EAAb,IAAuBH,MAA7B;;EACA,QAAQA,MAAM,CAACI,IAAf;IACE,KAAK,+BAAL;MACE,uCACKL,KADL;QAEEH,MAAM,EAAE;MAFV;;IAIF,KAAK,6BAAL;MACE,uCACKG,KADL;QAEEH,MAAM,EAAE;MAFV;;IAIF,KAAK,kBAAL;MACE,uCACKG,KADL;QAEEF,SAAS,kCACJE,KAAK,CAACF,SADF;UAEP,CAACI,GAAD,GAAO;YACLI,OAAO,EAAE,IADJ;YAELT,MAAM,EAAE;UAFH;QAFA;MAFX;;IAUF,KAAK,0BAAL;MACE,uCACKG,KADL;QAEEF,SAAS,kCACJE,KAAK,CAACF,SADF;UAEP,CAACI,GAAD,GAAO;YACLI,OAAO,EAAE,KADJ;YAELT,MAAM,EAAE,IAFH;YAGLO,KAAK,EAAE;UAHF;QAFA,EAFX;QAUE,CAACF,GAAD,GAAOC;MAVT;;IAYF,KAAK,uBAAL;MACE,uCACKH,KADL;QAEEF,SAAS,kCACJE,KAAK,CAACF,SADF;UAEP,CAACI,GAAD,GAAO;YACLI,OAAO,EAAE,KADJ;YAELT,MAAM,EAAE,KAFH;YAGLO,KAAK,EAAEA;UAHF;QAFA;MAFX;;IAWF,KAAK,mBAAL;MACE,uCACKJ,KADL;QAEEF,SAAS,kCACJE,KAAK,CAACF,SADF;UAEP,CAACI,GAAD,GAAO;YACLI,OAAO,EAAE,KADJ;YAELT,MAAM,EAAE,KAFH;YAGLO,KAAK,EAAE;UAHF;QAFA,EAFX;QAUE,CAACF,GAAD,GAAO;MAVT;;IAYF;MACE;EA7DJ;;EA+DA,OAAOF,KAAP;AACD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}