{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Breadcrumbs/Breadcrumbs.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Breadcrumbs components.\n * @module components/theme/Breadcrumbs/Breadcrumbs\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, Container, Segment } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport { getBreadcrumbs } from '@plone/volto/actions';\nimport { getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\nimport homeSVG from '@plone/volto/icons/home.svg';\nconst messages = defineMessages({\n  home: {\n    \"id\": \"Home\",\n    \"defaultMessage\": \"Home\"\n  },\n  breadcrumbs: {\n    \"id\": \"Breadcrumbs\",\n    \"defaultMessage\": \"Breadcrumbs\"\n  }\n});\n/**\n * Breadcrumbs container class.\n */\n\nexport class BreadcrumbsComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  componentDidMount() {\n    if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n      this.props.getBreadcrumbs(getBaseUrl(this.props.pathname));\n    }\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n        this.props.getBreadcrumbs(getBaseUrl(nextProps.pathname));\n      }\n    }\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    return __jsx(Segment, {\n      role: \"navigation\",\n      \"aria-label\": this.props.intl.formatMessage(messages.breadcrumbs),\n      className: \"breadcrumbs\",\n      secondary: true,\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, __jsx(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      to: this.props.root || '/',\n      className: \"section\",\n      title: this.props.intl.formatMessage(messages.home),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: homeSVG,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    })), this.props.items.map((item, index, items) => [__jsx(Breadcrumb.Divider, {\n      key: `divider-${item.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), index < items.length - 1 ? __jsx(Link, {\n      key: item.url,\n      to: item.url,\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, item.title) : __jsx(Breadcrumb.Section, {\n      key: item.url,\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, item.title)]))));\n  }\n\n}\n\n_defineProperty(BreadcrumbsComponent, \"propTypes\", {\n  getBreadcrumbs: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  root: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    url: PropTypes.string\n  })).isRequired\n});\n\nexport default compose(injectIntl, connect(state => ({\n  items: state.breadcrumbs.items,\n  root: state.breadcrumbs.root\n}), {\n  getBreadcrumbs\n}))(BreadcrumbsComponent);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","Breadcrumb","Container","Segment","defineMessages","injectIntl","Icon","getBreadcrumbs","getBaseUrl","hasApiExpander","homeSVG","messages","home","breadcrumbs","BreadcrumbsComponent","componentDidMount","props","pathname","UNSAFE_componentWillReceiveProps","nextProps","render","intl","formatMessage","root","items","map","item","index","url","length","title","func","isRequired","string","arrayOf","shape","state"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Breadcrumbs/Breadcrumbs.jsx"],"sourcesContent":["/**\n * Breadcrumbs components.\n * @module components/theme/Breadcrumbs/Breadcrumbs\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, Container, Segment } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Icon } from '@plone/volto/components';\nimport { getBreadcrumbs } from '@plone/volto/actions';\nimport { getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\n\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nconst messages = defineMessages({\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  breadcrumbs: {\n    id: 'Breadcrumbs',\n    defaultMessage: 'Breadcrumbs',\n  },\n});\n\n/**\n * Breadcrumbs container class.\n */\nexport class BreadcrumbsComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getBreadcrumbs: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    root: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  componentDidMount() {\n    if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n      this.props.getBreadcrumbs(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n        this.props.getBreadcrumbs(getBaseUrl(nextProps.pathname));\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Segment\n        role=\"navigation\"\n        aria-label={this.props.intl.formatMessage(messages.breadcrumbs)}\n        className=\"breadcrumbs\"\n        secondary\n        vertical\n      >\n        <Container>\n          <Breadcrumb>\n            <Link\n              to={this.props.root || '/'}\n              className=\"section\"\n              title={this.props.intl.formatMessage(messages.home)}\n            >\n              <Icon name={homeSVG} size=\"18px\" />\n            </Link>\n            {this.props.items.map((item, index, items) => [\n              <Breadcrumb.Divider key={`divider-${item.url}`} />,\n              index < items.length - 1 ? (\n                <Link key={item.url} to={item.url} className=\"section\">\n                  {item.title}\n                </Link>\n              ) : (\n                <Breadcrumb.Section key={item.url} active>\n                  {item.title}\n                </Breadcrumb.Section>\n              ),\n            ])}\n          </Breadcrumb>\n        </Container>\n      </Segment>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.breadcrumbs.items,\n      root: state.breadcrumbs.root,\n    }),\n    { getBreadcrumbs },\n  ),\n)(BreadcrumbsComponent);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Home","defaultMessage":"Home"},{"id":"Breadcrumbs","defaultMessage":"Breadcrumbs"}]}},"sourceType":"module"}