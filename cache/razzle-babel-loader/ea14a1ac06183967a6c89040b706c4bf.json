{"ast":null,"code":"export const NONVALUE_OPERATIONS = new Set(['plone.app.querystring.operation.boolean.isFalse', 'plone.app.querystring.operation.boolean.isTrue']);\nexport const DATE_OPERATIONS = new Set(['plone.app.querystring.operation.date.between']);\nexport const hasNonValueOperation = ops => {\n  return ops.filter(x => NONVALUE_OPERATIONS.has(x)).length > 0;\n};\nexport const hasDateOperation = ops => {\n  return ops.filter(x => DATE_OPERATIONS.has(x)).length > 0;\n};","map":{"version":3,"names":["NONVALUE_OPERATIONS","Set","DATE_OPERATIONS","hasNonValueOperation","ops","filter","x","has","length","hasDateOperation"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/utils.js"],"sourcesContent":["export const NONVALUE_OPERATIONS = new Set([\n  'plone.app.querystring.operation.boolean.isFalse',\n  'plone.app.querystring.operation.boolean.isTrue',\n]);\n\nexport const DATE_OPERATIONS = new Set([\n  'plone.app.querystring.operation.date.between',\n]);\n\nexport const hasNonValueOperation = (ops) => {\n  return ops.filter((x) => NONVALUE_OPERATIONS.has(x)).length > 0;\n};\n\nexport const hasDateOperation = (ops) => {\n  return ops.filter((x) => DATE_OPERATIONS.has(x)).length > 0;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,IAAIC,GAAJ,CAAQ,CACzC,iDADyC,EAEzC,gDAFyC,CAAR,CAA5B;AAKP,OAAO,MAAMC,eAAe,GAAG,IAAID,GAAJ,CAAQ,CACrC,8CADqC,CAAR,CAAxB;AAIP,OAAO,MAAME,oBAAoB,GAAIC,GAAD,IAAS;EAC3C,OAAOA,GAAG,CAACC,MAAJ,CAAYC,CAAD,IAAON,mBAAmB,CAACO,GAApB,CAAwBD,CAAxB,CAAlB,EAA8CE,MAA9C,GAAuD,CAA9D;AACD,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAIL,GAAD,IAAS;EACvC,OAAOA,GAAG,CAACC,MAAJ,CAAYC,CAAD,IAAOJ,eAAe,CAACK,GAAhB,CAAoBD,CAApB,CAAlB,EAA0CE,MAA1C,GAAmD,CAA1D;AACD,CAFM"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}