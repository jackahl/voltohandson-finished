{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserSearch.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport { defineMessages, useIntl } from 'react-intl';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  search: {\n    \"id\": \"Search\",\n    \"defaultMessage\": \"Search\"\n  }\n});\n\nconst BlockChooserSearch = _ref => {\n  _s();\n\n  let {\n    onChange,\n    searchValue\n  } = _ref;\n  const intl = useIntl();\n  const searchInput = useRef(null);\n  return __jsx(Form, {\n    style: {\n      padding: '0.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Field, {\n    className: \"searchbox\",\n    style: {\n      borderLeft: 0,\n      height: '2em',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    \"aria-label\": intl.formatMessage(messages.search),\n    onChange: event => onChange(event.target.value),\n    name: \"SearchableText\",\n    value: searchValue,\n    transparent: true,\n    autoComplete: \"off\",\n    placeholder: intl.formatMessage(messages.search),\n    title: intl.formatMessage(messages.search),\n    autoFocus: true,\n    ref: searchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), searchValue && __jsx(Button, {\n    className: \"clear-search-button\",\n    \"aria-label\": intl.formatMessage(messages.search),\n    onClick: () => {\n      onChange('');\n      searchInput.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: clearSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s(BlockChooserSearch, \"r5w3iYrwaipnuzb9InftH4pwPXU=\", false, function () {\n  return [useIntl];\n});\n\n_c = BlockChooserSearch;\nexport default BlockChooserSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockChooserSearch\");","map":{"version":3,"names":["React","useRef","Button","Form","Input","Icon","defineMessages","useIntl","clearSVG","messages","search","BlockChooserSearch","onChange","searchValue","intl","searchInput","padding","borderLeft","height","formatMessage","event","target","value","current","focus"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserSearch.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport { defineMessages, useIntl } from 'react-intl';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst BlockChooserSearch = ({ onChange, searchValue }) => {\n  const intl = useIntl();\n  const searchInput = useRef(null);\n\n  return (\n    <Form style={{ padding: '0.5em' }}>\n      <Form.Field\n        className=\"searchbox\"\n        style={{ borderLeft: 0, height: '2em', padding: 0 }}\n      >\n        {/* eslint-disable jsx-a11y/no-autofocus */}\n        <Input\n          aria-label={intl.formatMessage(messages.search)}\n          onChange={(event) => onChange(event.target.value)}\n          name=\"SearchableText\"\n          value={searchValue}\n          transparent\n          autoComplete=\"off\"\n          placeholder={intl.formatMessage(messages.search)}\n          title={intl.formatMessage(messages.search)}\n          autoFocus\n          ref={searchInput}\n        />\n        {searchValue && (\n          <Button\n            className=\"clear-search-button\"\n            aria-label={intl.formatMessage(messages.search)}\n            onClick={() => {\n              onChange('');\n              searchInput.current.focus();\n            }}\n          >\n            <Icon name={clearSVG} size=\"18px\" />\n          </Button>\n        )}\n      </Form.Field>\n    </Form>\n  );\n};\n\nexport default BlockChooserSearch;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,YAAxC;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;EAC9BI,MAAM;IAAA;IAAA;EAAA;AADwB,CAAD,CAA/B;;AAOA,MAAMC,kBAAkB,GAAG,QAA+B;EAAA;;EAAA,IAA9B;IAAEC,QAAF;IAAYC;EAAZ,CAA8B;EACxD,MAAMC,IAAI,GAAGP,OAAO,EAApB;EACA,MAAMQ,WAAW,GAAGd,MAAM,CAAC,IAAD,CAA1B;EAEA,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEe,OAAO,EAAE;IAAX,CAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAD,CAAM,KAAN;IACE,SAAS,EAAC,WADZ;IAEE,KAAK,EAAE;MAAEC,UAAU,EAAE,CAAd;MAAiBC,MAAM,EAAE,KAAzB;MAAgCF,OAAO,EAAE;IAAzC,CAFT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAKE,MAAC,KAAD;IACE,cAAYF,IAAI,CAACK,aAAL,CAAmBV,QAAQ,CAACC,MAA5B,CADd;IAEE,QAAQ,EAAGU,KAAD,IAAWR,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAF/B;IAGE,IAAI,EAAC,gBAHP;IAIE,KAAK,EAAET,WAJT;IAKE,WAAW,MALb;IAME,YAAY,EAAC,KANf;IAOE,WAAW,EAAEC,IAAI,CAACK,aAAL,CAAmBV,QAAQ,CAACC,MAA5B,CAPf;IAQE,KAAK,EAAEI,IAAI,CAACK,aAAL,CAAmBV,QAAQ,CAACC,MAA5B,CART;IASE,SAAS,MATX;IAUE,GAAG,EAAEK,WAVP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALF,EAiBGF,WAAW,IACV,MAAC,MAAD;IACE,SAAS,EAAC,qBADZ;IAEE,cAAYC,IAAI,CAACK,aAAL,CAAmBV,QAAQ,CAACC,MAA5B,CAFd;IAGE,OAAO,EAAE,MAAM;MACbE,QAAQ,CAAC,EAAD,CAAR;MACAG,WAAW,CAACQ,OAAZ,CAAoBC,KAApB;IACD,CANH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAQE,MAAC,IAAD;IAAM,IAAI,EAAEhB,QAAZ;IAAsB,IAAI,EAAC,MAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARF,CAlBJ,CADF,CADF;AAkCD,CAtCD;;GAAMG,kB;UACSJ,O;;;KADTI,kB;AAwCN,eAAeA,kBAAf"},"metadata":{"react-intl":{"messages":[{"id":"Search","defaultMessage":"Search"}]}},"sourceType":"module"}