{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Root reducer.\n * @module reducers/root\n */\nimport defaultReducers from '@plone/volto/reducers';\n/**\n * Root reducer.\n * @function\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\nconst reducers = _objectSpread({}, defaultReducers);\n\nexport default reducers;","map":{"version":3,"names":["defaultReducers","reducers"],"sources":["/home/jakob/workspace/training-project/src/reducers/index.js"],"sourcesContent":["/**\n * Root reducer.\n * @module reducers/root\n */\n\nimport defaultReducers from '@plone/volto/reducers';\n\n/**\n * Root reducer.\n * @function\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nconst reducers = {\n  ...defaultReducers,\n  // Add your reducers here\n};\n\nexport default reducers;\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,eAAP,MAA4B,uBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,qBACTD,eADS,CAAd;;AAKA,eAAeC,QAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}