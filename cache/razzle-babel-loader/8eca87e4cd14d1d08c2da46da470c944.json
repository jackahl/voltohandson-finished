{"ast":null,"code":"const _excluded = [\"condition\", \"as\"];\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/MaybeWrap/MaybeWrap.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nexport default function MaybeWrap(_ref) {\n  let {\n    condition,\n    as: Component = 'div'\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return condition ? __jsx(Component, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 22\n    }\n  })) : props.children;\n}","map":{"version":3,"names":["React","MaybeWrap","condition","as","Component","props","children"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/MaybeWrap/MaybeWrap.jsx"],"sourcesContent":["import React from 'react';\n\nexport default function MaybeWrap({\n  condition,\n  as: Component = 'div',\n  ...props\n}) {\n  return condition ? <Component {...props} /> : props.children;\n}\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,SAAT,OAIZ;EAAA,IAJ+B;IAChCC,SADgC;IAEhCC,EAAE,EAAEC,SAAS,GAAG;EAFgB,CAI/B;EAAA,IADEC,KACF;;EACD,OAAOH,SAAS,GAAG,MAAC,SAAD,eAAeG,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAH,GAA8BA,KAAK,CAACC,QAApD;AACD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}