{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n/**\n * Groups reducer.\n * @module reducers/groups/groups\n */\nimport { CREATE_GROUP, DELETE_GROUP, GET_GROUP, LIST_GROUPS, LIST_FILTER_GROUPS, UPDATE_GROUP } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  groups: [],\n  group: {}\n};\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\n\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n/**\n * Groups reducer.\n * @function groups\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\n\nexport default function groups() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case `${CREATE_GROUP}_PENDING`:\n    case `${DELETE_GROUP}_PENDING`:\n    case `${GET_GROUP}_PENDING`:\n    case `${LIST_GROUPS}_PENDING`:\n    case `${LIST_FILTER_GROUPS}_PENDING`:\n    case `${UPDATE_GROUP}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n\n    case `${GET_GROUP}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        group: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n\n    case `${LIST_GROUPS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n\n    case `${LIST_FILTER_GROUPS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filter_groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n\n    case `${CREATE_GROUP}_SUCCESS`:\n    case `${DELETE_GROUP}_SUCCESS`:\n    case `${UPDATE_GROUP}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n\n    case `${CREATE_GROUP}_FAIL`:\n    case `${DELETE_GROUP}_FAIL`:\n    case `${UPDATE_GROUP}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n\n    case `${GET_GROUP}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        group: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n\n    case `${LIST_GROUPS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n\n    case `${LIST_FILTER_GROUPS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filter_groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["CREATE_GROUP","DELETE_GROUP","GET_GROUP","LIST_GROUPS","LIST_FILTER_GROUPS","UPDATE_GROUP","initialState","create","loaded","loading","error","delete","get","list","update","groups","group","getRequestKey","actionType","split","toLowerCase","state","action","type","result","filter_groups"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/reducers/groups/groups.js"],"sourcesContent":["/**\n * Groups reducer.\n * @module reducers/groups/groups\n */\n\nimport {\n  CREATE_GROUP,\n  DELETE_GROUP,\n  GET_GROUP,\n  LIST_GROUPS,\n  LIST_FILTER_GROUPS,\n  UPDATE_GROUP,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  groups: [],\n  group: {},\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Groups reducer.\n * @function groups\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function groups(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_GROUP}_PENDING`:\n    case `${DELETE_GROUP}_PENDING`:\n    case `${GET_GROUP}_PENDING`:\n    case `${LIST_GROUPS}_PENDING`:\n    case `${LIST_FILTER_GROUPS}_PENDING`:\n    case `${UPDATE_GROUP}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        group: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        filter_groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_SUCCESS`:\n    case `${DELETE_GROUP}_SUCCESS`:\n    case `${UPDATE_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_FAIL`:\n    case `${DELETE_GROUP}_FAIL`:\n    case `${UPDATE_GROUP}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${GET_GROUP}_FAIL`:\n      return {\n        ...state,\n        group: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_GROUPS}_FAIL`:\n      return {\n        ...state,\n        groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_FAIL`:\n      return {\n        ...state,\n        filter_groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}