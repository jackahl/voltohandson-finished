{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/View/EventDatesInfo.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\nexport const datesForDisplay = (start, end, moment) => {\n  const mStart = moment(start);\n  const mEnd = moment(end);\n\n  if (!mStart.isValid() || !mEnd.isValid()) {\n    return null;\n  }\n\n  const sameDay = mStart.isSame(mEnd, 'day');\n  const sameTime = mStart.isSame(mEnd, 'minute');\n  return {\n    sameDay,\n    sameTime,\n    startDate: mStart.format('ll'),\n    startTime: mStart.format('LT'),\n    endDate: mEnd.format('ll'),\n    endTime: mEnd.format('LT')\n  };\n};\n\nconst When_ = _ref => {\n  _s();\n\n  let {\n    start,\n    end,\n    whole_day,\n    open_end,\n    moment: momentlib\n  } = _ref;\n  const lang = useSelector(state => state.intl.locale);\n  const moment = momentlib.default;\n  moment.locale(lang);\n  const datesInfo = datesForDisplay(start, end, moment);\n\n  if (!datesInfo) {\n    return;\n  } // TODO I18N INTL\n\n\n  return __jsx(\"p\", {\n    className: cx('event-when', {\n      'same-day': datesInfo.sameDay,\n      'same-time': datesInfo.sameTime,\n      'whole-day': whole_day,\n      'open-end': open_end\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, !datesInfo.sameDay ? __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"start-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, datesInfo.startDate), !whole_day && __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \" \"), __jsx(\"span\", {\n    className: \"start-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, datesInfo.startTime))), !open_end && __jsx(React.Fragment, null, \"\\xA0to\\xA0\", __jsx(\"span\", {\n    className: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"end-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, datesInfo.endDate), !whole_day && __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \" \"), __jsx(\"span\", {\n    className: \"end-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, datesInfo.endTime))))) : __jsx(React.Fragment, null, whole_day && __jsx(\"span\", {\n    className: \"start-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, datesInfo.startDate), open_end && !whole_day && __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"start-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, datesInfo.startDate), \"\\xA0from\\xA0\", __jsx(\"span\", {\n    className: \"start-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, datesInfo.startTime)), !(whole_day || open_end) && __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"start-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, datesInfo.startDate), \"\\xA0from\\xA0\", __jsx(\"span\", {\n    className: \"start-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, datesInfo.startTime), \"\\xA0to\\xA0\", __jsx(\"span\", {\n    className: \"end-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, datesInfo.endTime))));\n};\n\n_s(When_, \"YX9svgYxZ8mkOt/FPg3Kqpt9At4=\", false, function () {\n  return [useSelector];\n});\n\n_c = When_;\nexport const When = injectLazyLibs(['moment'])(When_);\nWhen.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string,\n  whole_day: PropTypes.bool,\n  open_end: PropTypes.bool\n};\nexport const Recurrence_ = _ref2 => {\n  let {\n    recurrence,\n    start,\n    moment: momentlib,\n    rrule\n  } = _ref2;\n  const moment = momentlib.default;\n  const {\n    RRule,\n    rrulestr\n  } = rrule;\n\n  if (recurrence.indexOf('DTSTART') < 0) {\n    var dtstart = RRule.optionsToString({\n      dtstart: new Date(start)\n    });\n    recurrence = dtstart + '\\n' + recurrence;\n  }\n\n  const rule = rrulestr(recurrence, {\n    unfold: true,\n    forceset: true\n  });\n  return __jsx(List, {\n    items: rule.all().map(date => datesForDisplay(date, undefined, moment)).map(date => date.startDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  });\n};\n_c2 = Recurrence_;\nexport const Recurrence = injectLazyLibs(['moment', 'rrule'])(Recurrence_);\nRecurrence.propTypes = {\n  recurrence: PropTypes.string.isRequired,\n  start: PropTypes.string.isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"When_\");\n$RefreshReg$(_c2, \"Recurrence_\");","map":{"version":3,"names":["React","PropTypes","List","cx","injectLazyLibs","useSelector","datesForDisplay","start","end","moment","mStart","mEnd","isValid","sameDay","isSame","sameTime","startDate","format","startTime","endDate","endTime","When_","whole_day","open_end","momentlib","lang","state","intl","locale","default","datesInfo","When","propTypes","string","isRequired","bool","Recurrence_","recurrence","rrule","RRule","rrulestr","indexOf","dtstart","optionsToString","Date","rule","unfold","forceset","all","map","date","undefined","Recurrence"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/View/EventDatesInfo.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'semantic-ui-react';\nimport cx from 'classnames';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\n\nexport const datesForDisplay = (start, end, moment) => {\n  const mStart = moment(start);\n  const mEnd = moment(end);\n  if (!mStart.isValid() || !mEnd.isValid()) {\n    return null;\n  }\n  const sameDay = mStart.isSame(mEnd, 'day');\n  const sameTime = mStart.isSame(mEnd, 'minute');\n  return {\n    sameDay,\n    sameTime,\n    startDate: mStart.format('ll'),\n    startTime: mStart.format('LT'),\n    endDate: mEnd.format('ll'),\n    endTime: mEnd.format('LT'),\n  };\n};\n\nconst When_ = ({ start, end, whole_day, open_end, moment: momentlib }) => {\n  const lang = useSelector((state) => state.intl.locale);\n\n  const moment = momentlib.default;\n  moment.locale(lang);\n\n  const datesInfo = datesForDisplay(start, end, moment);\n  if (!datesInfo) {\n    return;\n  }\n  // TODO I18N INTL\n  return (\n    <p\n      className={cx('event-when', {\n        'same-day': datesInfo.sameDay,\n        'same-time': datesInfo.sameTime,\n        'whole-day': whole_day,\n        'open-end': open_end,\n      })}\n    >\n      {!datesInfo.sameDay ? (\n        <>\n          <span className=\"start\">\n            <span className=\"start-date\">{datesInfo.startDate}</span>\n            {!whole_day && (\n              <>\n                {/* Plone has an optional word based on locale here */}\n                <span> </span>\n                <span className=\"start-time\">{datesInfo.startTime}</span>\n              </>\n            )}\n          </span>\n          {!open_end && (\n            <>\n              &nbsp;to&nbsp;\n              <span className=\"end\">\n                <span className=\"end-date\">{datesInfo.endDate}</span>\n                {!whole_day && (\n                  <>\n                    {/* Plone has an optional word based on locale here */}\n                    <span> </span>\n                    <span className=\"end-time\">{datesInfo.endTime}</span>\n                  </>\n                )}\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          {whole_day && (\n            <span className=\"start-date\">{datesInfo.startDate}</span>\n          )}\n          {open_end && !whole_day && (\n            <>\n              <span className=\"start-date\">{datesInfo.startDate}</span>\n              &nbsp;from&nbsp;\n              <span className=\"start-time\">{datesInfo.startTime}</span>\n            </>\n          )}\n          {!(whole_day || open_end) && (\n            <>\n              <span className=\"start-date\">{datesInfo.startDate}</span>\n              &nbsp;from&nbsp;\n              <span className=\"start-time\">{datesInfo.startTime}</span>\n              &nbsp;to&nbsp;\n              <span className=\"end-time\">{datesInfo.endTime}</span>\n            </>\n          )}\n        </>\n      )}\n    </p>\n  );\n};\n\nexport const When = injectLazyLibs(['moment'])(When_);\n\nWhen.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string,\n  whole_day: PropTypes.bool,\n  open_end: PropTypes.bool,\n};\n\nexport const Recurrence_ = ({\n  recurrence,\n  start,\n  moment: momentlib,\n  rrule,\n}) => {\n  const moment = momentlib.default;\n  const { RRule, rrulestr } = rrule;\n  if (recurrence.indexOf('DTSTART') < 0) {\n    var dtstart = RRule.optionsToString({\n      dtstart: new Date(start),\n    });\n    recurrence = dtstart + '\\n' + recurrence;\n  }\n  const rule = rrulestr(recurrence, { unfold: true, forceset: true });\n\n  return (\n    <List\n      items={rule\n        .all()\n        .map((date) => datesForDisplay(date, undefined, moment))\n        .map((date) => date.startDate)}\n    />\n  );\n};\nexport const Recurrence = injectLazyLibs(['moment', 'rrule'])(Recurrence_);\n\nRecurrence.propTypes = {\n  recurrence: PropTypes.string.isRequired,\n  start: PropTypes.string.isRequired,\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,SAASC,cAAT,QAA+B,wCAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,MAAb,KAAwB;EACrD,MAAMC,MAAM,GAAGD,MAAM,CAACF,KAAD,CAArB;EACA,MAAMI,IAAI,GAAGF,MAAM,CAACD,GAAD,CAAnB;;EACA,IAAI,CAACE,MAAM,CAACE,OAAP,EAAD,IAAqB,CAACD,IAAI,CAACC,OAAL,EAA1B,EAA0C;IACxC,OAAO,IAAP;EACD;;EACD,MAAMC,OAAO,GAAGH,MAAM,CAACI,MAAP,CAAcH,IAAd,EAAoB,KAApB,CAAhB;EACA,MAAMI,QAAQ,GAAGL,MAAM,CAACI,MAAP,CAAcH,IAAd,EAAoB,QAApB,CAAjB;EACA,OAAO;IACLE,OADK;IAELE,QAFK;IAGLC,SAAS,EAAEN,MAAM,CAACO,MAAP,CAAc,IAAd,CAHN;IAILC,SAAS,EAAER,MAAM,CAACO,MAAP,CAAc,IAAd,CAJN;IAKLE,OAAO,EAAER,IAAI,CAACM,MAAL,CAAY,IAAZ,CALJ;IAMLG,OAAO,EAAET,IAAI,CAACM,MAAL,CAAY,IAAZ;EANJ,CAAP;AAQD,CAhBM;;AAkBP,MAAMI,KAAK,GAAG,QAA4D;EAAA;;EAAA,IAA3D;IAAEd,KAAF;IAASC,GAAT;IAAcc,SAAd;IAAyBC,QAAzB;IAAmCd,MAAM,EAAEe;EAA3C,CAA2D;EACxE,MAAMC,IAAI,GAAGpB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,MAAvB,CAAxB;EAEA,MAAMnB,MAAM,GAAGe,SAAS,CAACK,OAAzB;EACApB,MAAM,CAACmB,MAAP,CAAcH,IAAd;EAEA,MAAMK,SAAS,GAAGxB,eAAe,CAACC,KAAD,EAAQC,GAAR,EAAaC,MAAb,CAAjC;;EACA,IAAI,CAACqB,SAAL,EAAgB;IACd;EACD,CATuE,CAUxE;;;EACA,OACE;IACE,SAAS,EAAE3B,EAAE,CAAC,YAAD,EAAe;MAC1B,YAAY2B,SAAS,CAACjB,OADI;MAE1B,aAAaiB,SAAS,CAACf,QAFG;MAG1B,aAAaO,SAHa;MAI1B,YAAYC;IAJc,CAAf,CADf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAQG,CAACO,SAAS,CAACjB,OAAX,GACC,4BACE;IAAM,SAAS,EAAC,OAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAM,SAAS,EAAC,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA8BiB,SAAS,CAACd,SAAxC,CADF,EAEG,CAACM,SAAD,IACC,4BAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAFF,EAGE;IAAM,SAAS,EAAC,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA8BQ,SAAS,CAACZ,SAAxC,CAHF,CAHJ,CADF,EAWG,CAACK,QAAD,IACC,0CAEE;IAAM,SAAS,EAAC,KAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAM,SAAS,EAAC,UAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA4BO,SAAS,CAACX,OAAtC,CADF,EAEG,CAACG,SAAD,IACC,4BAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAFF,EAGE;IAAM,SAAS,EAAC,UAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA4BQ,SAAS,CAACV,OAAtC,CAHF,CAHJ,CAFF,CAZJ,CADD,GA6BC,4BACGE,SAAS,IACR;IAAM,SAAS,EAAC,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA8BQ,SAAS,CAACd,SAAxC,CAFJ,EAIGO,QAAQ,IAAI,CAACD,SAAb,IACC,4BACE;IAAM,SAAS,EAAC,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA8BQ,SAAS,CAACd,SAAxC,CADF,kBAGE;IAAM,SAAS,EAAC,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA8Bc,SAAS,CAACZ,SAAxC,CAHF,CALJ,EAWG,EAAEI,SAAS,IAAIC,QAAf,KACC,4BACE;IAAM,SAAS,EAAC,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA8BO,SAAS,CAACd,SAAxC,CADF,kBAGE;IAAM,SAAS,EAAC,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA8Bc,SAAS,CAACZ,SAAxC,CAHF,gBAKE;IAAM,SAAS,EAAC,UAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA4BY,SAAS,CAACV,OAAtC,CALF,CAZJ,CArCJ,CADF;AA8DD,CAzED;;GAAMC,K;UACShB,W;;;KADTgB,K;AA2EN,OAAO,MAAMU,IAAI,GAAG3B,cAAc,CAAC,CAAC,QAAD,CAAD,CAAd,CAA2BiB,KAA3B,CAAb;AAEPU,IAAI,CAACC,SAAL,GAAiB;EACfzB,KAAK,EAAEN,SAAS,CAACgC,MAAV,CAAiBC,UADT;EAEf1B,GAAG,EAAEP,SAAS,CAACgC,MAFA;EAGfX,SAAS,EAAErB,SAAS,CAACkC,IAHN;EAIfZ,QAAQ,EAAEtB,SAAS,CAACkC;AAJL,CAAjB;AAOA,OAAO,MAAMC,WAAW,GAAG,SAKrB;EAAA,IALsB;IAC1BC,UAD0B;IAE1B9B,KAF0B;IAG1BE,MAAM,EAAEe,SAHkB;IAI1Bc;EAJ0B,CAKtB;EACJ,MAAM7B,MAAM,GAAGe,SAAS,CAACK,OAAzB;EACA,MAAM;IAAEU,KAAF;IAASC;EAAT,IAAsBF,KAA5B;;EACA,IAAID,UAAU,CAACI,OAAX,CAAmB,SAAnB,IAAgC,CAApC,EAAuC;IACrC,IAAIC,OAAO,GAAGH,KAAK,CAACI,eAAN,CAAsB;MAClCD,OAAO,EAAE,IAAIE,IAAJ,CAASrC,KAAT;IADyB,CAAtB,CAAd;IAGA8B,UAAU,GAAGK,OAAO,GAAG,IAAV,GAAiBL,UAA9B;EACD;;EACD,MAAMQ,IAAI,GAAGL,QAAQ,CAACH,UAAD,EAAa;IAAES,MAAM,EAAE,IAAV;IAAgBC,QAAQ,EAAE;EAA1B,CAAb,CAArB;EAEA,OACE,MAAC,IAAD;IACE,KAAK,EAAEF,IAAI,CACRG,GADI,GAEJC,GAFI,CAECC,IAAD,IAAU5C,eAAe,CAAC4C,IAAD,EAAOC,SAAP,EAAkB1C,MAAlB,CAFzB,EAGJwC,GAHI,CAGCC,IAAD,IAAUA,IAAI,CAAClC,SAHf,CADT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AAQD,CAxBM;MAAMoB,W;AAyBb,OAAO,MAAMgB,UAAU,GAAGhD,cAAc,CAAC,CAAC,QAAD,EAAW,OAAX,CAAD,CAAd,CAAoCgC,WAApC,CAAnB;AAEPgB,UAAU,CAACpB,SAAX,GAAuB;EACrBK,UAAU,EAAEpC,SAAS,CAACgC,MAAV,CAAiBC,UADR;EAErB3B,KAAK,EAAEN,SAAS,CAACgC,MAAV,CAAiBC;AAFH,CAAvB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}