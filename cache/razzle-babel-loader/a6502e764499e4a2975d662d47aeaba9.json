{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Widgets/ImageWidget.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport cx from 'classnames';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nconst niceBytes = bytes => {\n  bytes = Number(bytes);\n  const divider = 1024;\n  const magnitude = Math.log(bytes) / Math.log(divider) | 0;\n  const result = bytes / Math.pow(divider, magnitude);\n  const fixed = result.toFixed(0);\n  const suffix = magnitude ? 'kMGTPEZY'[magnitude - 1] + 'B' : 'B';\n  return fixed + suffix;\n};\n\nconst ImageWidget = _ref => {\n  let {\n    value,\n    className\n  } = _ref;\n  return value ? __jsx(\"span\", {\n    className: cx(className, 'image', 'widget'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: value.data ? `data:${value['content-type']};base64,${value.data}` : flattenToAppURL(value.download || ''),\n    alt: value.file_name || '',\n    \"data-size\": value.size || 0,\n    \"data-size-fmt\": niceBytes(value.size || 0),\n    \"data-content-type\": value['content-type'] || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })) : '';\n};\n\n_c = ImageWidget;\nexport default ImageWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageWidget\");","map":{"version":3,"names":["React","cx","flattenToAppURL","niceBytes","bytes","Number","divider","magnitude","Math","log","result","pow","fixed","toFixed","suffix","ImageWidget","value","className","data","download","file_name","size"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Widgets/ImageWidget.jsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nconst niceBytes = (bytes) => {\n  bytes = Number(bytes);\n\n  const divider = 1024;\n  const magnitude = (Math.log(bytes) / Math.log(divider)) | 0;\n  const result = bytes / Math.pow(divider, magnitude);\n  const fixed = result.toFixed(0);\n\n  const suffix = magnitude ? 'kMGTPEZY'[magnitude - 1] + 'B' : 'B';\n\n  return fixed + suffix;\n};\n\nconst ImageWidget = ({ value, className }) =>\n  value ? (\n    <span className={cx(className, 'image', 'widget')}>\n      <img\n        src={\n          value.data\n            ? `data:${value['content-type']};base64,${value.data}`\n            : flattenToAppURL(value.download || '')\n        }\n        alt={value.file_name || ''}\n        data-size={value.size || 0}\n        data-size-fmt={niceBytes(value.size || 0)}\n        data-content-type={value['content-type'] || ''}\n      />\n    </span>\n  ) : (\n    ''\n  );\n\nexport default ImageWidget;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAC3BA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAd;EAEA,MAAME,OAAO,GAAG,IAAhB;EACA,MAAMC,SAAS,GAAIC,IAAI,CAACC,GAAL,CAASL,KAAT,IAAkBI,IAAI,CAACC,GAAL,CAASH,OAAT,CAAnB,GAAwC,CAA1D;EACA,MAAMI,MAAM,GAAGN,KAAK,GAAGI,IAAI,CAACG,GAAL,CAASL,OAAT,EAAkBC,SAAlB,CAAvB;EACA,MAAMK,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAe,CAAf,CAAd;EAEA,MAAMC,MAAM,GAAGP,SAAS,GAAG,WAAWA,SAAS,GAAG,CAAvB,IAA4B,GAA/B,GAAqC,GAA7D;EAEA,OAAOK,KAAK,GAAGE,MAAf;AACD,CAXD;;AAaA,MAAMC,WAAW,GAAG;EAAA,IAAC;IAAEC,KAAF;IAASC;EAAT,CAAD;EAAA,OAClBD,KAAK,GACH;IAAM,SAAS,EAAEf,EAAE,CAACgB,SAAD,EAAY,OAAZ,EAAqB,QAArB,CAAnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IACE,GAAG,EACDD,KAAK,CAACE,IAAN,GACK,QAAOF,KAAK,CAAC,cAAD,CAAiB,WAAUA,KAAK,CAACE,IAAK,EADvD,GAEIhB,eAAe,CAACc,KAAK,CAACG,QAAN,IAAkB,EAAnB,CAJvB;IAME,GAAG,EAAEH,KAAK,CAACI,SAAN,IAAmB,EAN1B;IAOE,aAAWJ,KAAK,CAACK,IAAN,IAAc,CAP3B;IAQE,iBAAelB,SAAS,CAACa,KAAK,CAACK,IAAN,IAAc,CAAf,CAR1B;IASE,qBAAmBL,KAAK,CAAC,cAAD,CAAL,IAAyB,EAT9C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADG,GAeH,EAhBgB;AAAA,CAApB;;KAAMD,W;AAmBN,eAAeA,WAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}