{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/FormattedDate/FormattedDate.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { formatDate, long_date_format } from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\n/**\n * Friendly formatting of dates\n */\n\nconst FormattedDate = _ref => {\n  _s();\n\n  let {\n    date,\n    format,\n    long,\n    includeTime,\n    relative,\n    className,\n    locale,\n    children\n  } = _ref;\n  const language = useSelector(state => locale || state.intl.locale);\n\n  const toDate = d => typeof d === 'string' ? new Date(d) : d;\n\n  const args = {\n    date,\n    long,\n    includeTime,\n    format,\n    locale: language\n  };\n  return __jsx(\"time\", {\n    className: className,\n    dateTime: date,\n    title: new Intl.DateTimeFormat(language, long_date_format).format(new Date(toDate(date))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, children ? children(formatDate(_objectSpread(_objectSpread({}, args), {}, {\n    formatToParts: true\n  }))) : formatDate(args));\n};\n\n_s(FormattedDate, \"lQANm1MwgmwtuScNKGsbP20Mv9w=\", false, function () {\n  return [useSelector];\n});\n\n_c = FormattedDate;\nexport default FormattedDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormattedDate\");","map":{"version":3,"names":["React","formatDate","long_date_format","useSelector","FormattedDate","date","format","long","includeTime","relative","className","locale","children","language","state","intl","toDate","d","Date","args","Intl","DateTimeFormat","formatToParts"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/FormattedDate/FormattedDate.jsx"],"sourcesContent":["import React from 'react';\nimport { formatDate, long_date_format } from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\n\n/**\n * Friendly formatting of dates\n */\nconst FormattedDate = ({\n  date,\n  format,\n  long,\n  includeTime,\n  relative,\n  className,\n  locale,\n  children,\n}) => {\n  const language = useSelector((state) => locale || state.intl.locale);\n  const toDate = (d) => (typeof d === 'string' ? new Date(d) : d);\n  const args = { date, long, includeTime, format, locale: language };\n\n  return (\n    <time\n      className={className}\n      dateTime={date}\n      title={new Intl.DateTimeFormat(language, long_date_format).format(\n        new Date(toDate(date)),\n      )}\n    >\n      {children\n        ? children(\n            formatDate({\n              ...args,\n              formatToParts: true,\n            }),\n          )\n        : formatDate(args)}\n    </time>\n  );\n};\n\nexport default FormattedDate;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,iCAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,QAShB;EAAA;;EAAA,IATiB;IACrBC,IADqB;IAErBC,MAFqB;IAGrBC,IAHqB;IAIrBC,WAJqB;IAKrBC,QALqB;IAMrBC,SANqB;IAOrBC,MAPqB;IAQrBC;EARqB,CASjB;EACJ,MAAMC,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAWH,MAAM,IAAIG,KAAK,CAACC,IAAN,CAAWJ,MAAjC,CAA5B;;EACA,MAAMK,MAAM,GAAIC,CAAD,IAAQ,OAAOA,CAAP,KAAa,QAAb,GAAwB,IAAIC,IAAJ,CAASD,CAAT,CAAxB,GAAsCA,CAA7D;;EACA,MAAME,IAAI,GAAG;IAAEd,IAAF;IAAQE,IAAR;IAAcC,WAAd;IAA2BF,MAA3B;IAAmCK,MAAM,EAAEE;EAA3C,CAAb;EAEA,OACE;IACE,SAAS,EAAEH,SADb;IAEE,QAAQ,EAAEL,IAFZ;IAGE,KAAK,EAAE,IAAIe,IAAI,CAACC,cAAT,CAAwBR,QAAxB,EAAkCX,gBAAlC,EAAoDI,MAApD,CACL,IAAIY,IAAJ,CAASF,MAAM,CAACX,IAAD,CAAf,CADK,CAHT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAOGO,QAAQ,GACLA,QAAQ,CACNX,UAAU,iCACLkB,IADK;IAERG,aAAa,EAAE;EAFP,GADJ,CADH,GAOLrB,UAAU,CAACkB,IAAD,CAdhB,CADF;AAkBD,CAhCD;;GAAMf,a;UAUaD,W;;;KAVbC,a;AAkCN,eAAeA,aAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}