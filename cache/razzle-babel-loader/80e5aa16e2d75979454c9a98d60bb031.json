{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Contents/ContentsIndexHeader.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * Contents index header component.\n * @module components/manage/Contents/ContentsIndexHeader\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nconst widthValues = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fiveteen', 'sixteen'];\n/**\n * Contents index header component class.\n * @function ContentsIndexHeaderComponent\n * @returns {string} Markup of the component.\n */\n\nexport const ContentsIndexHeaderComponent = ({\n  intl,\n  width,\n  label,\n  connectDragSource,\n  connectDropTarget,\n  isDragging\n}) => connectDropTarget(connectDragSource(__jsx(\"th\", {\n  className: `${widthValues[width - 2]} wide`,\n  style: {\n    opacity: isDragging ? 0.5 : 1,\n    cursor: 'move'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }\n}, intl.formatMessage({\n  id: label,\n  defaultMessage: label\n}))));\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\nContentsIndexHeaderComponent.propTypes = {\n  width: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderIndex: PropTypes.func.isRequired\n};\n\nconst DragDropConnector = props => {\n  const {\n    DropTarget,\n    DragSource\n  } = props.reactDnd;\n  const DndConnectedContentsIndexHeader = React.useMemo(() => DropTarget('index', {\n    hover(props, monitor) {\n      const dragOrder = monitor.getItem().order;\n      const hoverOrder = props.order;\n\n      if (dragOrder === hoverOrder) {\n        return;\n      }\n\n      props.onOrderIndex(dragOrder, hoverOrder - dragOrder);\n      monitor.getItem().order = hoverOrder;\n    }\n\n  }, connect => ({\n    connectDropTarget: connect.dropTarget()\n  }))(DragSource('index', {\n    beginDrag(props) {\n      return {\n        id: props.label,\n        order: props.order\n      };\n    }\n\n  }, (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  }))(injectIntl(ContentsIndexHeaderComponent))), [DragSource, DropTarget]);\n  return __jsx(DndConnectedContentsIndexHeader, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default injectLazyLibs('reactDnd')(DragDropConnector);","map":{"version":3,"names":["React","PropTypes","injectIntl","injectLazyLibs","widthValues","ContentsIndexHeaderComponent","intl","width","label","connectDragSource","connectDropTarget","isDragging","opacity","cursor","formatMessage","id","defaultMessage","propTypes","number","isRequired","string","func","bool","order","onOrderIndex","DragDropConnector","props","DropTarget","DragSource","reactDnd","DndConnectedContentsIndexHeader","useMemo","hover","monitor","dragOrder","getItem","hoverOrder","connect","dropTarget","beginDrag","dragSource"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Contents/ContentsIndexHeader.jsx"],"sourcesContent":["/**\n * Contents index header component.\n * @module components/manage/Contents/ContentsIndexHeader\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst widthValues = [\n  'one',\n  'two',\n  'three',\n  'four',\n  'five',\n  'six',\n  'seven',\n  'eight',\n  'nine',\n  'ten',\n  'eleven',\n  'twelve',\n  'thirteen',\n  'fourteen',\n  'fiveteen',\n  'sixteen',\n];\n\n/**\n * Contents index header component class.\n * @function ContentsIndexHeaderComponent\n * @returns {string} Markup of the component.\n */\nexport const ContentsIndexHeaderComponent = ({\n  intl,\n  width,\n  label,\n  connectDragSource,\n  connectDropTarget,\n  isDragging,\n}) =>\n  connectDropTarget(\n    connectDragSource(\n      <th\n        className={`${widthValues[width - 2]} wide`}\n        style={{ opacity: isDragging ? 0.5 : 1, cursor: 'move' }}\n      >\n        {intl.formatMessage({\n          id: label,\n          defaultMessage: label,\n        })}\n      </th>,\n    ),\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nContentsIndexHeaderComponent.propTypes = {\n  width: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderIndex: PropTypes.func.isRequired,\n};\n\nconst DragDropConnector = (props) => {\n  const { DropTarget, DragSource } = props.reactDnd;\n\n  const DndConnectedContentsIndexHeader = React.useMemo(\n    () =>\n      DropTarget(\n        'index',\n        {\n          hover(props, monitor) {\n            const dragOrder = monitor.getItem().order;\n            const hoverOrder = props.order;\n\n            if (dragOrder === hoverOrder) {\n              return;\n            }\n\n            props.onOrderIndex(dragOrder, hoverOrder - dragOrder);\n\n            monitor.getItem().order = hoverOrder;\n          },\n        },\n        (connect) => ({\n          connectDropTarget: connect.dropTarget(),\n        }),\n      )(\n        DragSource(\n          'index',\n          {\n            beginDrag(props) {\n              return {\n                id: props.label,\n                order: props.order,\n              };\n            },\n          },\n          (connect, monitor) => ({\n            connectDragSource: connect.dragSource(),\n            isDragging: monitor.isDragging(),\n          }),\n        )(injectIntl(ContentsIndexHeaderComponent)),\n      ),\n    [DragSource, DropTarget],\n  );\n\n  return <DndConnectedContentsIndexHeader {...props} />;\n};\n\nexport default injectLazyLibs('reactDnd')(DragDropConnector);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}