{"ast":null,"code":"export const matchesEntityType = type => type === 'LINK';\n/**\n *\n *\n * @export strategy\n * @param {*} contentBlock contentBlock\n * @param {*} cb cb\n * @param {*} contentState contentState\n * @returns {*} string\n */\n\nexport default function strategy(contentBlock, cb, contentState) {\n  if (!contentState) return;\n  contentBlock.findEntityRanges(character => {\n    const entityKey = character.getEntity();\n    return entityKey !== null && matchesEntityType(contentState.getEntity(entityKey).getType());\n  }, cb);\n}","map":{"version":3,"names":["matchesEntityType","type","strategy","contentBlock","cb","contentState","findEntityRanges","character","entityKey","getEntity","getType"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/AnchorPlugin/linkStrategy.js"],"sourcesContent":["export const matchesEntityType = (type) => type === 'LINK';\n\n/**\n *\n *\n * @export strategy\n * @param {*} contentBlock contentBlock\n * @param {*} cb cb\n * @param {*} contentState contentState\n * @returns {*} string\n */\nexport default function strategy(contentBlock, cb, contentState) {\n  if (!contentState) return;\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      matchesEntityType(contentState.getEntity(entityKey).getType())\n    );\n  }, cb);\n}\n"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAIC,IAAD,IAAUA,IAAI,KAAK,MAA7C;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,CAAkBC,YAAlB,EAAgCC,EAAhC,EAAoCC,YAApC,EAAkD;EAC/D,IAAI,CAACA,YAAL,EAAmB;EACnBF,YAAY,CAACG,gBAAb,CAA+BC,SAAD,IAAe;IAC3C,MAAMC,SAAS,GAAGD,SAAS,CAACE,SAAV,EAAlB;IACA,OACED,SAAS,KAAK,IAAd,IACAR,iBAAiB,CAACK,YAAY,CAACI,SAAb,CAAuBD,SAAvB,EAAkCE,OAAlC,EAAD,CAFnB;EAID,CAND,EAMGN,EANH;AAOD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}