{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n/**\n * Vocabularies actions.\n * @module actions/vocabularies/vocabularies\n */\nimport { GET_VOCABULARY, GET_VOCABULARY_TOKEN_TITLE } from '@plone/volto/constants/ActionTypes';\nimport { getVocabName } from '@plone/volto/helpers/Vocabularies/Vocabularies';\nimport qs from 'query-string';\n/**\n * Get vocabulary given a URL (coming from a Schema) or from a vocabulary name.\n * @function getVocabulary\n * @param {string} vocabNameOrURL Full API URL of vocabulary or vocabulary name\n * @param {string} query Only include results containing this string.\n * @param {number} start Start of result batch.\n * @param {number} b_size The size of the batch.\n * @param {string} subrequest Name of the subrequest.\n * @returns {Object} Get vocabulary action.\n */\n\nexport function getVocabulary(_ref) {\n  let {\n    vocabNameOrURL,\n    query = null,\n    start = 0,\n    size,\n    subrequest\n  } = _ref;\n  const vocabulary = getVocabName(vocabNameOrURL);\n  let queryString = `b_start=${start}${size ? '&b_size=' + size : ''}`;\n\n  if (query) {\n    queryString = `${queryString}&title=${query}`;\n  }\n\n  return {\n    type: GET_VOCABULARY,\n    vocabulary: vocabNameOrURL,\n    start,\n    request: {\n      op: 'get',\n      path: `/@vocabularies/${vocabulary}?${queryString}`\n    },\n    subrequest\n  };\n}\n/**\n * Get the title value given a token from vocabulary given a vocabulary URL\n * (coming from a Schema) or from a vocabulary name.\n * @function getVocabularyTokenTitle\n * @param {string} vocabNameOrURL Full API URL of vocabulary or vocabulary name\n * @param {string} token Only include results containing this string.\n * @returns {Object} Get vocabulary action.\n */\n\nexport function getVocabularyTokenTitle(_ref2) {\n  let {\n    vocabNameOrURL,\n    token = null,\n    tokens = null,\n    subrequest\n  } = _ref2;\n  // In case we have a URL, we have to get the vocabulary name\n  const vocabulary = getVocabName(vocabNameOrURL);\n\n  const queryString = _objectSpread(_objectSpread({}, token && {\n    token\n  }), tokens && {\n    tokens\n  });\n\n  return {\n    type: GET_VOCABULARY_TOKEN_TITLE,\n    vocabulary: vocabNameOrURL,\n    token,\n    tokens,\n    subrequest,\n    request: {\n      op: 'get',\n      path: `/@vocabularies/${vocabulary}?b_size=-1&${qs.stringify(queryString, {\n        encode: false\n      })}`\n    }\n  };\n}","map":{"version":3,"names":["GET_VOCABULARY","GET_VOCABULARY_TOKEN_TITLE","getVocabName","qs","getVocabulary","vocabNameOrURL","query","start","size","subrequest","vocabulary","queryString","type","request","op","path","getVocabularyTokenTitle","token","tokens","stringify","encode"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/actions/vocabularies/vocabularies.js"],"sourcesContent":["/**\n * Vocabularies actions.\n * @module actions/vocabularies/vocabularies\n */\n\nimport {\n  GET_VOCABULARY,\n  GET_VOCABULARY_TOKEN_TITLE,\n} from '@plone/volto/constants/ActionTypes';\nimport { getVocabName } from '@plone/volto/helpers/Vocabularies/Vocabularies';\nimport qs from 'query-string';\n\n/**\n * Get vocabulary given a URL (coming from a Schema) or from a vocabulary name.\n * @function getVocabulary\n * @param {string} vocabNameOrURL Full API URL of vocabulary or vocabulary name\n * @param {string} query Only include results containing this string.\n * @param {number} start Start of result batch.\n * @param {number} b_size The size of the batch.\n * @param {string} subrequest Name of the subrequest.\n * @returns {Object} Get vocabulary action.\n */\nexport function getVocabulary({\n  vocabNameOrURL,\n  query = null,\n  start = 0,\n  size,\n  subrequest,\n}) {\n  const vocabulary = getVocabName(vocabNameOrURL);\n\n  let queryString = `b_start=${start}${size ? '&b_size=' + size : ''}`;\n\n  if (query) {\n    queryString = `${queryString}&title=${query}`;\n  }\n  return {\n    type: GET_VOCABULARY,\n    vocabulary: vocabNameOrURL,\n    start,\n    request: {\n      op: 'get',\n      path: `/@vocabularies/${vocabulary}?${queryString}`,\n    },\n    subrequest,\n  };\n}\n\n/**\n * Get the title value given a token from vocabulary given a vocabulary URL\n * (coming from a Schema) or from a vocabulary name.\n * @function getVocabularyTokenTitle\n * @param {string} vocabNameOrURL Full API URL of vocabulary or vocabulary name\n * @param {string} token Only include results containing this string.\n * @returns {Object} Get vocabulary action.\n */\nexport function getVocabularyTokenTitle({\n  vocabNameOrURL,\n  token = null,\n  tokens = null,\n  subrequest,\n}) {\n  // In case we have a URL, we have to get the vocabulary name\n  const vocabulary = getVocabName(vocabNameOrURL);\n  const queryString = {\n    ...(token && { token }),\n    ...(tokens && { tokens }),\n  };\n\n  return {\n    type: GET_VOCABULARY_TOKEN_TITLE,\n    vocabulary: vocabNameOrURL,\n    token,\n    tokens,\n    subrequest,\n    request: {\n      op: 'get',\n      path: `/@vocabularies/${vocabulary}?b_size=-1&${qs.stringify(\n        queryString,\n        {\n          encode: false,\n        },\n      )}`,\n    },\n  };\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,SACEA,cADF,EAEEC,0BAFF,QAGO,oCAHP;AAIA,SAASC,YAAT,QAA6B,gDAA7B;AACA,OAAOC,EAAP,MAAe,cAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,OAMJ;EAAA,IAN2B;IAC5BC,cAD4B;IAE5BC,KAAK,GAAG,IAFoB;IAG5BC,KAAK,GAAG,CAHoB;IAI5BC,IAJ4B;IAK5BC;EAL4B,CAM3B;EACD,MAAMC,UAAU,GAAGR,YAAY,CAACG,cAAD,CAA/B;EAEA,IAAIM,WAAW,GAAI,WAAUJ,KAAM,GAAEC,IAAI,GAAG,aAAaA,IAAhB,GAAuB,EAAG,EAAnE;;EAEA,IAAIF,KAAJ,EAAW;IACTK,WAAW,GAAI,GAAEA,WAAY,UAASL,KAAM,EAA5C;EACD;;EACD,OAAO;IACLM,IAAI,EAAEZ,cADD;IAELU,UAAU,EAAEL,cAFP;IAGLE,KAHK;IAILM,OAAO,EAAE;MACPC,EAAE,EAAE,KADG;MAEPC,IAAI,EAAG,kBAAiBL,UAAW,IAAGC,WAAY;IAF3C,CAJJ;IAQLF;EARK,CAAP;AAUD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,uBAAT,QAKJ;EAAA,IALqC;IACtCX,cADsC;IAEtCY,KAAK,GAAG,IAF8B;IAGtCC,MAAM,GAAG,IAH6B;IAItCT;EAJsC,CAKrC;EACD;EACA,MAAMC,UAAU,GAAGR,YAAY,CAACG,cAAD,CAA/B;;EACA,MAAMM,WAAW,mCACXM,KAAK,IAAI;IAAEA;EAAF,CADE,GAEXC,MAAM,IAAI;IAAEA;EAAF,CAFC,CAAjB;;EAKA,OAAO;IACLN,IAAI,EAAEX,0BADD;IAELS,UAAU,EAAEL,cAFP;IAGLY,KAHK;IAILC,MAJK;IAKLT,UALK;IAMLI,OAAO,EAAE;MACPC,EAAE,EAAE,KADG;MAEPC,IAAI,EAAG,kBAAiBL,UAAW,cAAaP,EAAE,CAACgB,SAAH,CAC9CR,WAD8C,EAE9C;QACES,MAAM,EAAE;MADV,CAF8C,CAK9C;IAPK;EANJ,CAAP;AAgBD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}