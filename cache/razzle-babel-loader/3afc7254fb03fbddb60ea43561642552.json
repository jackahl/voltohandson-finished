{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n/**\n * Controlpanels reducer.\n * @module reducers/controlpanels/controlpanels\n */\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { GET_CONTROLPANEL, POST_CONTROLPANEL, DELETE_CONTROLPANEL, LIST_CONTROLPANELS, UPDATE_CONTROLPANEL, SYSTEM_INFORMATION, DATABASE_INFORMATION } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  post: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  controlpanel: null,\n  controlpanels: [],\n  systeminformation: null,\n  databaseinformation: null\n};\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\n\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n/**\n * Controlpanels reducer.\n * @function controlpanels\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\n\nexport default function controlpanels() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case `${GET_CONTROLPANEL}_PENDING`:\n    case `${LIST_CONTROLPANELS}_PENDING`:\n    case `${SYSTEM_INFORMATION}_PENDING`:\n    case `${DATABASE_INFORMATION}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n\n    case `${POST_CONTROLPANEL}_PENDING`:\n    case `${UPDATE_CONTROLPANEL}_PENDING`:\n    case `${DELETE_CONTROLPANEL}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n\n    case `${GET_CONTROLPANEL}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        controlpanel: _objectSpread(_objectSpread({}, action.result), {}, {\n          '@id': flattenToAppURL(action.result['@id'])\n        }),\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n\n    case `${POST_CONTROLPANEL}_SUCCESS`:\n    case `${UPDATE_CONTROLPANEL}_SUCCESS`:\n    case `${DELETE_CONTROLPANEL}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n\n    case `${LIST_CONTROLPANELS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        },\n        controlpanels: action.result\n      });\n\n    case `${SYSTEM_INFORMATION}_SUCCESS`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: null\n          },\n          systeminformation: action.result\n        });\n      }\n\n    case `${SYSTEM_INFORMATION}_FAIL`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: action.error\n          }\n        });\n      }\n\n    case `${DATABASE_INFORMATION}_SUCCESS`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: null\n          },\n          databaseinformation: action.result\n        });\n      }\n\n    case `${DATABASE_INFORMATION}_FAIL`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: action.error\n          }\n        });\n      }\n\n    case `${GET_CONTROLPANEL}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n\n    case `${LIST_CONTROLPANELS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        controlpanels: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n\n    case `${POST_CONTROLPANEL}_FAIL`:\n    case `${UPDATE_CONTROLPANEL}_FAIL`:\n    case `${DELETE_CONTROLPANEL}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["flattenToAppURL","GET_CONTROLPANEL","POST_CONTROLPANEL","DELETE_CONTROLPANEL","LIST_CONTROLPANELS","UPDATE_CONTROLPANEL","SYSTEM_INFORMATION","DATABASE_INFORMATION","initialState","get","loaded","loading","error","list","update","post","delete","controlpanel","controlpanels","systeminformation","databaseinformation","getRequestKey","actionType","split","toLowerCase","state","action","type","result"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/reducers/controlpanels/controlpanels.js"],"sourcesContent":["/**\n * Controlpanels reducer.\n * @module reducers/controlpanels/controlpanels\n */\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport {\n  GET_CONTROLPANEL,\n  POST_CONTROLPANEL,\n  DELETE_CONTROLPANEL,\n  LIST_CONTROLPANELS,\n  UPDATE_CONTROLPANEL,\n  SYSTEM_INFORMATION,\n  DATABASE_INFORMATION,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  post: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  controlpanel: null,\n  controlpanels: [],\n  systeminformation: null,\n  databaseinformation: null,\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Controlpanels reducer.\n * @function controlpanels\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function controlpanels(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_CONTROLPANEL}_PENDING`:\n    case `${LIST_CONTROLPANELS}_PENDING`:\n    case `${SYSTEM_INFORMATION}_PENDING`:\n    case `${DATABASE_INFORMATION}_PENDING`:\n      return {\n        ...state,\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${POST_CONTROLPANEL}_PENDING`:\n    case `${UPDATE_CONTROLPANEL}_PENDING`:\n    case `${DELETE_CONTROLPANEL}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_CONTROLPANEL}_SUCCESS`:\n      return {\n        ...state,\n        controlpanel: {\n          ...action.result,\n          '@id': flattenToAppURL(action.result['@id']),\n        },\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${POST_CONTROLPANEL}_SUCCESS`:\n    case `${UPDATE_CONTROLPANEL}_SUCCESS`:\n    case `${DELETE_CONTROLPANEL}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_CONTROLPANELS}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        controlpanels: action.result,\n      };\n    case `${SYSTEM_INFORMATION}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        systeminformation: action.result,\n      };\n    }\n    case `${SYSTEM_INFORMATION}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    case `${DATABASE_INFORMATION}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        databaseinformation: action.result,\n      };\n    }\n    case `${DATABASE_INFORMATION}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    case `${GET_CONTROLPANEL}_FAIL`:\n      return {\n        ...state,\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_CONTROLPANELS}_FAIL`:\n      return {\n        ...state,\n        controlpanels: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${POST_CONTROLPANEL}_FAIL`:\n    case `${UPDATE_CONTROLPANEL}_FAIL`:\n    case `${DELETE_CONTROLPANEL}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,sBAAhC;AACA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,kBAJF,EAKEC,mBALF,EAMEC,kBANF,EAOEC,oBAPF,QAQO,oCARP;AAUA,MAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE;IACHC,MAAM,EAAE,KADL;IAEHC,OAAO,EAAE,KAFN;IAGHC,KAAK,EAAE;EAHJ,CADc;EAMnBC,IAAI,EAAE;IACJH,MAAM,EAAE,KADJ;IAEJC,OAAO,EAAE,KAFL;IAGJC,KAAK,EAAE;EAHH,CANa;EAWnBE,MAAM,EAAE;IACNJ,MAAM,EAAE,KADF;IAENC,OAAO,EAAE,KAFH;IAGNC,KAAK,EAAE;EAHD,CAXW;EAgBnBG,IAAI,EAAE;IACJL,MAAM,EAAE,KADJ;IAEJC,OAAO,EAAE,KAFL;IAGJC,KAAK,EAAE;EAHH,CAhBa;EAqBnBI,MAAM,EAAE;IACNN,MAAM,EAAE,KADF;IAENC,OAAO,EAAE,KAFH;IAGNC,KAAK,EAAE;EAHD,CArBW;EA0BnBK,YAAY,EAAE,IA1BK;EA2BnBC,aAAa,EAAE,EA3BI;EA4BnBC,iBAAiB,EAAE,IA5BA;EA6BnBC,mBAAmB,EAAE;AA7BF,CAArB;AAgCA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,UAAvB,EAAmC;EACjC,OAAOA,UAAU,CAACC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,EAAyBC,WAAzB,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASN,aAAT,GAA0D;EAAA,IAAnCO,KAAmC,uEAA3BjB,YAA2B;EAAA,IAAbkB,MAAa,uEAAJ,EAAI;;EACvE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,GAAE1B,gBAAiB,UAAzB;IACA,KAAM,GAAEG,kBAAmB,UAA3B;IACA,KAAM,GAAEE,kBAAmB,UAA3B;IACA,KAAM,GAAEC,oBAAqB,UAA7B;MACE,uCACKkB,KADL;QAEER,YAAY,EAAE,IAFhB;QAGE,CAACI,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;UAC5BhB,OAAO,EAAE,IADmB;UAE5BD,MAAM,EAAE,KAFoB;UAG5BE,KAAK,EAAE;QAHqB;MAHhC;;IASF,KAAM,GAAEV,iBAAkB,UAA1B;IACA,KAAM,GAAEG,mBAAoB,UAA5B;IACA,KAAM,GAAEF,mBAAoB,UAA5B;MACE,uCACKsB,KADL;QAEE,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;UAC5BhB,OAAO,EAAE,IADmB;UAE5BD,MAAM,EAAE,KAFoB;UAG5BE,KAAK,EAAE;QAHqB;MAFhC;;IAQF,KAAM,GAAEX,gBAAiB,UAAzB;MACE,uCACKwB,KADL;QAEER,YAAY,kCACPS,MAAM,CAACE,MADA;UAEV,OAAO5B,eAAe,CAAC0B,MAAM,CAACE,MAAP,CAAc,KAAd,CAAD;QAFZ,EAFd;QAME,CAACP,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;UAC5BhB,OAAO,EAAE,KADmB;UAE5BD,MAAM,EAAE,IAFoB;UAG5BE,KAAK,EAAE;QAHqB;MANhC;;IAYF,KAAM,GAAEV,iBAAkB,UAA1B;IACA,KAAM,GAAEG,mBAAoB,UAA5B;IACA,KAAM,GAAEF,mBAAoB,UAA5B;MACE,uCACKsB,KADL;QAEE,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;UAC5BhB,OAAO,EAAE,KADmB;UAE5BD,MAAM,EAAE,IAFoB;UAG5BE,KAAK,EAAE;QAHqB;MAFhC;;IAQF,KAAM,GAAER,kBAAmB,UAA3B;MACE,uCACKqB,KADL;QAEE,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;UAC5BhB,OAAO,EAAE,KADmB;UAE5BD,MAAM,EAAE,IAFoB;UAG5BE,KAAK,EAAE;QAHqB,CAFhC;QAOEM,aAAa,EAAEQ,MAAM,CAACE;MAPxB;;IASF,KAAM,GAAEtB,kBAAmB,UAA3B;MAAsC;QACpC,uCACKmB,KADL;UAEE,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;YAC5BhB,OAAO,EAAE,KADmB;YAE5BD,MAAM,EAAE,IAFoB;YAG5BE,KAAK,EAAE;UAHqB,CAFhC;UAOEO,iBAAiB,EAAEO,MAAM,CAACE;QAP5B;MASD;;IACD,KAAM,GAAEtB,kBAAmB,OAA3B;MAAmC;QACjC,uCACKmB,KADL;UAEE,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;YAC5BhB,OAAO,EAAE,KADmB;YAE5BD,MAAM,EAAE,IAFoB;YAG5BE,KAAK,EAAEc,MAAM,CAACd;UAHc;QAFhC;MAQD;;IACD,KAAM,GAAEL,oBAAqB,UAA7B;MAAwC;QACtC,uCACKkB,KADL;UAEE,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;YAC5BhB,OAAO,EAAE,KADmB;YAE5BD,MAAM,EAAE,IAFoB;YAG5BE,KAAK,EAAE;UAHqB,CAFhC;UAOEQ,mBAAmB,EAAEM,MAAM,CAACE;QAP9B;MASD;;IACD,KAAM,GAAErB,oBAAqB,OAA7B;MAAqC;QACnC,uCACKkB,KADL;UAEE,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;YAC5BhB,OAAO,EAAE,KADmB;YAE5BD,MAAM,EAAE,IAFoB;YAG5BE,KAAK,EAAEc,MAAM,CAACd;UAHc;QAFhC;MAQD;;IACD,KAAM,GAAEX,gBAAiB,OAAzB;MACE,uCACKwB,KADL;QAEER,YAAY,EAAE,IAFhB;QAGE,CAACI,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;UAC5BhB,OAAO,EAAE,KADmB;UAE5BD,MAAM,EAAE,KAFoB;UAG5BE,KAAK,EAAEc,MAAM,CAACd;QAHc;MAHhC;;IASF,KAAM,GAAER,kBAAmB,OAA3B;MACE,uCACKqB,KADL;QAEEP,aAAa,EAAE,EAFjB;QAGE,CAACG,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;UAC5BhB,OAAO,EAAE,KADmB;UAE5BD,MAAM,EAAE,KAFoB;UAG5BE,KAAK,EAAEc,MAAM,CAACd;QAHc;MAHhC;;IASF,KAAM,GAAEV,iBAAkB,OAA1B;IACA,KAAM,GAAEG,mBAAoB,OAA5B;IACA,KAAM,GAAEF,mBAAoB,OAA5B;MACE,uCACKsB,KADL;QAEE,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAR,CAAd,GAA8B;UAC5BhB,OAAO,EAAE,KADmB;UAE5BD,MAAM,EAAE,KAFoB;UAG5BE,KAAK,EAAEc,MAAM,CAACd;QAHc;MAFhC;;IAQF;MACE,OAAOa,KAAP;EArIJ;AAuID"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}