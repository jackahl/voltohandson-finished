{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _map from \"lodash/map\";\nimport _isEqual from \"lodash/isEqual\";\nimport _filter from \"lodash/filter\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Diff/Diff.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Diff component.\n * @module components/manage/Diff/Diff\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Container, Button, Dropdown, Grid, Table } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { getDiff, getSchema, getHistory } from '@plone/volto/actions';\nimport { getBaseUrl, getBlocksFieldname, getBlocksLayoutFieldname, hasBlocksData } from '@plone/volto/helpers';\nimport { DiffField, FormattedDate, Icon, Toolbar, Unauthorized } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  diff: {\n    \"id\": \"Diff\",\n    \"defaultMessage\": \"Diff\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  split: {\n    \"id\": \"Split\",\n    \"defaultMessage\": \"Split\"\n  },\n  unified: {\n    \"id\": \"Unified\",\n    \"defaultMessage\": \"Unified\"\n  }\n});\n/**\n * Diff class.\n * @class Diff\n * @extends Component\n */\n\nclass Diff extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeOne = this.onChangeOne.bind(this);\n    this.onChangeTwo = this.onChangeTwo.bind(this);\n    this.onSelectView = this.onSelectView.bind(this);\n    this.state = {\n      isClient: false\n    };\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.props.getDiff(getBaseUrl(this.props.pathname), this.props.one, this.props.two);\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.pathname !== nextProps.pathname || this.props.one !== nextProps.one || this.props.two !== nextProps.two) {\n      this.props.getDiff(getBaseUrl(nextProps.pathname), nextProps.one, nextProps.two);\n    }\n  }\n  /**\n   * On select view handler\n   * @method onSelectView\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n\n\n  onSelectView(event, _ref) {\n    let {\n      value\n    } = _ref;\n    this.props.history.push(`${this.props.pathname}?one=${this.props.one}&two=${this.props.two}&view=${value}`);\n  }\n  /**\n   * On change one handler\n   * @method onChangeOne\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n\n\n  onChangeOne(event, _ref2) {\n    let {\n      value\n    } = _ref2;\n    this.props.history.push(`${this.props.pathname}?one=${value}&two=${this.props.two}&view=${this.props.view}`);\n  }\n  /**\n   * On change two handler\n   * @method onChangeTwo\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n\n\n  onChangeTwo(event, _ref3) {\n    let {\n      value\n    } = _ref3;\n    this.props.history.push(`${this.props.pathname}?one=${this.props.one}&two=${value}&view=${this.props.view}`);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    var _this$props$error;\n\n    const versions = _map(_filter(this.props.historyEntries, entry => 'version' in entry), (entry, index) => ({\n      text: __jsx(React.Fragment, null, index === 0 ? 'Current' : entry.version, \"\\xA0(\", __jsx(FormattedDate, {\n        date: entry.time,\n        long: true,\n        className: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }), \", \\xA0\", entry.actor.fullname, \")\"),\n      value: `${entry.version}`,\n      key: `${entry.version}`\n    }));\n\n    return ((_this$props$error = this.props.error) === null || _this$props$error === void 0 ? void 0 : _this$props$error.status) === 401 ? __jsx(Unauthorized, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    }) : __jsx(Container, {\n      id: \"page-diff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.diff),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Difference between revision {one} and {two} of {title}\",\n      defaultMessage: \"Difference between revision {one} and {two} of {title}\",\n      values: {\n        one: this.props.one,\n        two: this.props.two,\n        title: this.props.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    })), __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Column, {\n      width: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"You can view the difference of the revisions below.\",\n      defaultMessage: \"You can view the difference of the revisions below.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }))), __jsx(Grid.Column, {\n      width: 3,\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, _map([{\n      id: 'split',\n      label: this.props.intl.formatMessage(messages.split)\n    }, {\n      id: 'unified',\n      label: this.props.intl.formatMessage(messages.unified)\n    }], view => __jsx(Button, {\n      key: view.id,\n      value: view.id,\n      active: this.props.view === view.id,\n      onClick: this.onSelectView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, view.label))))), this.props.historyEntries.length > 0 && __jsx(Table, {\n      basic: \"very\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, __jsx(Table.HeaderCell, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Base\",\n      defaultMessage: \"Base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }\n    }), __jsx(Dropdown, {\n      onChange: this.onChangeOne,\n      value: this.props.one,\n      selection: true,\n      fluid: true,\n      options: versions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Compare\",\n      defaultMessage: \"Compare\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 19\n      }\n    }), __jsx(Dropdown, {\n      onChange: this.onChangeTwo,\n      value: this.props.two,\n      selection: true,\n      fluid: true,\n      options: versions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }))))), this.props.schema && this.props.data.length > 0 && _map(this.props.schema.fieldsets, fieldset => _map(fieldset.fields, field => !_isEqual(this.props.data[0][field], this.props.data[1][field]) && field !== getBlocksFieldname(this.props.data[0]) && field !== getBlocksLayoutFieldname(this.props.data[0]) && __jsx(DiffField, {\n      key: field,\n      one: this.props.data[0][field],\n      two: this.props.data[1][field],\n      schema: this.props.schema.properties[field],\n      view: this.props.view,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }\n    }))), this.props.schema && this.props.data.length > 0 && hasBlocksData(this.props.data[0]) && (!_isEqual(this.props.data[0][getBlocksFieldname(this.props.data[0])], this.props.data[1][getBlocksFieldname(this.props.data[1])]) || !_isEqual(this.props.data[0][getBlocksLayoutFieldname(this.props.data[0])], this.props.data[1][getBlocksLayoutFieldname(this.props.data[1])])) && __jsx(DiffField, {\n      one: this.props.data[0][getBlocksFieldname(this.props.data[0])],\n      two: this.props.data[1][getBlocksFieldname(this.props.data[1])],\n      contentOne: this.props.data[0],\n      contentTwo: this.props.data[1],\n      schema: this.props.schema.properties[getBlocksFieldname(this.props.data[0])],\n      view: this.props.view,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        to: `${getBaseUrl(this.props.pathname)}/historyview`,\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\n_defineProperty(Diff, \"propTypes\", {\n  getDiff: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  getHistory: PropTypes.func.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any),\n  error: PropTypes.objectOf(PropTypes.any),\n  pathname: PropTypes.string.isRequired,\n  one: PropTypes.string.isRequired,\n  two: PropTypes.string.isRequired,\n  view: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string\n  })).isRequired,\n  historyEntries: PropTypes.arrayOf(PropTypes.shape({\n    version: PropTypes.number,\n    time: PropTypes.string,\n    actor: PropTypes.shape({\n      fullname: PropTypes.string\n    })\n  })).isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n\n_defineProperty(Diff, \"defaultProps\", {\n  schema: null\n});\n\nexport default compose(withRouter, injectIntl, connect((state, props) => {\n  var _state$content$data, _state$content$data2;\n\n  return {\n    data: state.diff.data,\n    historyEntries: state.history.entries,\n    schema: state.schema.schema,\n    error: state.diff.error,\n    pathname: props.location.pathname,\n    one: qs.parse(props.location.search).one,\n    two: qs.parse(props.location.search).two,\n    view: qs.parse(props.location.search).view || 'split',\n    title: (_state$content$data = state.content.data) === null || _state$content$data === void 0 ? void 0 : _state$content$data.title,\n    type: (_state$content$data2 = state.content.data) === null || _state$content$data2 === void 0 ? void 0 : _state$content$data2['@type']\n  };\n}, {\n  getDiff,\n  getSchema,\n  getHistory\n}))(Diff);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","Container","Button","Dropdown","Grid","Table","Link","withRouter","Portal","FormattedMessage","defineMessages","injectIntl","qs","getDiff","getSchema","getHistory","getBaseUrl","getBlocksFieldname","getBlocksLayoutFieldname","hasBlocksData","DiffField","FormattedDate","Icon","Toolbar","Unauthorized","backSVG","messages","diff","back","split","unified","Diff","constructor","props","onChangeOne","bind","onChangeTwo","onSelectView","state","isClient","componentDidMount","type","pathname","one","two","setState","UNSAFE_componentWillReceiveProps","nextProps","event","value","history","push","view","render","versions","historyEntries","entry","index","text","version","time","actor","fullname","key","error","status","intl","formatMessage","title","id","label","length","schema","data","fieldsets","fieldset","fields","field","properties","document","getElementById","func","isRequired","objectOf","any","string","arrayOf","shape","number","entries","location","parse","search","content"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Diff/Diff.jsx"],"sourcesContent":["/**\n * Diff component.\n * @module components/manage/Diff/Diff\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { filter, isEqual, map } from 'lodash';\nimport { Container, Button, Dropdown, Grid, Table } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport { getDiff, getSchema, getHistory } from '@plone/volto/actions';\nimport {\n  getBaseUrl,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\nimport {\n  DiffField,\n  FormattedDate,\n  Icon,\n  Toolbar,\n  Unauthorized,\n} from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  diff: {\n    id: 'Diff',\n    defaultMessage: 'Diff',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  split: {\n    id: 'Split',\n    defaultMessage: 'Split',\n  },\n  unified: {\n    id: 'Unified',\n    defaultMessage: 'Unified',\n  },\n});\n\n/**\n * Diff class.\n * @class Diff\n * @extends Component\n */\nclass Diff extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getDiff: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    getHistory: PropTypes.func.isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    error: PropTypes.objectOf(PropTypes.any),\n    pathname: PropTypes.string.isRequired,\n    one: PropTypes.string.isRequired,\n    two: PropTypes.string.isRequired,\n    view: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n      }),\n    ).isRequired,\n    historyEntries: PropTypes.arrayOf(\n      PropTypes.shape({\n        version: PropTypes.number,\n        time: PropTypes.string,\n        actor: PropTypes.shape({ fullname: PropTypes.string }),\n      }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeOne = this.onChangeOne.bind(this);\n    this.onChangeTwo = this.onChangeTwo.bind(this);\n    this.onSelectView = this.onSelectView.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.props.getDiff(\n      getBaseUrl(this.props.pathname),\n      this.props.one,\n      this.props.two,\n    );\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.pathname !== nextProps.pathname ||\n      this.props.one !== nextProps.one ||\n      this.props.two !== nextProps.two\n    ) {\n      this.props.getDiff(\n        getBaseUrl(nextProps.pathname),\n        nextProps.one,\n        nextProps.two,\n      );\n    }\n  }\n\n  /**\n   * On select view handler\n   * @method onSelectView\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onSelectView(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${this.props.two}&view=${value}`,\n    );\n  }\n\n  /**\n   * On change one handler\n   * @method onChangeOne\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeOne(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${value}&two=${this.props.two}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * On change two handler\n   * @method onChangeTwo\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeTwo(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${value}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const versions = map(\n      filter(this.props.historyEntries, (entry) => 'version' in entry),\n      (entry, index) => ({\n        text: (\n          <>\n            {index === 0 ? 'Current' : entry.version}&nbsp;(\n            <FormattedDate date={entry.time} long className=\"text\" />, &nbsp;\n            {entry.actor.fullname})\n          </>\n        ),\n        value: `${entry.version}`,\n        key: `${entry.version}`,\n      }),\n    );\n\n    return this.props.error?.status === 401 ? (\n      <Unauthorized />\n    ) : (\n      <Container id=\"page-diff\">\n        <Helmet title={this.props.intl.formatMessage(messages.diff)} />\n        <h1>\n          <FormattedMessage\n            id=\"Difference between revision {one} and {two} of {title}\"\n            defaultMessage=\"Difference between revision {one} and {two} of {title}\"\n            values={{\n              one: this.props.one,\n              two: this.props.two,\n              title: this.props.title,\n            }}\n          />\n        </h1>\n        <Grid>\n          <Grid.Column width={9}>\n            <p className=\"description\">\n              <FormattedMessage\n                id=\"You can view the difference of the revisions below.\"\n                defaultMessage=\"You can view the difference of the revisions below.\"\n              />\n            </p>\n          </Grid.Column>\n          <Grid.Column width={3} textAlign=\"right\">\n            <Button.Group>\n              {map(\n                [\n                  {\n                    id: 'split',\n                    label: this.props.intl.formatMessage(messages.split),\n                  },\n                  {\n                    id: 'unified',\n                    label: this.props.intl.formatMessage(messages.unified),\n                  },\n                ],\n                (view) => (\n                  <Button\n                    key={view.id}\n                    value={view.id}\n                    active={this.props.view === view.id}\n                    onClick={this.onSelectView}\n                  >\n                    {view.label}\n                  </Button>\n                ),\n              )}\n            </Button.Group>\n          </Grid.Column>\n        </Grid>\n        {this.props.historyEntries.length > 0 && (\n          <Table basic=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Base\" defaultMessage=\"Base\" />\n                  <Dropdown\n                    onChange={this.onChangeOne}\n                    value={this.props.one}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Compare\" defaultMessage=\"Compare\" />\n                  <Dropdown\n                    onChange={this.onChangeTwo}\n                    value={this.props.two}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n          </Table>\n        )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          map(this.props.schema.fieldsets, (fieldset) =>\n            map(\n              fieldset.fields,\n              (field) =>\n                !isEqual(\n                  this.props.data[0][field],\n                  this.props.data[1][field],\n                ) &&\n                field !== getBlocksFieldname(this.props.data[0]) &&\n                field !== getBlocksLayoutFieldname(this.props.data[0]) && (\n                  <DiffField\n                    key={field}\n                    one={this.props.data[0][field]}\n                    two={this.props.data[1][field]}\n                    schema={this.props.schema.properties[field]}\n                    view={this.props.view}\n                  />\n                ),\n            ),\n          )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          hasBlocksData(this.props.data[0]) &&\n          (!isEqual(\n            this.props.data[0][getBlocksFieldname(this.props.data[0])],\n            this.props.data[1][getBlocksFieldname(this.props.data[1])],\n          ) ||\n            !isEqual(\n              this.props.data[0][getBlocksLayoutFieldname(this.props.data[0])],\n              this.props.data[1][getBlocksLayoutFieldname(this.props.data[1])],\n            )) && (\n            <DiffField\n              one={this.props.data[0][getBlocksFieldname(this.props.data[0])]}\n              two={this.props.data[1][getBlocksFieldname(this.props.data[1])]}\n              contentOne={this.props.data[0]}\n              contentTwo={this.props.data[1]}\n              schema={\n                this.props.schema.properties[\n                  getBlocksFieldname(this.props.data[0])\n                ]\n              }\n              view={this.props.view}\n            />\n          )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}/historyview`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      data: state.diff.data,\n      historyEntries: state.history.entries,\n      schema: state.schema.schema,\n      error: state.diff.error,\n      pathname: props.location.pathname,\n      one: qs.parse(props.location.search).one,\n      two: qs.parse(props.location.search).two,\n      view: qs.parse(props.location.search).view || 'split',\n      title: state.content.data?.title,\n      type: state.content.data?.['@type'],\n    }),\n    { getDiff, getSchema, getHistory },\n  ),\n)(Diff);\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,IAAtC,EAA4CC,KAA5C,QAAyD,mBAAzD;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,UAA3C,QAA6D,YAA7D;AACA,OAAOC,EAAP,MAAe,cAAf;AAEA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA+C,sBAA/C;AACA,SACEC,UADF,EAEEC,kBAFF,EAGEC,wBAHF,EAIEC,aAJF,QAKO,sBALP;AAMA,SACEC,SADF,EAEEC,aAFF,EAGEC,IAHF,EAIEC,OAJF,EAKEC,YALF,QAMO,yBANP;AAQA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,MAAMC,QAAQ,GAAGhB,cAAc,CAAC;EAC9BiB,IAAI;IAAA;IAAA;EAAA,CAD0B;EAK9BC,IAAI;IAAA;IAAA;EAAA,CAL0B;EAS9BC,KAAK;IAAA;IAAA;EAAA,CATyB;EAa9BC,OAAO;IAAA;IAAA;EAAA;AAbuB,CAAD,CAA/B;AAmBA;AACA;AACA;AACA;AACA;;AACA,MAAMC,IAAN,SAAmBnC,SAAnB,CAA6B;EAC3B;AACF;AACA;AACA;AACA;;EA2BE;AACF;AACA;AACA;AACA;;EAKE;AACF;AACA;AACA;AACA;AACA;EACEoC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;IACA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;IACA,KAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;IACA,KAAKG,KAAL,GAAa;MAAEC,QAAQ,EAAE;IAAZ,CAAb;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEC,iBAAiB,GAAG;IAClB,KAAKP,KAAL,CAAWnB,SAAX,CAAqB,KAAKmB,KAAL,CAAWQ,IAAhC;IACA,KAAKR,KAAL,CAAWlB,UAAX,CAAsBC,UAAU,CAAC,KAAKiB,KAAL,CAAWS,QAAZ,CAAhC;IACA,KAAKT,KAAL,CAAWpB,OAAX,CACEG,UAAU,CAAC,KAAKiB,KAAL,CAAWS,QAAZ,CADZ,EAEE,KAAKT,KAAL,CAAWU,GAFb,EAGE,KAAKV,KAAL,CAAWW,GAHb;IAKA,KAAKC,QAAL,CAAc;MAAEN,QAAQ,EAAE;IAAZ,CAAd;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEO,gCAAgC,CAACC,SAAD,EAAY;IAC1C,IACE,KAAKd,KAAL,CAAWS,QAAX,KAAwBK,SAAS,CAACL,QAAlC,IACA,KAAKT,KAAL,CAAWU,GAAX,KAAmBI,SAAS,CAACJ,GAD7B,IAEA,KAAKV,KAAL,CAAWW,GAAX,KAAmBG,SAAS,CAACH,GAH/B,EAIE;MACA,KAAKX,KAAL,CAAWpB,OAAX,CACEG,UAAU,CAAC+B,SAAS,CAACL,QAAX,CADZ,EAEEK,SAAS,CAACJ,GAFZ,EAGEI,SAAS,CAACH,GAHZ;IAKD;EACF;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEP,YAAY,CAACW,KAAD,QAAmB;IAAA,IAAX;MAAEC;IAAF,CAAW;IAC7B,KAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CACG,GAAE,KAAKlB,KAAL,CAAWS,QAAS,QAAO,KAAKT,KAAL,CAAWU,GAAI,QAAO,KAAKV,KAAL,CAAWW,GAAI,SAAQK,KAAM,EADnF;EAGD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEf,WAAW,CAACc,KAAD,SAAmB;IAAA,IAAX;MAAEC;IAAF,CAAW;IAC5B,KAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CACG,GAAE,KAAKlB,KAAL,CAAWS,QAAS,QAAOO,KAAM,QAAO,KAAKhB,KAAL,CAAWW,GAAI,SAAQ,KAAKX,KAAL,CAAWmB,IAAK,EADpF;EAGD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEhB,WAAW,CAACY,KAAD,SAAmB;IAAA,IAAX;MAAEC;IAAF,CAAW;IAC5B,KAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CACG,GAAE,KAAKlB,KAAL,CAAWS,QAAS,QAAO,KAAKT,KAAL,CAAWU,GAAI,QAAOM,KAAM,SAAQ,KAAKhB,KAAL,CAAWmB,IAAK,EADpF;EAGD;EAED;AACF;AACA;AACA;AACA;;;EACEC,MAAM,GAAG;IAAA;;IACP,MAAMC,QAAQ,GAAG,KACf,QAAO,KAAKrB,KAAL,CAAWsB,cAAlB,EAAmCC,KAAD,IAAW,aAAaA,KAA1D,CADe,EAEf,CAACA,KAAD,EAAQC,KAAR,MAAmB;MACjBC,IAAI,EACF,4BACGD,KAAK,KAAK,CAAV,GAAc,SAAd,GAA0BD,KAAK,CAACG,OADnC,WAEE,MAAC,aAAD;QAAe,IAAI,EAAEH,KAAK,CAACI,IAA3B;QAAiC,IAAI,MAArC;QAAsC,SAAS,EAAC,MAAhD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFF,YAGGJ,KAAK,CAACK,KAAN,CAAYC,QAHf,MAFe;MAQjBb,KAAK,EAAG,GAAEO,KAAK,CAACG,OAAQ,EARP;MASjBI,GAAG,EAAG,GAAEP,KAAK,CAACG,OAAQ;IATL,CAAnB,CAFe,CAAjB;;IAeA,OAAO,2BAAK1B,KAAL,CAAW+B,KAAX,wEAAkBC,MAAlB,MAA6B,GAA7B,GACL,MAAC,YAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADK,GAGL,MAAC,SAAD;MAAW,EAAE,EAAC,WAAd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,MAAD;MAAQ,KAAK,EAAE,KAAKhC,KAAL,CAAWiC,IAAX,CAAgBC,aAAhB,CAA8BzC,QAAQ,CAACC,IAAvC,CAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,EAEE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,gBAAD;MACE,EAAE,EAAC,wDADL;MAEE,cAAc,EAAC,wDAFjB;MAGE,MAAM,EAAE;QACNgB,GAAG,EAAE,KAAKV,KAAL,CAAWU,GADV;QAENC,GAAG,EAAE,KAAKX,KAAL,CAAWW,GAFV;QAGNwB,KAAK,EAAE,KAAKnC,KAAL,CAAWmC;MAHZ,CAHV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,CAFF,EAaE,MAAC,IAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,IAAD,CAAM,MAAN;MAAa,KAAK,EAAE,CAApB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE;MAAG,SAAS,EAAC,aAAb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,gBAAD;MACE,EAAE,EAAC,qDADL;MAEE,cAAc,EAAC,qDAFjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,CADF,CADF,EASE,MAAC,IAAD,CAAM,MAAN;MAAa,KAAK,EAAE,CAApB;MAAuB,SAAS,EAAC,OAAjC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,MAAD,CAAQ,KAAR;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACG,KACC,CACE;MACEC,EAAE,EAAE,OADN;MAEEC,KAAK,EAAE,KAAKrC,KAAL,CAAWiC,IAAX,CAAgBC,aAAhB,CAA8BzC,QAAQ,CAACG,KAAvC;IAFT,CADF,EAKE;MACEwC,EAAE,EAAE,SADN;MAEEC,KAAK,EAAE,KAAKrC,KAAL,CAAWiC,IAAX,CAAgBC,aAAhB,CAA8BzC,QAAQ,CAACI,OAAvC;IAFT,CALF,CADD,EAWEsB,IAAD,IACE,MAAC,MAAD;MACE,GAAG,EAAEA,IAAI,CAACiB,EADZ;MAEE,KAAK,EAAEjB,IAAI,CAACiB,EAFd;MAGE,MAAM,EAAE,KAAKpC,KAAL,CAAWmB,IAAX,KAAoBA,IAAI,CAACiB,EAHnC;MAIE,OAAO,EAAE,KAAKhC,YAJhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAMGe,IAAI,CAACkB,KANR,CAZH,CADH,CADF,CATF,CAbF,EAiDG,KAAKrC,KAAL,CAAWsB,cAAX,CAA0BgB,MAA1B,GAAmC,CAAnC,IACC,MAAC,KAAD;MAAO,KAAK,EAAC,MAAb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,KAAD,CAAO,MAAP;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,KAAD,CAAO,GAAP;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,KAAD,CAAO,UAAP;MAAkB,KAAK,EAAE,CAAzB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,gBAAD;MAAkB,EAAE,EAAC,MAArB;MAA4B,cAAc,EAAC,MAA3C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,EAEE,MAAC,QAAD;MACE,QAAQ,EAAE,KAAKrC,WADjB;MAEE,KAAK,EAAE,KAAKD,KAAL,CAAWU,GAFpB;MAGE,SAAS,MAHX;MAIE,KAAK,MAJP;MAKE,OAAO,EAAEW,QALX;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFF,CADF,EAWE,MAAC,KAAD,CAAO,UAAP;MAAkB,KAAK,EAAE,CAAzB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,gBAAD;MAAkB,EAAE,EAAC,SAArB;MAA+B,cAAc,EAAC,SAA9C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,EAEE,MAAC,QAAD;MACE,QAAQ,EAAE,KAAKlB,WADjB;MAEE,KAAK,EAAE,KAAKH,KAAL,CAAWW,GAFpB;MAGE,SAAS,MAHX;MAIE,KAAK,MAJP;MAKE,OAAO,EAAEU,QALX;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFF,CAXF,CADF,CADF,CAlDJ,EA6EG,KAAKrB,KAAL,CAAWuC,MAAX,IACC,KAAKvC,KAAL,CAAWwC,IAAX,CAAgBF,MAAhB,GAAyB,CAD1B,IAEC,KAAI,KAAKtC,KAAL,CAAWuC,MAAX,CAAkBE,SAAtB,EAAkCC,QAAD,IAC/B,KACEA,QAAQ,CAACC,MADX,EAEGC,KAAD,IACE,CAAC,SACC,KAAK5C,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBI,KAAnB,CADD,EAEC,KAAK5C,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBI,KAAnB,CAFD,CAAD,IAIAA,KAAK,KAAK5D,kBAAkB,CAAC,KAAKgB,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CAJ5B,IAKAI,KAAK,KAAK3D,wBAAwB,CAAC,KAAKe,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CALlC,IAME,MAAC,SAAD;MACE,GAAG,EAAEI,KADP;MAEE,GAAG,EAAE,KAAK5C,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBI,KAAnB,CAFP;MAGE,GAAG,EAAE,KAAK5C,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBI,KAAnB,CAHP;MAIE,MAAM,EAAE,KAAK5C,KAAL,CAAWuC,MAAX,CAAkBM,UAAlB,CAA6BD,KAA7B,CAJV;MAKE,IAAI,EAAE,KAAK5C,KAAL,CAAWmB,IALnB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EATN,CADF,CA/EJ,EAmGG,KAAKnB,KAAL,CAAWuC,MAAX,IACC,KAAKvC,KAAL,CAAWwC,IAAX,CAAgBF,MAAhB,GAAyB,CAD1B,IAECpD,aAAa,CAAC,KAAKc,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CAFd,KAGE,CAAC,SACA,KAAKxC,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBxD,kBAAkB,CAAC,KAAKgB,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CAArC,CADA,EAEA,KAAKxC,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBxD,kBAAkB,CAAC,KAAKgB,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CAArC,CAFA,CAAD,IAIC,CAAC,SACC,KAAKxC,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBvD,wBAAwB,CAAC,KAAKe,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CAA3C,CADD,EAEC,KAAKxC,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBvD,wBAAwB,CAAC,KAAKe,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CAA3C,CAFD,CAPJ,KAWG,MAAC,SAAD;MACE,GAAG,EAAE,KAAKxC,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBxD,kBAAkB,CAAC,KAAKgB,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CAArC,CADP;MAEE,GAAG,EAAE,KAAKxC,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,EAAmBxD,kBAAkB,CAAC,KAAKgB,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CAArC,CAFP;MAGE,UAAU,EAAE,KAAKxC,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAHd;MAIE,UAAU,EAAE,KAAKxC,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAJd;MAKE,MAAM,EACJ,KAAKxC,KAAL,CAAWuC,MAAX,CAAkBM,UAAlB,CACE7D,kBAAkB,CAAC,KAAKgB,KAAL,CAAWwC,IAAX,CAAgB,CAAhB,CAAD,CADpB,CANJ;MAUE,IAAI,EAAE,KAAKxC,KAAL,CAAWmB,IAVnB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EA9GN,EA2HG,KAAKd,KAAL,CAAWC,QAAX,IACC,MAAC,MAAD;MAAQ,IAAI,EAAEwC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,OAAD;MACE,QAAQ,EAAE,KAAK/C,KAAL,CAAWS,QADvB;MAEE,sBAAsB,MAFxB;MAGE,KAAK,EACH,MAAC,IAAD;QACE,EAAE,EAAG,GAAE1B,UAAU,CAAC,KAAKiB,KAAL,CAAWS,QAAZ,CAAsB,cADzC;QAEE,SAAS,EAAC,MAFZ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAIE,MAAC,IAAD;QACE,IAAI,EAAEjB,OADR;QAEE,SAAS,EAAC,kBAFZ;QAGE,IAAI,EAAC,MAHP;QAIE,KAAK,EAAE,KAAKQ,KAAL,CAAWiC,IAAX,CAAgBC,aAAhB,CAA8BzC,QAAQ,CAACE,IAAvC,CAJT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAJF,CAJJ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,CA5HJ,CAHF;EAqJD;;AA5S0B;;gBAAvBG,I,eAMe;EACjBlB,OAAO,EAAEhB,SAAS,CAACoF,IAAV,CAAeC,UADP;EAEjBpE,SAAS,EAAEjB,SAAS,CAACoF,IAAV,CAAeC,UAFT;EAGjBnE,UAAU,EAAElB,SAAS,CAACoF,IAAV,CAAeC,UAHV;EAIjBV,MAAM,EAAE3E,SAAS,CAACsF,QAAV,CAAmBtF,SAAS,CAACuF,GAA7B,CAJS;EAKjBpB,KAAK,EAAEnE,SAAS,CAACsF,QAAV,CAAmBtF,SAAS,CAACuF,GAA7B,CALU;EAMjB1C,QAAQ,EAAE7C,SAAS,CAACwF,MAAV,CAAiBH,UANV;EAOjBvC,GAAG,EAAE9C,SAAS,CAACwF,MAAV,CAAiBH,UAPL;EAQjBtC,GAAG,EAAE/C,SAAS,CAACwF,MAAV,CAAiBH,UARL;EASjB9B,IAAI,EAAEvD,SAAS,CAACwF,MAAV,CAAiBH,UATN;EAUjBT,IAAI,EAAE5E,SAAS,CAACyF,OAAV,CACJzF,SAAS,CAAC0F,KAAV,CAAgB;IACd,OAAO1F,SAAS,CAACwF;EADH,CAAhB,CADI,EAIJH,UAde;EAejB3B,cAAc,EAAE1D,SAAS,CAACyF,OAAV,CACdzF,SAAS,CAAC0F,KAAV,CAAgB;IACd5B,OAAO,EAAE9D,SAAS,CAAC2F,MADL;IAEd5B,IAAI,EAAE/D,SAAS,CAACwF,MAFF;IAGdxB,KAAK,EAAEhE,SAAS,CAAC0F,KAAV,CAAgB;MAAEzB,QAAQ,EAAEjE,SAAS,CAACwF;IAAtB,CAAhB;EAHO,CAAhB,CADc,EAMdH,UArBe;EAsBjBd,KAAK,EAAEvE,SAAS,CAACwF,MAAV,CAAiBH,UAtBP;EAuBjBzC,IAAI,EAAE5C,SAAS,CAACwF,MAAV,CAAiBH;AAvBN,C;;gBANfnD,I,kBAqCkB;EACpByC,MAAM,EAAE;AADY,C;;AA0QxB,eAAexE,OAAO,CACpBO,UADoB,EAEpBI,UAFoB,EAGpBZ,OAAO,CACL,CAACuC,KAAD,EAAQL,KAAR;EAAA;;EAAA,OAAmB;IACjBwC,IAAI,EAAEnC,KAAK,CAACX,IAAN,CAAW8C,IADA;IAEjBlB,cAAc,EAAEjB,KAAK,CAACY,OAAN,CAAcuC,OAFb;IAGjBjB,MAAM,EAAElC,KAAK,CAACkC,MAAN,CAAaA,MAHJ;IAIjBR,KAAK,EAAE1B,KAAK,CAACX,IAAN,CAAWqC,KAJD;IAKjBtB,QAAQ,EAAET,KAAK,CAACyD,QAAN,CAAehD,QALR;IAMjBC,GAAG,EAAE/B,EAAE,CAAC+E,KAAH,CAAS1D,KAAK,CAACyD,QAAN,CAAeE,MAAxB,EAAgCjD,GANpB;IAOjBC,GAAG,EAAEhC,EAAE,CAAC+E,KAAH,CAAS1D,KAAK,CAACyD,QAAN,CAAeE,MAAxB,EAAgChD,GAPpB;IAQjBQ,IAAI,EAAExC,EAAE,CAAC+E,KAAH,CAAS1D,KAAK,CAACyD,QAAN,CAAeE,MAAxB,EAAgCxC,IAAhC,IAAwC,OAR7B;IASjBgB,KAAK,yBAAE9B,KAAK,CAACuD,OAAN,CAAcpB,IAAhB,wDAAE,oBAAoBL,KATV;IAUjB3B,IAAI,0BAAEH,KAAK,CAACuD,OAAN,CAAcpB,IAAhB,yDAAE,qBAAqB,OAArB;EAVW,CAAnB;AAAA,CADK,EAaL;EAAE5D,OAAF;EAAWC,SAAX;EAAsBC;AAAtB,CAbK,CAHa,CAAP,CAkBbgB,IAlBa,CAAf"},"metadata":{"react-intl":{"messages":[{"id":"Diff","defaultMessage":"Diff"},{"id":"Back","defaultMessage":"Back"},{"id":"Split","defaultMessage":"Split"},{"id":"Unified","defaultMessage":"Unified"},{"id":"Difference between revision {one} and {two} of {title}","defaultMessage":"Difference between revision {one} and {two} of {title}"},{"id":"You can view the difference of the revisions below.","defaultMessage":"You can view the difference of the revisions below."},{"id":"Base","defaultMessage":"Base"},{"id":"Compare","defaultMessage":"Compare"}]}},"sourceType":"module"}