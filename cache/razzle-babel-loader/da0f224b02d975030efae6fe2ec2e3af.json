{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/ReactVirtualized/DynamicRowHeightList.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nclass DynamicHeightList extends React.PureComponent {\n  // As per `react-virtualized` docs, one should use a PureComponent\n  // to avoid performance issues\n  // We could have used a React.memo + functional component instead,\n  // but relied on the class-based implementation for simplicity\n  constructor(props) {\n    super(props);\n    this._cache = new props.reactVirtualized.CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 50\n    });\n    this._rowRenderer = this._rowRenderer.bind(this);\n  }\n\n  _rowRenderer(_ref) {\n    let {\n      index,\n      key,\n      parent,\n      style\n    } = _ref;\n    const CellMeasurer = this.props.reactVirtualized.CellMeasurer;\n    return __jsx(CellMeasurer, {\n      cache: this._cache,\n      columnIndex: 0,\n      key: key,\n      rowIndex: index,\n      parent: parent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, _ref2 => {\n      let {\n        measure\n      } = _ref2;\n      return __jsx(\"div\", {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 27\n        }\n      }, this.props.children[index]);\n    });\n  }\n\n  render() {\n    const List = this.props.reactVirtualized.List;\n    return __jsx(List, _extends({}, this.props, {\n      ref: element => {\n        this._list = element;\n      },\n      deferredMeasurementCache: this._cache,\n      overscanRowCount: 0,\n      rowCount: this.props.children.length,\n      rowHeight: this._cache.rowHeight,\n      rowRenderer: this._rowRenderer,\n      width: 200,\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default injectLazyLibs('reactVirtualized')(DynamicHeightList);","map":{"version":3,"names":["React","injectLazyLibs","DynamicHeightList","PureComponent","constructor","props","_cache","reactVirtualized","CellMeasurerCache","fixedWidth","minHeight","_rowRenderer","bind","index","key","parent","style","CellMeasurer","measure","children","render","List","element","_list","length","rowHeight"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/ReactVirtualized/DynamicRowHeightList.jsx"],"sourcesContent":["import React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nclass DynamicHeightList extends React.PureComponent {\n  // As per `react-virtualized` docs, one should use a PureComponent\n  // to avoid performance issues\n  // We could have used a React.memo + functional component instead,\n  // but relied on the class-based implementation for simplicity\n  constructor(props) {\n    super(props);\n\n    this._cache = new props.reactVirtualized.CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 50,\n    });\n\n    this._rowRenderer = this._rowRenderer.bind(this);\n  }\n\n  _rowRenderer({ index, key, parent, style }) {\n    const CellMeasurer = this.props.reactVirtualized.CellMeasurer;\n    return (\n      <CellMeasurer\n        cache={this._cache}\n        columnIndex={0}\n        key={key}\n        rowIndex={index}\n        parent={parent}\n      >\n        {({ measure }) => <div style={style}>{this.props.children[index]}</div>}\n      </CellMeasurer>\n    );\n  }\n\n  render() {\n    const List = this.props.reactVirtualized.List;\n\n    return (\n      <List\n        {...this.props}\n        ref={(element) => {\n          this._list = element;\n        }}\n        deferredMeasurementCache={this._cache}\n        overscanRowCount={0}\n        rowCount={this.props.children.length}\n        rowHeight={this._cache.rowHeight}\n        rowRenderer={this._rowRenderer}\n        width={200}\n        height={500}\n      />\n    );\n  }\n}\n\nexport default injectLazyLibs('reactVirtualized')(DynamicHeightList);\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,wCAA/B;;AAEA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,aAAtC,CAAoD;EAClD;EACA;EACA;EACA;EACAC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,MAAL,GAAc,IAAID,KAAK,CAACE,gBAAN,CAAuBC,iBAA3B,CAA6C;MACzDC,UAAU,EAAE,IAD6C;MAEzDC,SAAS,EAAE;IAF8C,CAA7C,CAAd;IAKA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;EACD;;EAEDD,YAAY,OAAgC;IAAA,IAA/B;MAAEE,KAAF;MAASC,GAAT;MAAcC,MAAd;MAAsBC;IAAtB,CAA+B;IAC1C,MAAMC,YAAY,GAAG,KAAKZ,KAAL,CAAWE,gBAAX,CAA4BU,YAAjD;IACA,OACE,MAAC,YAAD;MACE,KAAK,EAAE,KAAKX,MADd;MAEE,WAAW,EAAE,CAFf;MAGE,GAAG,EAAEQ,GAHP;MAIE,QAAQ,EAAED,KAJZ;MAKE,MAAM,EAAEE,MALV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAOG;MAAA,IAAC;QAAEG;MAAF,CAAD;MAAA,OAAiB;QAAK,KAAK,EAAEF,KAAZ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAoB,KAAKX,KAAL,CAAWc,QAAX,CAAoBN,KAApB,CAApB,CAAjB;IAAA,CAPH,CADF;EAWD;;EAEDO,MAAM,GAAG;IACP,MAAMC,IAAI,GAAG,KAAKhB,KAAL,CAAWE,gBAAX,CAA4Bc,IAAzC;IAEA,OACE,MAAC,IAAD,eACM,KAAKhB,KADX;MAEE,GAAG,EAAGiB,OAAD,IAAa;QAChB,KAAKC,KAAL,GAAaD,OAAb;MACD,CAJH;MAKE,wBAAwB,EAAE,KAAKhB,MALjC;MAME,gBAAgB,EAAE,CANpB;MAOE,QAAQ,EAAE,KAAKD,KAAL,CAAWc,QAAX,CAAoBK,MAPhC;MAQE,SAAS,EAAE,KAAKlB,MAAL,CAAYmB,SARzB;MASE,WAAW,EAAE,KAAKd,YATpB;MAUE,KAAK,EAAE,GAVT;MAWE,MAAM,EAAE,GAXV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GADF;EAeD;;AAjDiD;;AAoDpD,eAAeV,cAAc,CAAC,kBAAD,CAAd,CAAmCC,iBAAnC,CAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}