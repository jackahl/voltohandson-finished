{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Block/EditBlockWrapper.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Icon } from '@plone/volto/components';\nimport { blockHasValue, buildStyleClassNamesFromData } from '@plone/volto/helpers';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nconst messages = defineMessages({\n  delete: {\n    \"id\": \"delete\",\n    \"defaultMessage\": \"delete\"\n  }\n});\n\nconst EditBlockWrapper = props => {\n  const hideHandler = data => {\n    return !!data.fixed || !(blockHasValue(data) && props.blockProps.editable);\n  };\n\n  const {\n    intl,\n    blockProps,\n    draginfo,\n    children\n  } = props;\n  const {\n    block,\n    selected,\n    type,\n    onDeleteBlock,\n    data,\n    editable\n  } = blockProps;\n  const visible = selected && !hideHandler(data);\n  const required = isBoolean(data.required) ? data.required : includes(config.blocks.requiredBlocks, type);\n  const styles = buildStyleClassNamesFromData(data.styles);\n  return __jsx(\"div\", _extends({\n    ref: draginfo.innerRef\n  }, draginfo.draggableProps, {\n    // Right now, we can have the alignment information in the styles property or in the\n    // block data root, we inject the classname here for having control over the whole\n    // Block Edit wrapper\n    className: cx(`block-editor-${data['@type']}`, styles, {\n      [data.align]: data.align\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", _extends({\n    style: {\n      visibility: visible ? 'visible' : 'hidden',\n      display: 'inline-block'\n    }\n  }, draginfo.dragHandleProps, {\n    className: \"drag handle wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), __jsx(Icon, {\n    name: dragSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: `ui drag block inner ${type}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, children, selected && !required && editable && __jsx(Button, {\n    icon: true,\n    basic: true,\n    onClick: () => onDeleteBlock(block, true),\n    className: \"delete-button\",\n    \"aria-label\": intl.formatMessage(messages.delete),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: trashSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default injectIntl(EditBlockWrapper);","map":{"version":3,"names":["React","Icon","blockHasValue","buildStyleClassNamesFromData","dragSVG","Button","includes","isBoolean","defineMessages","injectIntl","cx","config","trashSVG","messages","delete","EditBlockWrapper","props","hideHandler","data","fixed","blockProps","editable","intl","draginfo","children","block","selected","type","onDeleteBlock","visible","required","blocks","requiredBlocks","styles","innerRef","draggableProps","align","position","visibility","display","dragHandleProps","formatMessage"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Block/EditBlockWrapper.jsx"],"sourcesContent":["import React from 'react';\nimport { Icon } from '@plone/volto/components';\nimport {\n  blockHasValue,\n  buildStyleClassNamesFromData,\n} from '@plone/volto/helpers';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\n\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nconst messages = defineMessages({\n  delete: {\n    id: 'delete',\n    defaultMessage: 'delete',\n  },\n});\n\nconst EditBlockWrapper = (props) => {\n  const hideHandler = (data) => {\n    return !!data.fixed || !(blockHasValue(data) && props.blockProps.editable);\n  };\n\n  const { intl, blockProps, draginfo, children } = props;\n  const { block, selected, type, onDeleteBlock, data, editable } = blockProps;\n  const visible = selected && !hideHandler(data);\n\n  const required = isBoolean(data.required)\n    ? data.required\n    : includes(config.blocks.requiredBlocks, type);\n\n  const styles = buildStyleClassNamesFromData(data.styles);\n\n  return (\n    <div\n      ref={draginfo.innerRef}\n      {...draginfo.draggableProps}\n      // Right now, we can have the alignment information in the styles property or in the\n      // block data root, we inject the classname here for having control over the whole\n      // Block Edit wrapper\n      className={cx(`block-editor-${data['@type']}`, styles, {\n        [data.align]: data.align,\n      })}\n    >\n      <div style={{ position: 'relative' }}>\n        <div\n          style={{\n            visibility: visible ? 'visible' : 'hidden',\n            display: 'inline-block',\n          }}\n          {...draginfo.dragHandleProps}\n          className=\"drag handle wrapper\"\n        >\n          <Icon name={dragSVG} size=\"18px\" />\n        </div>\n        <div className={`ui drag block inner ${type}`}>\n          {children}\n          {selected && !required && editable && (\n            <Button\n              icon\n              basic\n              onClick={() => onDeleteBlock(block, true)}\n              className=\"delete-button\"\n              aria-label={intl.formatMessage(messages.delete)}\n            >\n              <Icon name={trashSVG} size=\"18px\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(EditBlockWrapper);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"delete","defaultMessage":"delete"}]}},"sourceType":"module"}