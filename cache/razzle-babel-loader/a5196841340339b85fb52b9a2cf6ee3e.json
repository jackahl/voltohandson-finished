{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nconst _excluded = [\"children\"],\n      _excluded2 = [\"children\"];\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/helpers/Helmet/Helmet.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport isEqual from 'react-fast-compare';\nimport { convertReactPropstoHtmlAttributes, handleClientStateChange, mapStateOnServer, reducePropsToState, warn } from './HelmetUtils.js';\nimport { TAG_NAMES, VALID_TAG_NAMES } from './HelmetConstants.js';\n\nconst Helmet = Component => {\n  var _class;\n\n  return _class = class HelmetWrapper extends React.Component {\n    /**\n     * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n     * @param {Object} bodyAttributes: {\"className\": \"root\"}\n     * @param {String} defaultTitle: \"Default Title\"\n     * @param {Boolean} defer: true\n     * @param {Boolean} encodeSpecialCharacters: true\n     * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n     * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n     * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n     * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n     * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n     * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n     * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n     * @param {String} title: \"Title\"\n     * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n     * @param {String} titleTemplate: \"MySite.com - %s\"\n     */\n    // Component.peek comes from react-side-effect:\n    // For testing, you may use a static peek() method available on the returned component.\n    // It lets you get the current state without resetting the mounted instance stack.\n    // Donâ€™t use it for anything other than testing.\n    static set canUseDOM(canUseDOM) {\n      Component.canUseDOM = canUseDOM;\n    }\n\n    shouldComponentUpdate(nextProps) {\n      return !isEqual(this.props, nextProps);\n    }\n\n    mapNestedChildrenToProps(child, nestedChildren) {\n      if (!nestedChildren) {\n        return null;\n      } // eslint-disable-next-line default-case\n\n\n      switch (child.type) {\n        case TAG_NAMES.SCRIPT:\n        case TAG_NAMES.NOSCRIPT:\n          return {\n            innerHTML: nestedChildren\n          };\n\n        case TAG_NAMES.STYLE:\n          return {\n            cssText: nestedChildren\n          };\n      }\n\n      throw new Error(`<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`);\n    }\n\n    flattenArrayTypeChildren(_ref) {\n      let {\n        child,\n        arrayTypeChildren,\n        newChildProps,\n        nestedChildren\n      } = _ref;\n      return _objectSpread(_objectSpread({}, arrayTypeChildren), {}, {\n        [child.type]: [...(arrayTypeChildren[child.type] || []), _objectSpread(_objectSpread({}, newChildProps), this.mapNestedChildrenToProps(child, nestedChildren))]\n      });\n    }\n\n    mapObjectTypeChildren(_ref2) {\n      let {\n        child,\n        newProps,\n        newChildProps,\n        nestedChildren\n      } = _ref2;\n\n      // eslint-disable-next-line default-case\n      switch (child.type) {\n        case TAG_NAMES.TITLE:\n          return _objectSpread(_objectSpread({}, newProps), {}, {\n            [child.type]: nestedChildren,\n            titleAttributes: _objectSpread({}, newChildProps)\n          });\n\n        case TAG_NAMES.BODY:\n          return _objectSpread(_objectSpread({}, newProps), {}, {\n            bodyAttributes: _objectSpread({}, newChildProps)\n          });\n\n        case TAG_NAMES.HTML:\n          return _objectSpread(_objectSpread({}, newProps), {}, {\n            htmlAttributes: _objectSpread({}, newChildProps)\n          });\n      }\n\n      return _objectSpread(_objectSpread({}, newProps), {}, {\n        [child.type]: _objectSpread({}, newChildProps)\n      });\n    }\n\n    mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n      let newFlattenedProps = _objectSpread({}, newProps);\n\n      Object.keys(arrayTypeChildren).forEach(arrayChildName => {\n        newFlattenedProps = _objectSpread(_objectSpread({}, newFlattenedProps), {}, {\n          [arrayChildName]: arrayTypeChildren[arrayChildName]\n        });\n      });\n      return newFlattenedProps;\n    }\n\n    warnOnInvalidChildren(child, nestedChildren) {\n      if (true) {\n        if (!VALID_TAG_NAMES.some(name => child.type === name)) {\n          if (typeof child.type === 'function') {\n            return warn(`You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.`);\n          }\n\n          return warn(`Only elements types ${VALID_TAG_NAMES.join(', ')} are allowed. Helmet does not support rendering <${child.type}> elements. Refer to our API for more information.`);\n        }\n\n        if (nestedChildren && typeof nestedChildren !== 'string' && (!Array.isArray(nestedChildren) || nestedChildren.some(nestedChild => typeof nestedChild !== 'string'))) {\n          throw new Error(`Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`);\n        }\n      }\n\n      return true;\n    }\n\n    mapChildrenToProps(children, newProps) {\n      let arrayTypeChildren = {};\n      React.Children.forEach(children, child => {\n        if (!child || !child.props) {\n          return;\n        }\n\n        const _child$props = child.props,\n              {\n          children: nestedChildren\n        } = _child$props,\n              childProps = _objectWithoutProperties(_child$props, _excluded);\n\n        const newChildProps = convertReactPropstoHtmlAttributes(childProps);\n        this.warnOnInvalidChildren(child, nestedChildren);\n\n        switch (child.type) {\n          case TAG_NAMES.LINK:\n          case TAG_NAMES.META:\n          case TAG_NAMES.NOSCRIPT:\n          case TAG_NAMES.SCRIPT:\n          case TAG_NAMES.STYLE:\n            arrayTypeChildren = this.flattenArrayTypeChildren({\n              child,\n              arrayTypeChildren,\n              newChildProps,\n              nestedChildren\n            });\n            break;\n\n          default:\n            newProps = this.mapObjectTypeChildren({\n              child,\n              newProps,\n              newChildProps,\n              nestedChildren\n            });\n            break;\n        }\n      });\n      newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n      return newProps;\n    }\n\n    render() {\n      const _this$props = this.props,\n            {\n        children\n      } = _this$props,\n            props = _objectWithoutProperties(_this$props, _excluded2);\n\n      let newProps = _objectSpread({}, props);\n\n      if (children) {\n        newProps = this.mapChildrenToProps(children, newProps);\n      }\n\n      return __jsx(Component, _extends({}, newProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 14\n        }\n      }));\n    }\n\n  }, _defineProperty(_class, \"propTypes\", {\n    base: PropTypes.object,\n    bodyAttributes: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    defaultTitle: PropTypes.string,\n    defer: PropTypes.bool,\n    encodeSpecialCharacters: PropTypes.bool,\n    htmlAttributes: PropTypes.object,\n    link: PropTypes.arrayOf(PropTypes.object),\n    meta: PropTypes.arrayOf(PropTypes.object),\n    noscript: PropTypes.arrayOf(PropTypes.object),\n    onChangeClientState: PropTypes.func,\n    script: PropTypes.arrayOf(PropTypes.object),\n    style: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n    titleAttributes: PropTypes.object,\n    titleTemplate: PropTypes.string\n  }), _defineProperty(_class, \"defaultProps\", {\n    defer: true,\n    encodeSpecialCharacters: true\n  }), _defineProperty(_class, \"peek\", Component.peek), _defineProperty(_class, \"rewind\", () => {\n    let mappedState = Component.rewind();\n\n    if (!mappedState) {\n      // provide fallback if mappedState is undefined\n      mappedState = mapStateOnServer({\n        baseTag: [],\n        bodyAttributes: {},\n        encodeSpecialCharacters: true,\n        htmlAttributes: {},\n        linkTags: [],\n        metaTags: [],\n        noscriptTags: [],\n        scriptTags: [],\n        styleTags: [],\n        title: '',\n        titleAttributes: {}\n      });\n    }\n\n    return mappedState;\n  }), _class;\n};\n\n_c = Helmet;\n\nconst NullComponent = () => null;\n\n_c2 = NullComponent;\nconst HelmetSideEffects = withSideEffect(reducePropsToState, handleClientStateChange, mapStateOnServer)(NullComponent);\nconst HelmetExport = Helmet(HelmetSideEffects);\n_c3 = HelmetExport;\nHelmetExport.renderStatic = HelmetExport.rewind;\nexport { HelmetExport as Helmet };\nexport default HelmetExport;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Helmet\");\n$RefreshReg$(_c2, \"NullComponent\");\n$RefreshReg$(_c3, \"HelmetExport\");","map":{"version":3,"names":["React","PropTypes","withSideEffect","isEqual","convertReactPropstoHtmlAttributes","handleClientStateChange","mapStateOnServer","reducePropsToState","warn","TAG_NAMES","VALID_TAG_NAMES","Helmet","Component","HelmetWrapper","canUseDOM","shouldComponentUpdate","nextProps","props","mapNestedChildrenToProps","child","nestedChildren","type","SCRIPT","NOSCRIPT","innerHTML","STYLE","cssText","Error","flattenArrayTypeChildren","arrayTypeChildren","newChildProps","mapObjectTypeChildren","newProps","TITLE","titleAttributes","BODY","bodyAttributes","HTML","htmlAttributes","mapArrayTypeChildrenToProps","newFlattenedProps","Object","keys","forEach","arrayChildName","warnOnInvalidChildren","some","name","join","Array","isArray","nestedChild","mapChildrenToProps","children","Children","childProps","LINK","META","render","base","object","oneOfType","arrayOf","node","defaultTitle","string","defer","bool","encodeSpecialCharacters","link","meta","noscript","onChangeClientState","func","script","style","title","titleTemplate","peek","mappedState","rewind","baseTag","linkTags","metaTags","noscriptTags","scriptTags","styleTags","NullComponent","HelmetSideEffects","HelmetExport","renderStatic"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/helpers/Helmet/Helmet.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport isEqual from 'react-fast-compare';\nimport {\n  convertReactPropstoHtmlAttributes,\n  handleClientStateChange,\n  mapStateOnServer,\n  reducePropsToState,\n  warn,\n} from './HelmetUtils.js';\nimport { TAG_NAMES, VALID_TAG_NAMES } from './HelmetConstants.js';\n\nconst Helmet = (Component) =>\n  class HelmetWrapper extends React.Component {\n    /**\n     * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n     * @param {Object} bodyAttributes: {\"className\": \"root\"}\n     * @param {String} defaultTitle: \"Default Title\"\n     * @param {Boolean} defer: true\n     * @param {Boolean} encodeSpecialCharacters: true\n     * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n     * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n     * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n     * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n     * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n     * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n     * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n     * @param {String} title: \"Title\"\n     * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n     * @param {String} titleTemplate: \"MySite.com - %s\"\n     */\n    static propTypes = {\n      base: PropTypes.object,\n      bodyAttributes: PropTypes.object,\n      children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n      ]),\n      defaultTitle: PropTypes.string,\n      defer: PropTypes.bool,\n      encodeSpecialCharacters: PropTypes.bool,\n      htmlAttributes: PropTypes.object,\n      link: PropTypes.arrayOf(PropTypes.object),\n      meta: PropTypes.arrayOf(PropTypes.object),\n      noscript: PropTypes.arrayOf(PropTypes.object),\n      onChangeClientState: PropTypes.func,\n      script: PropTypes.arrayOf(PropTypes.object),\n      style: PropTypes.arrayOf(PropTypes.object),\n      title: PropTypes.string,\n      titleAttributes: PropTypes.object,\n      titleTemplate: PropTypes.string,\n    };\n\n    static defaultProps = {\n      defer: true,\n      encodeSpecialCharacters: true,\n    };\n\n    // Component.peek comes from react-side-effect:\n    // For testing, you may use a static peek() method available on the returned component.\n    // It lets you get the current state without resetting the mounted instance stack.\n    // Donâ€™t use it for anything other than testing.\n    static peek = Component.peek;\n\n    static rewind = () => {\n      let mappedState = Component.rewind();\n      if (!mappedState) {\n        // provide fallback if mappedState is undefined\n        mappedState = mapStateOnServer({\n          baseTag: [],\n          bodyAttributes: {},\n          encodeSpecialCharacters: true,\n          htmlAttributes: {},\n          linkTags: [],\n          metaTags: [],\n          noscriptTags: [],\n          scriptTags: [],\n          styleTags: [],\n          title: '',\n          titleAttributes: {},\n        });\n      }\n\n      return mappedState;\n    };\n\n    static set canUseDOM(canUseDOM) {\n      Component.canUseDOM = canUseDOM;\n    }\n\n    shouldComponentUpdate(nextProps) {\n      return !isEqual(this.props, nextProps);\n    }\n\n    mapNestedChildrenToProps(child, nestedChildren) {\n      if (!nestedChildren) {\n        return null;\n      }\n\n      // eslint-disable-next-line default-case\n      switch (child.type) {\n        case TAG_NAMES.SCRIPT:\n        case TAG_NAMES.NOSCRIPT:\n          return {\n            innerHTML: nestedChildren,\n          };\n\n        case TAG_NAMES.STYLE:\n          return {\n            cssText: nestedChildren,\n          };\n      }\n\n      throw new Error(\n        `<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`,\n      );\n    }\n\n    flattenArrayTypeChildren({\n      child,\n      arrayTypeChildren,\n      newChildProps,\n      nestedChildren,\n    }) {\n      return {\n        ...arrayTypeChildren,\n        [child.type]: [\n          ...(arrayTypeChildren[child.type] || []),\n          {\n            ...newChildProps,\n            ...this.mapNestedChildrenToProps(child, nestedChildren),\n          },\n        ],\n      };\n    }\n\n    mapObjectTypeChildren({ child, newProps, newChildProps, nestedChildren }) {\n      // eslint-disable-next-line default-case\n      switch (child.type) {\n        case TAG_NAMES.TITLE:\n          return {\n            ...newProps,\n            [child.type]: nestedChildren,\n            titleAttributes: { ...newChildProps },\n          };\n\n        case TAG_NAMES.BODY:\n          return {\n            ...newProps,\n            bodyAttributes: { ...newChildProps },\n          };\n\n        case TAG_NAMES.HTML:\n          return {\n            ...newProps,\n            htmlAttributes: { ...newChildProps },\n          };\n      }\n\n      return {\n        ...newProps,\n        [child.type]: { ...newChildProps },\n      };\n    }\n\n    mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n      let newFlattenedProps = { ...newProps };\n\n      Object.keys(arrayTypeChildren).forEach((arrayChildName) => {\n        newFlattenedProps = {\n          ...newFlattenedProps,\n          [arrayChildName]: arrayTypeChildren[arrayChildName],\n        };\n      });\n\n      return newFlattenedProps;\n    }\n\n    warnOnInvalidChildren(child, nestedChildren) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!VALID_TAG_NAMES.some((name) => child.type === name)) {\n          if (typeof child.type === 'function') {\n            return warn(\n              `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.`,\n            );\n          }\n\n          return warn(\n            `Only elements types ${VALID_TAG_NAMES.join(\n              ', ',\n            )} are allowed. Helmet does not support rendering <${\n              child.type\n            }> elements. Refer to our API for more information.`,\n          );\n        }\n\n        if (\n          nestedChildren &&\n          typeof nestedChildren !== 'string' &&\n          (!Array.isArray(nestedChildren) ||\n            nestedChildren.some(\n              (nestedChild) => typeof nestedChild !== 'string',\n            ))\n        ) {\n          throw new Error(\n            `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`,\n          );\n        }\n      }\n\n      return true;\n    }\n\n    mapChildrenToProps(children, newProps) {\n      let arrayTypeChildren = {};\n\n      React.Children.forEach(children, (child) => {\n        if (!child || !child.props) {\n          return;\n        }\n\n        const { children: nestedChildren, ...childProps } = child.props;\n        const newChildProps = convertReactPropstoHtmlAttributes(childProps);\n\n        this.warnOnInvalidChildren(child, nestedChildren);\n\n        switch (child.type) {\n          case TAG_NAMES.LINK:\n          case TAG_NAMES.META:\n          case TAG_NAMES.NOSCRIPT:\n          case TAG_NAMES.SCRIPT:\n          case TAG_NAMES.STYLE:\n            arrayTypeChildren = this.flattenArrayTypeChildren({\n              child,\n              arrayTypeChildren,\n              newChildProps,\n              nestedChildren,\n            });\n            break;\n\n          default:\n            newProps = this.mapObjectTypeChildren({\n              child,\n              newProps,\n              newChildProps,\n              nestedChildren,\n            });\n            break;\n        }\n      });\n\n      newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n      return newProps;\n    }\n\n    render() {\n      const { children, ...props } = this.props;\n      let newProps = { ...props };\n\n      if (children) {\n        newProps = this.mapChildrenToProps(children, newProps);\n      }\n\n      return <Component {...newProps} />;\n    }\n  };\n\nconst NullComponent = () => null;\n\nconst HelmetSideEffects = withSideEffect(\n  reducePropsToState,\n  handleClientStateChange,\n  mapStateOnServer,\n)(NullComponent);\n\nconst HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexport { HelmetExport as Helmet };\n\nexport default HelmetExport;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}