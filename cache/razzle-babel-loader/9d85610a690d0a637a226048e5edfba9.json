{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/Controlpanel.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Controlpanel component.\n * @module components/manage/Controlpanels/Controlpanel\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Container } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { updateControlpanel, getControlpanel } from '@plone/volto/actions';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  changesSaved: {\n    \"id\": \"Changes saved.\",\n    \"defaultMessage\": \"Changes saved.\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  info: {\n    \"id\": \"Info\",\n    \"defaultMessage\": \"Info\"\n  }\n});\n/**\n * Controlpanel class.\n * @class Controlpanel\n * @extends Component\n */\n\nclass Controlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Controlpanel\n   */\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"form\", /*#__PURE__*/React.createRef());\n\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      isClient: false\n    };\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      toast.info(__jsx(Toast, {\n        info: true,\n        title: this.props.intl.formatMessage(messages.info),\n        content: this.props.intl.formatMessage(messages.changesSaved),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n\n\n  onSubmit(data) {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n  }\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n\n\n  onCancel() {\n    this.props.history.goBack();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.controlpanel) {\n      return __jsx(\"div\", {\n        id: \"page-controlpanel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, __jsx(Helmet, {\n        title: this.props.controlpanel.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, __jsx(Form, {\n        ref: this.form,\n        title: this.props.controlpanel.title,\n        schema: this.props.controlpanel.schema,\n        formData: this.props.controlpanel.data,\n        onSubmit: this.onSubmit,\n        onCancel: this.onCancel,\n        hideActions: true,\n        loading: this.props.updateRequest.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      })), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Button, {\n          id: \"toolbar-save\",\n          className: \"save\",\n          \"aria-label\": this.props.intl.formatMessage(messages.save),\n          onClick: () => this.form.current.onSubmit(),\n          disabled: this.props.updateRequest.loading,\n          loading: this.props.updateRequest.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: saveSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.save),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 23\n          }\n        })), __jsx(Button, {\n          className: \"cancel\",\n          \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n          onClick: () => this.onCancel(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.cancel),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 23\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      })));\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\n_defineProperty(Controlpanel, \"propTypes\", {\n  updateControlpanel: PropTypes.func.isRequired,\n  getControlpanel: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  controlpanel: PropTypes.shape({\n    '@id': PropTypes.string,\n    data: PropTypes.object,\n    schema: PropTypes.object,\n    title: PropTypes.string\n  }),\n  pathname: PropTypes.string.isRequired\n});\n\n_defineProperty(Controlpanel, \"defaultProps\", {\n  controlpanel: null\n});\n\nexport default compose(injectIntl, connect((state, props) => ({\n  controlpanel: state.controlpanels.controlpanel,\n  updateRequest: state.controlpanels.update,\n  id: props.match.params.id,\n  pathname: props.location.pathname\n}), {\n  updateControlpanel,\n  getControlpanel\n}), withRouter)(Controlpanel);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","withRouter","Helmet","Portal","Button","Container","defineMessages","injectIntl","toast","Form","Icon","Toolbar","Toast","updateControlpanel","getControlpanel","saveSVG","clearSVG","messages","changesSaved","back","save","cancel","info","Controlpanel","constructor","props","createRef","onCancel","bind","onSubmit","state","isClient","componentDidMount","id","setState","UNSAFE_componentWillReceiveProps","nextProps","updateRequest","loading","loaded","intl","formatMessage","data","controlpanel","history","goBack","render","title","form","schema","document","getElementById","pathname","current","func","isRequired","string","shape","bool","object","controlpanels","update","match","params","location"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/Controlpanel.jsx"],"sourcesContent":["/**\n * Controlpanel component.\n * @module components/manage/Controlpanels/Controlpanel\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Container } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\n\nimport { Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { updateControlpanel, getControlpanel } from '@plone/volto/actions';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  changesSaved: {\n    id: 'Changes saved.',\n    defaultMessage: 'Changes saved.',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  info: {\n    id: 'Info',\n    defaultMessage: 'Info',\n  },\n});\n\n/**\n * Controlpanel class.\n * @class Controlpanel\n * @extends Component\n */\nclass Controlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateControlpanel: PropTypes.func.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      data: PropTypes.object,\n      schema: PropTypes.object,\n      title: PropTypes.string,\n    }),\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    controlpanel: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Controlpanel\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      toast.info(\n        <Toast\n          info\n          title={this.props.intl.formatMessage(messages.info)}\n          content={this.props.intl.formatMessage(messages.changesSaved)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.goBack();\n  }\n  form = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.controlpanel) {\n      return (\n        <div id=\"page-controlpanel\">\n          <Helmet title={this.props.controlpanel.title} />\n          <Container>\n            <Form\n              ref={this.form}\n              title={this.props.controlpanel.title}\n              schema={this.props.controlpanel.schema}\n              formData={this.props.controlpanel.data}\n              onSubmit={this.onSubmit}\n              onCancel={this.onCancel}\n              hideActions\n              loading={this.props.updateRequest.loading}\n            />\n          </Container>\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      disabled={this.props.updateRequest.loading}\n                      loading={this.props.updateRequest.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button\n                      className=\"cancel\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      onClick={() => this.onCancel()}\n                    >\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      updateRequest: state.controlpanels.update,\n      id: props.match.params.id,\n      pathname: props.location.pathname,\n    }),\n    { updateControlpanel, getControlpanel },\n  ),\n  withRouter,\n)(Controlpanel);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Changes saved.","defaultMessage":"Changes saved."},{"id":"Back","defaultMessage":"Back"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Info","defaultMessage":"Info"}]}},"sourceType":"module"}