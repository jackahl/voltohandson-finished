{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _uniqBy from \"lodash/uniqBy\";\nconst _excluded = [\"children\"];\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Workflow/Workflow.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Workflow component.\n * @module components/manage/Workflow/Workflow\n */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { FormFieldWrapper, Icon, Toast } from '@plone/volto/components';\nimport { flattenToAppURL, getCurrentStateMapping, getWorkflowOptions } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { getContent, getWorkflow, transitionWorkflow } from '@plone/volto/actions';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nconst messages = defineMessages({\n  messageUpdated: {\n    \"id\": \"Workflow updated.\",\n    \"defaultMessage\": \"Workflow updated.\"\n  },\n  messageNoWorkflow: {\n    \"id\": \"No workflow\",\n    \"defaultMessage\": \"No workflow\"\n  },\n  state: {\n    \"id\": \"State\",\n    \"defaultMessage\": \"State\"\n  }\n});\nconst SingleValue = injectLazyLibs('reactSelect')(_ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.color || null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%'\n  };\n  const {\n    SingleValue\n  } = props.reactSelect.components;\n  return __jsx(SingleValue, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    style: stateDecorator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), children);\n});\nconst Option = injectLazyLibs('reactSelect')(props => {\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.value === props.data.value ? props.selectProps.value.color : null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n    border: props.selectProps.value.value !== props.data.value ? `1px solid ${props.data.color}` : null\n  };\n  const {\n    Option\n  } = props['reactSelect'].components;\n  return __jsx(Option, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    style: stateDecorator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginRight: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, props.label), props.isFocused && !props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 28\n    }\n  }));\n});\nconst DropdownIndicator = injectLazyLibs('reactSelect')(props => {\n  const {\n    DropdownIndicator\n  } = props.reactSelect.components;\n  return __jsx(DropdownIndicator, _extends({}, props, {\n    \"data-testid\": \"workflow-select-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), props.selectProps.menuIsOpen ? __jsx(Icon, {\n    name: upSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }));\n});\n\nconst selectTheme = theme => _objectSpread(_objectSpread({}, theme), {}, {\n  borderRadius: 0,\n  colors: _objectSpread(_objectSpread({}, theme.colors), {}, {\n    primary25: 'hotpink',\n    primary: '#b8c6c8'\n  })\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid'\n  }),\n  menu: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8'\n  }),\n  indicatorSeparator: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    width: null\n  }),\n  valueContainer: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    padding: 0\n  }),\n  option: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected ? '#007bc1' : state.isFocused ? '#4a4a4a' : 'inherit',\n    ':active': {\n      backgroundColor: null\n    },\n    span: {\n      flex: '0 0 auto'\n    },\n    svg: {\n      flex: '0 0 auto'\n    }\n  })\n};\n/**\n * Workflow container class.\n * @class Workflow\n * @extends Component\n */\n\nclass Workflow extends Component {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"transition\", selectedOption => {\n      this.props.transitionWorkflow(flattenToAppURL(selectedOption.url));\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.messageUpdated),\n        content: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 7\n        }\n      }));\n    });\n\n    _defineProperty(this, \"selectValue\", option => {\n      const stateDecorator = {\n        marginLeft: '10px',\n        marginRight: '10px',\n        display: 'inline-block',\n        backgroundColor: option.color || null,\n        content: ' ',\n        height: '10px',\n        width: '10px',\n        borderRadius: '50%'\n      };\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 7\n        }\n      }, __jsx(\"span\", {\n        style: stateDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      }), __jsx(\"span\", {\n        className: \"Select-value-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, option.label));\n    });\n\n    _defineProperty(this, \"optionRenderer\", option => {\n      const stateDecorator = {\n        marginLeft: '10px',\n        marginRight: '10px',\n        display: 'inline-block',\n        backgroundColor: this.props.currentStateValue.value === option.value ? option.color : null,\n        content: ' ',\n        height: '10px',\n        width: '10px',\n        borderRadius: '50%',\n        border: this.props.currentStateValue.value !== option.value ? `1px solid ${option.color}` : null\n      };\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 7\n        }\n      }, __jsx(\"span\", {\n        style: stateDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }\n      }), __jsx(\"span\", {\n        style: {\n          marginRight: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }\n      }, option.label), __jsx(Icon, {\n        name: checkSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }\n      }));\n    });\n  }\n\n  componentDidMount() {\n    this.props.getWorkflow(this.props.pathname);\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getWorkflow(nextProps.pathname);\n    }\n\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getWorkflow(nextProps.pathname);\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n  /**\n   * On transition handler\n   * @method transition\n   * @param {string} event Event object\n   * @returns {undefined}\n   */\n\n\n  render() {\n    const {\n      Placeholder\n    } = this.props.reactSelect.components;\n    const Select = this.props.reactSelect.default;\n    return __jsx(FormFieldWrapper, _extends({\n      id: \"state-select\",\n      title: this.props.intl.formatMessage(messages.state)\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }), __jsx(Select, {\n      name: \"state-select\",\n      className: \"react-select-container\",\n      classNamePrefix: \"react-select\",\n      isDisabled: !this.props.content.review_state || this.props.transitions.length === 0,\n      options: _uniqBy(this.props.transitions.map(transition => getWorkflowOptions(transition)), 'label').concat(this.props.currentStateValue),\n      styles: customSelectStyles,\n      theme: selectTheme,\n      components: {\n        DropdownIndicator,\n        Placeholder,\n        Option,\n        SingleValue\n      },\n      onChange: this.transition,\n      value: this.props.content.review_state ? this.props.currentStateValue : {\n        label: this.props.intl.formatMessage(messages.messageNoWorkflow),\n        value: 'noworkflow'\n      },\n      isSearchable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n_defineProperty(Workflow, \"propTypes\", {\n  getContent: PropTypes.func.isRequired,\n  getWorkflow: PropTypes.func.isRequired,\n  transitionWorkflow: PropTypes.func.isRequired,\n  loaded: PropTypes.bool.isRequired,\n  pathname: PropTypes.string.isRequired,\n  history: PropTypes.arrayOf(PropTypes.shape({\n    review_state: PropTypes.string\n  })),\n  transitions: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    title: PropTypes.string\n  }))\n});\n\n_defineProperty(Workflow, \"defaultProps\", {\n  history: [],\n  transitions: []\n});\n\nexport default compose(injectIntl, injectLazyLibs(['reactSelect']), connect(state => ({\n  loaded: state.workflow.transition.loaded,\n  content: state.content.data,\n  history: state.workflow.history,\n  transitions: state.workflow.transitions,\n  currentStateValue: getCurrentStateMapping(state.workflow.currentState)\n}), {\n  getContent,\n  getWorkflow,\n  transitionWorkflow\n}))(Workflow);","map":{"version":3,"names":["React","Component","Fragment","PropTypes","compose","connect","toast","defineMessages","injectIntl","FormFieldWrapper","Icon","Toast","flattenToAppURL","getCurrentStateMapping","getWorkflowOptions","injectLazyLibs","getContent","getWorkflow","transitionWorkflow","downSVG","upSVG","checkSVG","messages","messageUpdated","messageNoWorkflow","state","SingleValue","children","props","stateDecorator","marginRight","display","backgroundColor","selectProps","value","color","content","height","width","borderRadius","reactSelect","components","Option","data","border","label","isFocused","isSelected","DropdownIndicator","menuIsOpen","selectTheme","theme","colors","primary25","primary","customSelectStyles","control","styles","borderBottom","boxShadow","borderBottomStyle","menu","top","marginTop","indicatorSeparator","valueContainer","padding","option","minHeight","justifyContent","alignItems","span","flex","svg","Workflow","selectedOption","url","success","intl","formatMessage","marginLeft","currentStateValue","componentDidMount","pathname","UNSAFE_componentWillReceiveProps","nextProps","loaded","render","Placeholder","Select","default","review_state","transitions","length","map","transition","concat","func","isRequired","bool","string","history","arrayOf","shape","title","workflow","currentState"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Workflow/Workflow.jsx"],"sourcesContent":["/**\n * Workflow component.\n * @module components/manage/Workflow/Workflow\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { uniqBy } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { FormFieldWrapper, Icon, Toast } from '@plone/volto/components';\nimport {\n  flattenToAppURL,\n  getCurrentStateMapping,\n  getWorkflowOptions,\n} from '@plone/volto/helpers';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport {\n  getContent,\n  getWorkflow,\n  transitionWorkflow,\n} from '@plone/volto/actions';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nconst messages = defineMessages({\n  messageUpdated: {\n    id: 'Workflow updated.',\n    defaultMessage: 'Workflow updated.',\n  },\n  messageNoWorkflow: {\n    id: 'No workflow',\n    defaultMessage: 'No workflow',\n  },\n  state: {\n    id: 'State',\n    defaultMessage: 'State',\n  },\n});\n\nconst SingleValue = injectLazyLibs('reactSelect')(({ children, ...props }) => {\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.color || null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n  };\n  const { SingleValue } = props.reactSelect.components;\n  return (\n    <SingleValue {...props}>\n      <span style={stateDecorator} />\n      {children}\n    </SingleValue>\n  );\n});\n\nconst Option = injectLazyLibs('reactSelect')((props) => {\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor:\n      props.selectProps.value.value === props.data.value\n        ? props.selectProps.value.color\n        : null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n    border:\n      props.selectProps.value.value !== props.data.value\n        ? `1px solid ${props.data.color}`\n        : null,\n  };\n\n  const { Option } = props['reactSelect'].components;\n  return (\n    <Option {...props}>\n      <span style={stateDecorator} />\n      <div style={{ marginRight: 'auto' }}>{props.label}</div>\n      {props.isFocused && !props.isSelected && (\n        <Icon name={checkSVG} size=\"18px\" color=\"#b8c6c8\" />\n      )}\n      {props.isSelected && <Icon name={checkSVG} size=\"18px\" color=\"#007bc1\" />}\n    </Option>\n  );\n});\n\nconst DropdownIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { DropdownIndicator } = props.reactSelect.components;\n  return (\n    <DropdownIndicator {...props} data-testid=\"workflow-select-dropdown\">\n      {props.selectProps.menuIsOpen ? (\n        <Icon name={upSVG} size=\"24px\" color=\"#007bc1\" />\n      ) : (\n        <Icon name={downSVG} size=\"24px\" color=\"#007bc1\" />\n      )}\n    </DropdownIndicator>\n  );\n});\n\nconst selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8',\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    padding: 0,\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n      ? '#4a4a4a'\n      : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n    span: {\n      flex: '0 0 auto',\n    },\n    svg: {\n      flex: '0 0 auto',\n    },\n  }),\n};\n\n/**\n * Workflow container class.\n * @class Workflow\n * @extends Component\n */\nclass Workflow extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getContent: PropTypes.func.isRequired,\n    getWorkflow: PropTypes.func.isRequired,\n    transitionWorkflow: PropTypes.func.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    pathname: PropTypes.string.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        review_state: PropTypes.string,\n      }),\n    ),\n    transitions: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        title: PropTypes.string,\n      }),\n    ),\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    history: [],\n    transitions: [],\n  };\n\n  componentDidMount() {\n    this.props.getWorkflow(this.props.pathname);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getWorkflow(nextProps.pathname);\n    }\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getWorkflow(nextProps.pathname);\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n\n  /**\n   * On transition handler\n   * @method transition\n   * @param {string} event Event object\n   * @returns {undefined}\n   */\n  transition = (selectedOption) => {\n    this.props.transitionWorkflow(flattenToAppURL(selectedOption.url));\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.messageUpdated)}\n        content=\"\"\n      />,\n    );\n  };\n\n  selectValue = (option) => {\n    const stateDecorator = {\n      marginLeft: '10px',\n      marginRight: '10px',\n      display: 'inline-block',\n      backgroundColor: option.color || null,\n      content: ' ',\n      height: '10px',\n      width: '10px',\n      borderRadius: '50%',\n    };\n    return (\n      <Fragment>\n        <span style={stateDecorator} />\n        <span className=\"Select-value-label\">{option.label}</span>\n      </Fragment>\n    );\n  };\n\n  optionRenderer = (option) => {\n    const stateDecorator = {\n      marginLeft: '10px',\n      marginRight: '10px',\n      display: 'inline-block',\n      backgroundColor:\n        this.props.currentStateValue.value === option.value\n          ? option.color\n          : null,\n      content: ' ',\n      height: '10px',\n      width: '10px',\n      borderRadius: '50%',\n      border:\n        this.props.currentStateValue.value !== option.value\n          ? `1px solid ${option.color}`\n          : null,\n    };\n\n    return (\n      <Fragment>\n        <span style={stateDecorator} />\n        <span style={{ marginRight: 'auto' }}>{option.label}</span>\n        <Icon name={checkSVG} size=\"24px\" />\n      </Fragment>\n    );\n  };\n\n  render() {\n    const { Placeholder } = this.props.reactSelect.components;\n    const Select = this.props.reactSelect.default;\n\n    return (\n      <FormFieldWrapper\n        id=\"state-select\"\n        title={this.props.intl.formatMessage(messages.state)}\n        {...this.props}\n      >\n        <Select\n          name=\"state-select\"\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          isDisabled={\n            !this.props.content.review_state ||\n            this.props.transitions.length === 0\n          }\n          options={uniqBy(\n            this.props.transitions.map((transition) =>\n              getWorkflowOptions(transition),\n            ),\n            'label',\n          ).concat(this.props.currentStateValue)}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{\n            DropdownIndicator,\n            Placeholder,\n            Option,\n            SingleValue,\n          }}\n          onChange={this.transition}\n          value={\n            this.props.content.review_state\n              ? this.props.currentStateValue\n              : {\n                  label: this.props.intl.formatMessage(\n                    messages.messageNoWorkflow,\n                  ),\n                  value: 'noworkflow',\n                }\n          }\n          isSearchable={false}\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect']),\n  connect(\n    (state) => ({\n      loaded: state.workflow.transition.loaded,\n      content: state.content.data,\n      history: state.workflow.history,\n      transitions: state.workflow.transitions,\n      currentStateValue: getCurrentStateMapping(state.workflow.currentState),\n    }),\n    { getContent, getWorkflow, transitionWorkflow },\n  ),\n)(Workflow);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Workflow updated.","defaultMessage":"Workflow updated."},{"id":"No workflow","defaultMessage":"No workflow"},{"id":"State","defaultMessage":"State"}]}},"sourceType":"module"}