{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _find from \"lodash/find\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Toolbar/More.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * More component.\n * @module components/manage/Toolbar/More\n */\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport { Pluggable, Plug } from '@plone/volto/components/manage/Pluggable';\nimport { FormattedDate, Icon, Display, Workflow } from '@plone/volto/components';\nimport { applyWorkingCopy, createWorkingCopy, removeWorkingCopy } from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport rightArrowSVG from '@plone/volto/icons/right-key.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport applySVG from '@plone/volto/icons/ready.svg';\nimport removeSVG from '@plone/volto/icons/circle-dismiss.svg';\nconst messages = defineMessages({\n  personalTools: {\n    \"id\": \"Personal tools\",\n    \"defaultMessage\": \"Personal tools\"\n  },\n  history: {\n    \"id\": \"History\",\n    \"defaultMessage\": \"History\"\n  },\n  sharing: {\n    \"id\": \"Sharing\",\n    \"defaultMessage\": \"Sharing\"\n  },\n  aliases: {\n    \"id\": \"URL Management\",\n    \"defaultMessage\": \"URL Management\"\n  },\n  ManageTranslations: {\n    \"id\": \"Manage Translations\",\n    \"defaultMessage\": \"Manage Translations\"\n  },\n  manageContent: {\n    \"id\": \"Manage content\\u2026\",\n    \"defaultMessage\": \"Manage content\\u2026\"\n  },\n  CreateWorkingCopy: {\n    \"id\": \"Create working copy\",\n    \"defaultMessage\": \"Create working copy\"\n  },\n  applyWorkingCopy: {\n    \"id\": \"Apply working copy\",\n    \"defaultMessage\": \"Apply working copy\"\n  },\n  removeWorkingCopy: {\n    \"id\": \"Remove working copy\",\n    \"defaultMessage\": \"Remove working copy\"\n  },\n  viewWorkingCopy: {\n    \"id\": \"View working copy\",\n    \"defaultMessage\": \"View working copy\"\n  },\n  workingAppliedTitle: {\n    \"id\": \"Changes applied.\",\n    \"defaultMessage\": \"Changes applied\"\n  },\n  workingCopyAppliedBy: {\n    \"id\": \"Made by {creator} on {date}. This is not a working copy anymore, but the main content.\",\n    \"defaultMessage\": \"Made by {creator} on {date}. This is not a working copy anymore, but the main content.\"\n  },\n  workingCopyRemovedTitle: {\n    \"id\": \"The working copy was discarded\",\n    \"defaultMessage\": \"The working copy was discarded\"\n  },\n  Unauthorized: {\n    \"id\": \"Unauthorized\",\n    \"defaultMessage\": \"Unauthorized\"\n  },\n  workingCopyErrorUnauthorized: {\n    \"id\": \"workingCopyErrorUnauthorized\",\n    \"defaultMessage\": \"You are not authorized to perform this operation.\"\n  },\n  Error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  workingCopyGenericError: {\n    \"id\": \"workingCopyGenericError\",\n    \"defaultMessage\": \"An error occurred while performing this operation.\"\n  }\n});\n/**\n * More container class.\n * @class More\n * @extends Component\n */\n\nclass More extends Component {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"state\", {\n      openManageTranslations: false,\n      pushed: false\n    });\n\n    _defineProperty(this, \"push\", selector => {\n      this.setState(() => ({\n        pushed: true\n      }));\n      this.props.loadComponent(selector);\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let erroredAction = '';\n\n    if (prevProps.workingCopy.apply.loading && this.props.workingCopy.apply.error) {\n      erroredAction = 'apply';\n    } else if (prevProps.workingCopy.create.loading && this.props.workingCopy.create.error) {\n      erroredAction = 'create';\n    } else if (prevProps.workingCopy.remove.loading && this.props.workingCopy.remove.error) {\n      erroredAction = 'remove';\n    }\n\n    if (erroredAction) {\n      const errorStatus = this.props.workingCopy[erroredAction].error.status;\n\n      if (errorStatus === 401 || errorStatus === 403) {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.Unauthorized),\n          content: this.props.intl.formatMessage(messages.workingCopyErrorUnauthorized),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }\n        }), {\n          toastId: 'workingCopyErrorUnauthorized',\n          autoClose: 10000\n        });\n      } else {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.Error),\n          content: this.props.intl.formatMessage(messages.workingCopyGenericError),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }\n        }), {\n          toastId: 'workingCopyGenericError',\n          autoClose: 10000\n        });\n      }\n    }\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    const path = getBaseUrl(this.props.pathname);\n\n    const editAction = _find(this.props.actions.object, {\n      id: 'edit'\n    });\n\n    const historyAction = _find(this.props.actions.object, {\n      id: 'history'\n    });\n\n    const sharingAction = _find(this.props.actions.object, {\n      id: 'local_roles'\n    });\n\n    const aliasesAction = _find(this.props.actions.object_buttons, {\n      id: 'redirection'\n    });\n\n    const {\n      content,\n      intl\n    } = this.props;\n    const dateOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return __jsx(\"div\", {\n      className: \"menu-more pastanaga-menu\",\n      style: {\n        flex: this.props.theToolbar.current ? `0 0 ${this.props.theToolbar.current.getBoundingClientRect().width}px` : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, this.props.content.title), __jsx(\"button\", {\n      className: \"more-user\",\n      \"aria-label\": this.props.intl.formatMessage(messages.personalTools),\n      onClick: () => this.push('personalTools'),\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: userSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.personalTools),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }))), __jsx(\"div\", {\n      className: \"pastanaga-menu-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, __jsx(Pluggable, {\n      name: \"toolbar-more-menu-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, this.props.content['@type'] !== 'Plone Site' && // Plone Site does not have workflow\n    __jsx(\"li\", {\n      className: \"state-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, __jsx(Workflow, {\n      pathname: path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }))), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, this.props.content['@type'] !== 'Plone Site' && // Plone Site does not have view (yet)\n    __jsx(\"li\", {\n      className: \"display-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, editAction && __jsx(Display, {\n      pathname: path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 34\n      }\n    }))), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"history\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, this.props.content['@type'] !== 'Plone Site' && // Plone Site does not have history (yet)\n    __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      to: `${path}/historyview`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      className: \"pastanaga-menu-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }\n    }, (historyAction === null || historyAction === void 0 ? void 0 : historyAction.title) || this.props.intl.formatMessage(messages.history)), __jsx(\"span\", {\n      className: \"pastanaga-menu-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    })), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    })))), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"sharing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, sharingAction && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      to: `${path}/sharing`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 19\n      }\n    }, this.props.intl.formatMessage(messages.sharing), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }\n    })))), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"aliases\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, aliasesAction && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      to: `${path}/aliases`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, this.props.intl.formatMessage(messages.aliases), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }\n    })))))), __jsx(Pluggable, {\n      name: \"toolbar-more-manage-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }\n    }, pluggables => __jsx(React.Fragment, null, pluggables.length > 0 && __jsx(React.Fragment, null, __jsx(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 19\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }, this.props.intl.formatMessage(messages.manageContent))), __jsx(\"div\", {\n      className: \"pastanaga-menu-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, pluggables.map(p => __jsx(React.Fragment, null, p()))))))), config.settings.hasWorkingCopySupport && this.props.content['@type'] !== 'Plone Site' && __jsx(React.Fragment, null, !this.props.content.working_copy && __jsx(Plug, {\n      pluggable: \"toolbar-more-manage-content\",\n      id: \"workingcopy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 19\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.CreateWorkingCopy),\n      onClick: () => {\n        this.props.createWorkingCopy(path).then(response => {\n          this.props.history.push(flattenToAppURL(response['@id']));\n          this.props.closeMenu();\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    }, this.props.intl.formatMessage(messages.CreateWorkingCopy), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }\n    })))), this.props.content.working_copy && this.props.content.working_copy_of && __jsx(Plug, {\n      pluggable: \"toolbar-more-manage-content\",\n      id: \"workingcopy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 19\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.applyWorkingCopy),\n      onClick: () => {\n        this.props.applyWorkingCopy(path).then(response => {\n          var _content$working_copy, _content$working_copy2;\n\n          this.props.history.push(flattenToAppURL(this.props.content.working_copy_of['@id']));\n          this.props.closeMenu();\n          toast.info(__jsx(Toast, {\n            info: true,\n            title: intl.formatMessage(messages.workingAppliedTitle),\n            content: intl.formatMessage(messages.workingCopyAppliedBy, {\n              creator: (_content$working_copy = content.working_copy) === null || _content$working_copy === void 0 ? void 0 : _content$working_copy.creator_name,\n              date: __jsx(FormattedDate, {\n                date: (_content$working_copy2 = content.working_copy) === null || _content$working_copy2 === void 0 ? void 0 : _content$working_copy2.created,\n                format: dateOptions,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 39\n                }\n              })\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 31\n            }\n          }), {\n            toastId: 'workingcopyapplyinfo',\n            autoClose: 10000\n          });\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 23\n      }\n    }, this.props.intl.formatMessage(messages.applyWorkingCopy), __jsx(Icon, {\n      name: applySVG,\n      size: \"24px\",\n      title: this.props.intl.formatMessage(messages.applyWorkingCopy),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 25\n      }\n    }))), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 21\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.removeWorkingCopy),\n      onClick: () => {\n        this.props.removeWorkingCopy(path).then(response => {\n          this.props.history.push(flattenToAppURL(this.props.content.working_copy_of['@id']));\n          this.props.closeMenu();\n          toast.info(__jsx(Toast, {\n            info: true,\n            title: intl.formatMessage(messages.workingCopyRemovedTitle),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 33\n            }\n          }), {\n            toastId: 'workingcopyremovednotice',\n            autoClose: 10000\n          });\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 23\n      }\n    }, this.props.intl.formatMessage(messages.removeWorkingCopy), __jsx(Icon, {\n      name: removeSVG,\n      size: \"24px\",\n      color: \"#e40166\",\n      title: this.props.intl.formatMessage(messages.removeWorkingCopy),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 25\n      }\n    })))), this.props.content.working_copy && !this.props.content.working_copy_of && __jsx(Plug, {\n      pluggable: \"toolbar-more-manage-content\",\n      id: \"workingcopy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 19\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 21\n      }\n    }, __jsx(Link, {\n      to: flattenToAppURL(this.props.content.working_copy['@id']),\n      onClick: () => this.props.closeMenu(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 23\n      }\n    }, this.props.intl.formatMessage(messages.viewWorkingCopy), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 25\n      }\n    }))))), editAction && config.settings.isMultilingual && __jsx(Plug, {\n      pluggable: \"toolbar-more-manage-content\",\n      id: \"multilingual\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      to: `${path}/manage-translations`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 15\n      }\n    }, this.props.intl.formatMessage(messages.ManageTranslations), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\n_defineProperty(More, \"propTypes\", {\n  actions: PropTypes.shape({\n    object: PropTypes.arrayOf(PropTypes.object),\n    object_buttons: PropTypes.arrayOf(PropTypes.object),\n    user: PropTypes.arrayOf(PropTypes.object)\n  }),\n  pathname: PropTypes.string.isRequired,\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    '@type': PropTypes.string,\n    is_folderish: PropTypes.bool,\n    review_state: PropTypes.string\n  }),\n  loadComponent: PropTypes.func.isRequired,\n  closeMenu: PropTypes.func.isRequired\n});\n\n_defineProperty(More, \"defaultProps\", {\n  actions: null,\n  content: null\n});\n\nexport default compose(injectIntl, withRouter, connect((state, props) => ({\n  actions: state.actions.actions,\n  pathname: props.pathname,\n  content: state.content.data,\n  lang: state.intl.locale,\n  workingCopy: state.workingCopy\n}), {\n  applyWorkingCopy,\n  createWorkingCopy,\n  removeWorkingCopy\n}))(More);","map":{"version":3,"names":["React","Component","defineMessages","injectIntl","PropTypes","connect","compose","Link","withRouter","toast","Toast","Pluggable","Plug","FormattedDate","Icon","Display","Workflow","applyWorkingCopy","createWorkingCopy","removeWorkingCopy","flattenToAppURL","getBaseUrl","config","rightArrowSVG","userSVG","applySVG","removeSVG","messages","personalTools","history","sharing","aliases","ManageTranslations","manageContent","CreateWorkingCopy","viewWorkingCopy","workingAppliedTitle","workingCopyAppliedBy","workingCopyRemovedTitle","Unauthorized","workingCopyErrorUnauthorized","Error","workingCopyGenericError","More","openManageTranslations","pushed","selector","setState","props","loadComponent","document","removeEventListener","handleClickOutside","componentDidUpdate","prevProps","prevState","erroredAction","workingCopy","apply","loading","error","create","remove","errorStatus","status","intl","formatMessage","toastId","autoClose","render","path","pathname","editAction","actions","object","id","historyAction","sharingAction","aliasesAction","object_buttons","content","dateOptions","year","month","day","flex","theToolbar","current","getBoundingClientRect","width","title","push","pluggables","length","map","p","settings","hasWorkingCopySupport","working_copy","then","response","closeMenu","working_copy_of","info","creator","creator_name","date","created","isMultilingual","shape","arrayOf","user","string","isRequired","is_folderish","bool","review_state","func","state","data","lang","locale"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Toolbar/More.jsx"],"sourcesContent":["/**\n * More component.\n * @module components/manage/Toolbar/More\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { find } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport { Pluggable, Plug } from '@plone/volto/components/manage/Pluggable';\nimport {\n  FormattedDate,\n  Icon,\n  Display,\n  Workflow,\n} from '@plone/volto/components';\nimport {\n  applyWorkingCopy,\n  createWorkingCopy,\n  removeWorkingCopy,\n} from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport rightArrowSVG from '@plone/volto/icons/right-key.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport applySVG from '@plone/volto/icons/ready.svg';\nimport removeSVG from '@plone/volto/icons/circle-dismiss.svg';\n\nconst messages = defineMessages({\n  personalTools: {\n    id: 'Personal tools',\n    defaultMessage: 'Personal tools',\n  },\n  history: {\n    id: 'History',\n    defaultMessage: 'History',\n  },\n  sharing: {\n    id: 'Sharing',\n    defaultMessage: 'Sharing',\n  },\n  aliases: {\n    id: 'URL Management',\n    defaultMessage: 'URL Management',\n  },\n  ManageTranslations: {\n    id: 'Manage Translations',\n    defaultMessage: 'Manage Translations',\n  },\n  manageContent: {\n    id: 'Manage content…',\n    defaultMessage: 'Manage content…',\n  },\n  CreateWorkingCopy: {\n    id: 'Create working copy',\n    defaultMessage: 'Create working copy',\n  },\n  applyWorkingCopy: {\n    id: 'Apply working copy',\n    defaultMessage: 'Apply working copy',\n  },\n  removeWorkingCopy: {\n    id: 'Remove working copy',\n    defaultMessage: 'Remove working copy',\n  },\n  viewWorkingCopy: {\n    id: 'View working copy',\n    defaultMessage: 'View working copy',\n  },\n  workingAppliedTitle: {\n    id: 'Changes applied.',\n    defaultMessage: 'Changes applied',\n  },\n  workingCopyAppliedBy: {\n    id:\n      'Made by {creator} on {date}. This is not a working copy anymore, but the main content.',\n    defaultMessage:\n      'Made by {creator} on {date}. This is not a working copy anymore, but the main content.',\n  },\n  workingCopyRemovedTitle: {\n    id: 'The working copy was discarded',\n    defaultMessage: 'The working copy was discarded',\n  },\n  Unauthorized: {\n    id: 'Unauthorized',\n    defaultMessage: 'Unauthorized',\n  },\n  workingCopyErrorUnauthorized: {\n    id: 'workingCopyErrorUnauthorized',\n    defaultMessage: 'You are not authorized to perform this operation.',\n  },\n  Error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  workingCopyGenericError: {\n    id: 'workingCopyGenericError',\n    defaultMessage: 'An error occurred while performing this operation.',\n  },\n});\n\n/**\n * More container class.\n * @class More\n * @extends Component\n */\nclass More extends Component {\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    pathname: PropTypes.string.isRequired,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      '@type': PropTypes.string,\n      is_folderish: PropTypes.bool,\n      review_state: PropTypes.string,\n    }),\n    loadComponent: PropTypes.func.isRequired,\n    closeMenu: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    content: null,\n  };\n  state = {\n    openManageTranslations: false,\n    pushed: false,\n  };\n\n  push = (selector) => {\n    this.setState(() => ({\n      pushed: true,\n    }));\n    this.props.loadComponent(selector);\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    let erroredAction = '';\n    if (\n      prevProps.workingCopy.apply.loading &&\n      this.props.workingCopy.apply.error\n    ) {\n      erroredAction = 'apply';\n    } else if (\n      prevProps.workingCopy.create.loading &&\n      this.props.workingCopy.create.error\n    ) {\n      erroredAction = 'create';\n    } else if (\n      prevProps.workingCopy.remove.loading &&\n      this.props.workingCopy.remove.error\n    ) {\n      erroredAction = 'remove';\n    }\n\n    if (erroredAction) {\n      const errorStatus = this.props.workingCopy[erroredAction].error.status;\n      if (errorStatus === 401 || errorStatus === 403) {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.Unauthorized)}\n            content={this.props.intl.formatMessage(\n              messages.workingCopyErrorUnauthorized,\n            )}\n          />,\n          {\n            toastId: 'workingCopyErrorUnauthorized',\n            autoClose: 10000,\n          },\n        );\n      } else {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.Error)}\n            content={this.props.intl.formatMessage(\n              messages.workingCopyGenericError,\n            )}\n          />,\n          {\n            toastId: 'workingCopyGenericError',\n            autoClose: 10000,\n          },\n        );\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const path = getBaseUrl(this.props.pathname);\n    const editAction = find(this.props.actions.object, { id: 'edit' });\n    const historyAction = find(this.props.actions.object, { id: 'history' });\n    const sharingAction = find(this.props.actions.object, {\n      id: 'local_roles',\n    });\n\n    const aliasesAction = find(this.props.actions.object_buttons, {\n      id: 'redirection',\n    });\n    const { content, intl } = this.props;\n\n    const dateOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    };\n\n    return (\n      <div\n        className=\"menu-more pastanaga-menu\"\n        style={{\n          flex: this.props.theToolbar.current\n            ? `0 0 ${\n                this.props.theToolbar.current.getBoundingClientRect().width\n              }px`\n            : null,\n        }}\n      >\n        <header>\n          <h2>{this.props.content.title}</h2>\n          <button\n            className=\"more-user\"\n            aria-label={this.props.intl.formatMessage(messages.personalTools)}\n            onClick={() => this.push('personalTools')}\n            tabIndex={0}\n          >\n            <Icon\n              name={userSVG}\n              size=\"30px\"\n              title={this.props.intl.formatMessage(messages.personalTools)}\n            />\n          </button>\n        </header>\n        <div className=\"pastanaga-menu-list\">\n          <ul>\n            <Pluggable name=\"toolbar-more-menu-list\" />\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"state\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have workflow\n                <li className=\"state-select\">\n                  <Workflow pathname={path} />\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"view\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have view (yet)\n                <li className=\"display-select\">\n                  {editAction && <Display pathname={path} />}\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"history\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have history (yet)\n                <li>\n                  <Link to={`${path}/historyview`}>\n                    <div>\n                      <span className=\"pastanaga-menu-label\">\n                        {historyAction?.title ||\n                          this.props.intl.formatMessage(messages.history)}\n                      </span>\n                      <span className=\"pastanaga-menu-value\" />\n                    </div>\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"sharing\">\n              {sharingAction && (\n                <li>\n                  <Link to={`${path}/sharing`}>\n                    {this.props.intl.formatMessage(messages.sharing)}\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"aliases\">\n              {aliasesAction && (\n                <li>\n                  <Link to={`${path}/aliases`}>\n                    {this.props.intl.formatMessage(messages.aliases)}\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n          </ul>\n        </div>\n        <Pluggable name=\"toolbar-more-manage-content\">\n          {(pluggables) => (\n            <>\n              {pluggables.length > 0 && (\n                <>\n                  <header>\n                    <h2>\n                      {this.props.intl.formatMessage(messages.manageContent)}\n                    </h2>\n                  </header>\n                  <div className=\"pastanaga-menu-list\">\n                    <ul>\n                      {pluggables.map((p) => (\n                        <>{p()}</>\n                      ))}\n                    </ul>\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </Pluggable>\n        {config.settings.hasWorkingCopySupport &&\n          this.props.content['@type'] !== 'Plone Site' && (\n            <>\n              {!this.props.content.working_copy && (\n                <Plug pluggable=\"toolbar-more-manage-content\" id=\"workingcopy\">\n                  <li>\n                    <button\n                      aria-label={this.props.intl.formatMessage(\n                        messages.CreateWorkingCopy,\n                      )}\n                      onClick={() => {\n                        this.props.createWorkingCopy(path).then((response) => {\n                          this.props.history.push(\n                            flattenToAppURL(response['@id']),\n                          );\n                          this.props.closeMenu();\n                        });\n                      }}\n                    >\n                      {this.props.intl.formatMessage(\n                        messages.CreateWorkingCopy,\n                      )}\n\n                      <Icon name={rightArrowSVG} size=\"24px\" />\n                    </button>\n                  </li>\n                </Plug>\n              )}\n              {this.props.content.working_copy &&\n                this.props.content.working_copy_of && (\n                  <Plug\n                    pluggable=\"toolbar-more-manage-content\"\n                    id=\"workingcopy\"\n                  >\n                    <li>\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.applyWorkingCopy,\n                        )}\n                        onClick={() => {\n                          this.props.applyWorkingCopy(path).then((response) => {\n                            this.props.history.push(\n                              flattenToAppURL(\n                                this.props.content.working_copy_of['@id'],\n                              ),\n                            );\n                            this.props.closeMenu();\n                            toast.info(\n                              <Toast\n                                info\n                                title={intl.formatMessage(\n                                  messages.workingAppliedTitle,\n                                )}\n                                content={intl.formatMessage(\n                                  messages.workingCopyAppliedBy,\n                                  {\n                                    creator: content.working_copy?.creator_name,\n                                    date: (\n                                      <FormattedDate\n                                        date={content.working_copy?.created}\n                                        format={dateOptions}\n                                      />\n                                    ),\n                                  },\n                                )}\n                              />,\n                              {\n                                toastId: 'workingcopyapplyinfo',\n                                autoClose: 10000,\n                              },\n                            );\n                          });\n                        }}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.applyWorkingCopy,\n                        )}\n\n                        <Icon\n                          name={applySVG}\n                          size=\"24px\"\n                          title={this.props.intl.formatMessage(\n                            messages.applyWorkingCopy,\n                          )}\n                        />\n                      </button>\n                    </li>\n                    <li>\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.removeWorkingCopy,\n                        )}\n                        onClick={() => {\n                          this.props\n                            .removeWorkingCopy(path)\n                            .then((response) => {\n                              this.props.history.push(\n                                flattenToAppURL(\n                                  this.props.content.working_copy_of['@id'],\n                                ),\n                              );\n                              this.props.closeMenu();\n                              toast.info(\n                                <Toast\n                                  info\n                                  title={intl.formatMessage(\n                                    messages.workingCopyRemovedTitle,\n                                  )}\n                                />,\n                                {\n                                  toastId: 'workingcopyremovednotice',\n                                  autoClose: 10000,\n                                },\n                              );\n                            });\n                        }}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.removeWorkingCopy,\n                        )}\n\n                        <Icon\n                          name={removeSVG}\n                          size=\"24px\"\n                          color=\"#e40166\"\n                          title={this.props.intl.formatMessage(\n                            messages.removeWorkingCopy,\n                          )}\n                        />\n                      </button>\n                    </li>\n                  </Plug>\n                )}\n              {this.props.content.working_copy &&\n                !this.props.content.working_copy_of && (\n                  <Plug\n                    pluggable=\"toolbar-more-manage-content\"\n                    id=\"workingcopy\"\n                  >\n                    <li>\n                      <Link\n                        to={flattenToAppURL(\n                          this.props.content.working_copy['@id'],\n                        )}\n                        onClick={() => this.props.closeMenu()}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.viewWorkingCopy,\n                        )}\n                        <Icon name={rightArrowSVG} size=\"24px\" />\n                      </Link>\n                    </li>\n                  </Plug>\n                )}\n            </>\n          )}\n        {editAction && config.settings.isMultilingual && (\n          <Plug pluggable=\"toolbar-more-manage-content\" id=\"multilingual\">\n            <li>\n              <Link to={`${path}/manage-translations`}>\n                {this.props.intl.formatMessage(messages.ManageTranslations)}\n\n                <Icon name={rightArrowSVG} size=\"24px\" />\n              </Link>\n            </li>\n          </Plug>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withRouter,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      pathname: props.pathname,\n      content: state.content.data,\n      lang: state.intl.locale,\n      workingCopy: state.workingCopy,\n    }),\n    { applyWorkingCopy, createWorkingCopy, removeWorkingCopy },\n  ),\n)(More);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Personal tools","defaultMessage":"Personal tools"},{"id":"History","defaultMessage":"History"},{"id":"Sharing","defaultMessage":"Sharing"},{"id":"URL Management","defaultMessage":"URL Management"},{"id":"Manage Translations","defaultMessage":"Manage Translations"},{"id":"Manage content…","defaultMessage":"Manage content…"},{"id":"Create working copy","defaultMessage":"Create working copy"},{"id":"Apply working copy","defaultMessage":"Apply working copy"},{"id":"Remove working copy","defaultMessage":"Remove working copy"},{"id":"View working copy","defaultMessage":"View working copy"},{"id":"Changes applied.","defaultMessage":"Changes applied"},{"id":"Made by {creator} on {date}. This is not a working copy anymore, but the main content.","defaultMessage":"Made by {creator} on {date}. This is not a working copy anymore, but the main content."},{"id":"The working copy was discarded","defaultMessage":"The working copy was discarded"},{"id":"Unauthorized","defaultMessage":"Unauthorized"},{"id":"workingCopyErrorUnauthorized","defaultMessage":"You are not authorized to perform this operation."},{"id":"Error","defaultMessage":"Error"},{"id":"workingCopyGenericError","defaultMessage":"An error occurred while performing this operation."}]}},"sourceType":"module"}