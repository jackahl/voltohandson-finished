{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/Edit.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport { LeadImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    \"id\": \"Upload a lead image in the 'Lead Image' content field.\",\n    \"defaultMessage\": \"Upload a lead image in the 'Lead Image' content field.\"\n  }\n});\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\n\nclass Edit extends Component {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"node\", /*#__PURE__*/React.createRef());\n  }\n\n  /**\n   * Align block handler\n   * @method onAlignBlock\n   * @param {string} align Alignment option\n   * @returns {undefined}\n   */\n  onAlignBlock(align) {\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      align\n    }));\n  }\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || !_isEqual(this.props.data, nextProps.data);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      data,\n      properties\n    } = this.props;\n    const placeholder = this.props.data.placeholder || this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n    return __jsx(\"div\", {\n      className: cx('block image align', {\n        center: !Boolean(data.align)\n      }, data.align),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, !properties.image && __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, __jsx(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: imageBlockSVG,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: \"message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, placeholder))), properties.image && __jsx(\"img\", {\n      className: cx({\n        'full-width': data.align === 'full'\n      }),\n      src: properties.image.data ? `data:${properties.image['content-type']};base64,${properties.image.data}` : flattenToAppURL(properties.image.download),\n      alt: data.image_caption || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), __jsx(SidebarPortal, {\n      selected: this.props.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, __jsx(LeadImageSidebar, _extends({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\n_defineProperty(Edit, \"propTypes\", {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired\n});\n\nexport default compose(injectIntl)(Edit);","map":{"version":3,"names":["React","Component","PropTypes","compose","defineMessages","injectIntl","cx","Message","LeadImageSidebar","SidebarPortal","flattenToAppURL","imageBlockSVG","messages","ImageBlockInputPlaceholder","Edit","createRef","onAlignBlock","align","props","onChangeBlock","block","data","shouldComponentUpdate","nextProps","selected","render","properties","placeholder","intl","formatMessage","center","Boolean","image","download","image_caption","objectOf","any","isRequired","bool","string","index","number","pathname","func","openObjectBrowser"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/Edit.jsx"],"sourcesContent":["/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport { isEqual } from 'lodash';\n\nimport { LeadImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\n\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    id: \"Upload a lead image in the 'Lead Image' content field.\",\n    defaultMessage: \"Upload a lead image in the 'Lead Image' content field.\",\n  },\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    properties: PropTypes.objectOf(PropTypes.any).isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Align block handler\n   * @method onAlignBlock\n   * @param {string} align Alignment option\n   * @returns {undefined}\n   */\n  onAlignBlock(align) {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      align,\n    });\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || !isEqual(this.props.data, nextProps.data);\n  }\n\n  node = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { data, properties } = this.props;\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n\n    return (\n      <div\n        className={cx(\n          'block image align',\n          {\n            center: !Boolean(data.align),\n          },\n          data.align,\n        )}\n      >\n        {!properties.image && (\n          <Message>\n            <center>\n              <img src={imageBlockSVG} alt=\"\" />\n              <div className=\"message-text\">{placeholder}</div>\n            </center>\n          </Message>\n        )}\n        {properties.image && (\n          <img\n            className={cx({ 'full-width': data.align === 'full' })}\n            src={\n              properties.image.data\n                ? `data:${properties.image['content-type']};base64,${properties.image.data}`\n                : flattenToAppURL(properties.image.download)\n            }\n            alt={data.image_caption || ''}\n          />\n        )}\n        <SidebarPortal selected={this.props.selected}>\n          <LeadImageSidebar {...this.props} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nexport default compose(injectIntl)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Upload a lead image in the 'Lead Image' content field.","defaultMessage":"Upload a lead image in the 'Lead Image' content field."}]}},"sourceType":"module"}