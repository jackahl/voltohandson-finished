{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n/**\n * emailNotification reducer.\n * @module reducers/emailNotification/emailNotification\n */\nimport { EMAIL_NOTIFICATION } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false\n};\n/**\n * emailNotification reducer.\n * @function emailNotification\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\nexport default function emailNotification() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case `${EMAIL_NOTIFICATION}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n\n    case `${EMAIL_NOTIFICATION}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: true,\n        loading: false\n      });\n\n    case `${EMAIL_NOTIFICATION}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        loaded: false,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["EMAIL_NOTIFICATION","initialState","error","loaded","loading","emailNotification","state","action","type"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/reducers/emailNotification/emailNotification.js"],"sourcesContent":["/**\n * emailNotification reducer.\n * @module reducers/emailNotification/emailNotification\n */\n\nimport { EMAIL_NOTIFICATION } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * emailNotification reducer.\n * @function emailNotification\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function emailNotification(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${EMAIL_NOTIFICATION}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${EMAIL_NOTIFICATION}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loaded: true,\n        loading: false,\n      };\n    case `${EMAIL_NOTIFICATION}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,SAASA,kBAAT,QAAmC,oCAAnC;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IADY;EAEnBC,MAAM,EAAE,KAFW;EAGnBC,OAAO,EAAE;AAHU,CAArB;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,iBAAT,GAA8D;EAAA,IAAnCC,KAAmC,uEAA3BL,YAA2B;EAAA,IAAbM,MAAa,uEAAJ,EAAI;;EAC3E,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,GAAER,kBAAmB,UAA3B;MACE,uCACKM,KADL;QAEEJ,KAAK,EAAE,IAFT;QAGEC,MAAM,EAAE,KAHV;QAIEC,OAAO,EAAE;MAJX;;IAMF,KAAM,GAAEJ,kBAAmB,UAA3B;MACE,uCACKM,KADL;QAEEJ,KAAK,EAAE,IAFT;QAGEC,MAAM,EAAE,IAHV;QAIEC,OAAO,EAAE;MAJX;;IAMF,KAAM,GAAEJ,kBAAmB,OAA3B;MACE,uCACKM,KADL;QAEEJ,KAAK,EAAEK,MAAM,CAACL,KAFhB;QAGEC,MAAM,EAAE,KAHV;QAIEC,OAAO,EAAE;MAJX;;IAMF;MACE,OAAOE,KAAP;EAvBJ;AAyBD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}