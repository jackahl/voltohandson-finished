{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _isEqual from \"lodash/isEqual\";\n\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Listing/Edit.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport { SidebarPortal, ListingBlockBody as ListingBody } from '@plone/volto/components';\nimport ListingData from './ListingData';\nimport { getBaseUrl } from '@plone/volto/helpers';\nconst messages = defineMessages({\n  results: {\n    \"id\": \"Results preview\",\n    \"defaultMessage\": \"Results preview\"\n  },\n  items: {\n    \"id\": \"Contained items\",\n    \"defaultMessage\": \"Contained items\"\n  }\n});\nconst Edit = /*#__PURE__*/React.memo(_c = _s(props => {\n  var _data$querystring, _data$querystring$que;\n\n  _s();\n\n  const {\n    data,\n    onChangeBlock,\n    block,\n    selected,\n    pathname\n  } = props;\n  const intl = useIntl(); // componentDidMount\n\n  React.useEffect(() => {\n    if (!data.query) {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        query: [],\n        block\n      }));\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n\n  }, []);\n  const placeholder = data.placeholder || (data !== null && data !== void 0 && (_data$querystring = data.querystring) !== null && _data$querystring !== void 0 && (_data$querystring$que = _data$querystring.query) !== null && _data$querystring$que !== void 0 && _data$querystring$que.length ? intl.formatMessage(messages.results) : intl.formatMessage(messages.items));\n  const HeadlineTag = data.headlineTag || 'h2';\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"items-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, placeholder), data.headline && __jsx(HeadlineTag, {\n    className: \"headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, data.headline), __jsx(ListingBody, _extends({}, props, {\n    path: getBaseUrl(pathname),\n    isEditMode: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(ListingData, _extends({\n    key: block\n  }, props, {\n    data: data,\n    block: block,\n    onChangeBlock: onChangeBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))));\n}, \"3KFdGxYrc/NRFY3PG8RJCzQPZuM=\", false, function () {\n  return [useIntl];\n}), function areEquals(prevProps, nextProps) {\n  return !(nextProps.selected !== prevProps.selected || !_isEqual(prevProps.data, nextProps.data));\n});\n_c2 = Edit;\nEdit.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.any),\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired\n};\nexport default _c3 = withBlockExtensions(Edit);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Edit$React.memo\");\n$RefreshReg$(_c2, \"Edit\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","PropTypes","defineMessages","useIntl","withBlockExtensions","SidebarPortal","ListingBlockBody","ListingBody","ListingData","getBaseUrl","messages","results","items","Edit","memo","props","data","onChangeBlock","block","selected","pathname","intl","useEffect","query","placeholder","querystring","length","formatMessage","HeadlineTag","headlineTag","headline","areEquals","prevProps","nextProps","propTypes","objectOf","any","isRequired","index","number","bool","string","onSelectBlock","func","arrayOf","properties"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Listing/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { isEqual } from 'lodash';\nimport { withBlockExtensions } from '@plone/volto/helpers';\n\nimport {\n  SidebarPortal,\n  ListingBlockBody as ListingBody,\n} from '@plone/volto/components';\nimport ListingData from './ListingData';\n\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nconst messages = defineMessages({\n  results: {\n    id: 'Results preview',\n    defaultMessage: 'Results preview',\n  },\n  items: {\n    id: 'Contained items',\n    defaultMessage: 'Contained items',\n  },\n});\n\nconst Edit = React.memo(\n  (props) => {\n    const { data, onChangeBlock, block, selected, pathname } = props;\n\n    const intl = useIntl();\n\n    // componentDidMount\n    React.useEffect(() => {\n      if (!data.query) {\n        onChangeBlock(block, {\n          ...data,\n          query: [],\n          block,\n        });\n      }\n      /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const placeholder =\n      data.placeholder ||\n      (data?.querystring?.query?.length\n        ? intl.formatMessage(messages.results)\n        : intl.formatMessage(messages.items));\n\n    const HeadlineTag = data.headlineTag || 'h2';\n\n    return (\n      <>\n        <p className=\"items-preview\">{placeholder}</p>\n        {data.headline && (\n          <HeadlineTag className=\"headline\">{data.headline}</HeadlineTag>\n        )}\n        <ListingBody {...props} path={getBaseUrl(pathname)} isEditMode />\n        <SidebarPortal selected={selected}>\n          <ListingData\n            key={block}\n            {...props}\n            data={data}\n            block={block}\n            onChangeBlock={onChangeBlock}\n          />\n        </SidebarPortal>\n      </>\n    );\n  },\n  function areEquals(prevProps, nextProps) {\n    return !(\n      nextProps.selected !== prevProps.selected ||\n      !isEqual(prevProps.data, nextProps.data)\n    );\n  },\n);\n\nEdit.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.any),\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default withBlockExtensions(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Results preview","defaultMessage":"Results preview"},{"id":"Contained items","defaultMessage":"Contained items"}]}},"sourceType":"module"}