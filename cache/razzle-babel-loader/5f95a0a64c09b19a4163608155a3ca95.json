{"ast":null,"code":"/**\n * Get string as Boolean.\n * @function getBoolean\n * @param {Object} value The value.\n * @return {string} Field name of the layout\n */\nexport function getBoolean(value) {\n  switch (value) {\n    case true:\n    case 'true':\n    case 'True':\n    case 1:\n    case '1':\n    case 'on':\n    case 'yes':\n      return true;\n\n    default:\n      return false;\n  }\n}\n/**\n * Get vocabulary from hint.\n * @function getVocabFromHint\n * @param {Object} props The props.\n * @return {string} Field name of the layout\n */\n\nexport function getVocabFromHint(props) {\n  return props.widgetOptions && props.widgetOptions.vocabulary ? props.widgetOptions.vocabulary['@id'] : false;\n}\n/**\n * Get vocabulary from field.\n * @function getVocabFromField\n * @param {Object} props The props.\n * @return {string} Field name of the layout\n */\n\nexport function getVocabFromField(props) {\n  return props.vocabulary ? props.vocabulary['@id'] : false;\n}\n/**\n * Get vocabulary from items.\n * @function getVocabFromItems\n * @param {Object} props The props.\n * @return {string} Field name of the layout\n */\n\nexport function getVocabFromItems(props) {\n  return props.items && props.items.vocabulary ? props.items.vocabulary['@id'] : false;\n}\n/**\n * Get vocabulary given a URL (coming from a Schema) or from a vocabulary name.\n * @function getVocabName\n * @param {string} vocabNameOrURL\n * @returns {string} Vocabulary name\n */\n\nexport function getVocabName(vocabNameOrURL) {\n  if (vocabNameOrURL) {\n    return vocabNameOrURL.indexOf('@vocabularies') > -1 ? vocabNameOrURL.split('@vocabularies/')[1] : vocabNameOrURL;\n  }\n\n  return vocabNameOrURL;\n}\n/**\n * Get Fields vocabulary\n * @function getFieldsVocabulary\n * @returns {Object} Fields vocabulary\n */\n\nexport function getFieldsVocabulary() {\n  return {\n    items: [{\n      title: 'Choice',\n      token: 'label_choice_field'\n    }, {\n      title: 'Date',\n      token: 'label_date_field'\n    }, {\n      title: 'Date/Time',\n      token: 'label_datetime_field'\n    }, {\n      title: 'Email',\n      token: 'Email'\n    }, {\n      title: 'File Upload',\n      token: 'File Upload'\n    }, {\n      title: 'Floating-point number',\n      token: 'label_float_field'\n    }, {\n      title: 'Image',\n      token: 'Image'\n    }, {\n      title: 'Integer',\n      token: 'label_integer_field'\n    }, {\n      title: 'JSONField',\n      token: 'JSONField'\n    }, {\n      title: 'Multiple Choice',\n      token: 'label_multi_choice_field'\n    }, {\n      title: 'Password',\n      token: 'label_password_field'\n    }, // {\n    //   title: 'Relation Choice',\n    //   token: 'Relation Choice',\n    // },\n    {\n      title: 'Relation List',\n      token: 'Relation List'\n    }, {\n      title: 'Rich Text',\n      token: 'Rich Text'\n    }, {\n      title: 'Text',\n      token: 'label_text_field'\n    }, {\n      title: 'Text line (String)',\n      token: 'label_textline_field'\n    }, {\n      title: 'URL',\n      token: 'URL'\n    }, {\n      title: 'Yes/No',\n      token: 'label_boolean_field'\n    }]\n  };\n}","map":{"version":3,"names":["getBoolean","value","getVocabFromHint","props","widgetOptions","vocabulary","getVocabFromField","getVocabFromItems","items","getVocabName","vocabNameOrURL","indexOf","split","getFieldsVocabulary","title","token"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/helpers/Vocabularies/Vocabularies.js"],"sourcesContent":["/**\n * Get string as Boolean.\n * @function getBoolean\n * @param {Object} value The value.\n * @return {string} Field name of the layout\n */\nexport function getBoolean(value) {\n  switch (value) {\n    case true:\n    case 'true':\n    case 'True':\n    case 1:\n    case '1':\n    case 'on':\n    case 'yes':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Get vocabulary from hint.\n * @function getVocabFromHint\n * @param {Object} props The props.\n * @return {string} Field name of the layout\n */\nexport function getVocabFromHint(props) {\n  return props.widgetOptions && props.widgetOptions.vocabulary\n    ? props.widgetOptions.vocabulary['@id']\n    : false;\n}\n\n/**\n * Get vocabulary from field.\n * @function getVocabFromField\n * @param {Object} props The props.\n * @return {string} Field name of the layout\n */\nexport function getVocabFromField(props) {\n  return props.vocabulary ? props.vocabulary['@id'] : false;\n}\n\n/**\n * Get vocabulary from items.\n * @function getVocabFromItems\n * @param {Object} props The props.\n * @return {string} Field name of the layout\n */\nexport function getVocabFromItems(props) {\n  return props.items && props.items.vocabulary\n    ? props.items.vocabulary['@id']\n    : false;\n}\n\n/**\n * Get vocabulary given a URL (coming from a Schema) or from a vocabulary name.\n * @function getVocabName\n * @param {string} vocabNameOrURL\n * @returns {string} Vocabulary name\n */\nexport function getVocabName(vocabNameOrURL) {\n  if (vocabNameOrURL) {\n    return vocabNameOrURL.indexOf('@vocabularies') > -1\n      ? vocabNameOrURL.split('@vocabularies/')[1]\n      : vocabNameOrURL;\n  }\n  return vocabNameOrURL;\n}\n\n/**\n * Get Fields vocabulary\n * @function getFieldsVocabulary\n * @returns {Object} Fields vocabulary\n */\nexport function getFieldsVocabulary() {\n  return {\n    items: [\n      {\n        title: 'Choice',\n        token: 'label_choice_field',\n      },\n      {\n        title: 'Date',\n        token: 'label_date_field',\n      },\n      {\n        title: 'Date/Time',\n        token: 'label_datetime_field',\n      },\n      {\n        title: 'Email',\n        token: 'Email',\n      },\n      {\n        title: 'File Upload',\n        token: 'File Upload',\n      },\n      {\n        title: 'Floating-point number',\n        token: 'label_float_field',\n      },\n      {\n        title: 'Image',\n        token: 'Image',\n      },\n      {\n        title: 'Integer',\n        token: 'label_integer_field',\n      },\n      {\n        title: 'JSONField',\n        token: 'JSONField',\n      },\n      {\n        title: 'Multiple Choice',\n        token: 'label_multi_choice_field',\n      },\n      {\n        title: 'Password',\n        token: 'label_password_field',\n      },\n      // {\n      //   title: 'Relation Choice',\n      //   token: 'Relation Choice',\n      // },\n      {\n        title: 'Relation List',\n        token: 'Relation List',\n      },\n      {\n        title: 'Rich Text',\n        token: 'Rich Text',\n      },\n      {\n        title: 'Text',\n        token: 'label_text_field',\n      },\n      {\n        title: 'Text line (String)',\n        token: 'label_textline_field',\n      },\n      {\n        title: 'URL',\n        token: 'URL',\n      },\n      {\n        title: 'Yes/No',\n        token: 'label_boolean_field',\n      },\n    ],\n  };\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}