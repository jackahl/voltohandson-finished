{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/TextareaWidget.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/**\n * TextareaWidget component.\n * @module components/manage/Widgets/TextareaWidget\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, TextArea } from 'semantic-ui-react';\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n/**\n * TextareaWidget, a widget for multiple lines text\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Text\",\n *  widget: 'textarea',\n * }\n * ```\n */\n\nconst TextareaWidget = props => {\n  _s();\n\n  const {\n    id,\n    maxLength,\n    value,\n    onChange,\n    placeholder\n  } = props;\n  const {\n    0: lengthError,\n    1: setlengthError\n  } = useState('');\n\n  const onhandleChange = (id, value) => {\n    if (maxLength & (value === null || value === void 0 ? void 0 : value.length)) {\n      let remlength = maxLength - value.length;\n\n      if (remlength < 0) {\n        setlengthError(`You have exceed word limit by ${Math.abs(remlength)}`);\n      } else {\n        setlengthError('');\n      }\n    }\n\n    onChange(id, value);\n  };\n\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), __jsx(TextArea, {\n    id: `field-${id}`,\n    name: id,\n    value: value || '',\n    disabled: props.isDisabled,\n    placeholder: placeholder,\n    onChange: _ref => {\n      let {\n        target\n      } = _ref;\n      return onhandleChange(id, target.value === '' ? undefined : target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), lengthError.length > 0 && __jsx(Label, {\n    key: lengthError,\n    basic: true,\n    color: \"red\",\n    pointing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, lengthError));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\n_s(TextareaWidget, \"2ePEFSa5R5GlQVVjadFV9dsD4ek=\");\n\n_c = TextareaWidget;\nTextareaWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  maxLength: PropTypes.number,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string\n};\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\n\nTextareaWidget.defaultProps = {\n  description: null,\n  maxLength: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null\n};\nexport default _c2 = injectIntl(TextareaWidget);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextareaWidget\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","PropTypes","Label","TextArea","injectIntl","FormFieldWrapper","TextareaWidget","props","id","maxLength","value","onChange","placeholder","lengthError","setlengthError","onhandleChange","length","remlength","Math","abs","isDisabled","target","undefined","propTypes","string","isRequired","title","description","number","required","bool","error","arrayOf","func","onEdit","onDelete","wrapped","defaultProps"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/TextareaWidget.jsx"],"sourcesContent":["/**\n * TextareaWidget component.\n * @module components/manage/Widgets/TextareaWidget\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, TextArea } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * TextareaWidget, a widget for multiple lines text\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Text\",\n *  widget: 'textarea',\n * }\n * ```\n */\nconst TextareaWidget = (props) => {\n  const { id, maxLength, value, onChange, placeholder } = props;\n  const [lengthError, setlengthError] = useState('');\n\n  const onhandleChange = (id, value) => {\n    if (maxLength & value?.length) {\n      let remlength = maxLength - value.length;\n      if (remlength < 0) {\n        setlengthError(`You have exceed word limit by ${Math.abs(remlength)}`);\n      } else {\n        setlengthError('');\n      }\n    }\n    onChange(id, value);\n  };\n\n  return (\n    <FormFieldWrapper {...props} className=\"textarea\">\n      <TextArea\n        id={`field-${id}`}\n        name={id}\n        value={value || ''}\n        disabled={props.isDisabled}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onhandleChange(id, target.value === '' ? undefined : target.value)\n        }\n      />\n      {lengthError.length > 0 && (\n        <Label key={lengthError} basic color=\"red\" pointing>\n          {lengthError}\n        </Label>\n      )}\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nTextareaWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  maxLength: PropTypes.number,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nTextareaWidget.defaultProps = {\n  description: null,\n  maxLength: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default injectIntl(TextareaWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}