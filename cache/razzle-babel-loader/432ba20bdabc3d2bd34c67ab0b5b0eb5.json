{"ast":null,"code":"/**\n * Groups actions.\n * @module actions/groups/groups\n */\nimport { CREATE_GROUP, DELETE_GROUP, GET_GROUP, LIST_GROUPS, LIST_FILTER_GROUPS, UPDATE_GROUP } from '@plone/volto/constants/ActionTypes';\n/**\n * Create group function.\n * @function createGroup\n * @param {Object} data Group data.\n * @returns {Object} Create group action.\n */\n\nexport function createGroup(data) {\n  return {\n    type: CREATE_GROUP,\n    request: {\n      op: 'post',\n      path: '/@groups',\n      data\n    }\n  };\n}\n/**\n * Delete group function.\n * @function deleteGroup\n * @param {string} id Group id\n * @returns {Object} Delete group action.\n */\n\nexport function deleteGroup(id) {\n  return {\n    type: DELETE_GROUP,\n    request: {\n      op: 'del',\n      path: `/@groups/${id}`\n    }\n  };\n}\n/**\n * Get group function\n * @function getGroup\n * @param {string} id Group id\n * @returns {Object} Get group action\n */\n\nexport function getGroup(id) {\n  return {\n    type: GET_GROUP,\n    request: {\n      op: 'get',\n      path: `/@groups/${id}`\n    }\n  };\n}\n/**\n * List groups function\n * Two group lists needed by user group membership control panel: one for joining, one for filtering users.\n * @function listGroups\n * @returns {Object} List groups action\n */\n\nexport function listGroups(query, query_group_filter) {\n  return query_group_filter !== undefined ? {\n    type: LIST_FILTER_GROUPS,\n    request: query_group_filter ? {\n      op: 'get',\n      path: `/@groups?query=${query_group_filter}`\n    } : {\n      op: 'get',\n      path: `/@groups`\n    }\n  } : {\n    type: LIST_GROUPS,\n    request: query ? {\n      op: 'get',\n      path: `/@groups?query=${query}`\n    } : {\n      op: 'get',\n      path: '/@groups'\n    }\n  };\n}\n/**\n * Update group function.\n * @function updateGroup\n * @param {string} id Group id\n * @param {Object} data Group data.\n * @returns {Object} Update group action.\n */\n\nexport function updateGroup(id, data) {\n  return {\n    type: UPDATE_GROUP,\n    request: {\n      op: 'patch',\n      path: `/@groups/${id}`,\n      data\n    }\n  };\n}","map":{"version":3,"names":["CREATE_GROUP","DELETE_GROUP","GET_GROUP","LIST_GROUPS","LIST_FILTER_GROUPS","UPDATE_GROUP","createGroup","data","type","request","op","path","deleteGroup","id","getGroup","listGroups","query","query_group_filter","undefined","updateGroup"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/actions/groups/groups.js"],"sourcesContent":["/**\n * Groups actions.\n * @module actions/groups/groups\n */\n\nimport {\n  CREATE_GROUP,\n  DELETE_GROUP,\n  GET_GROUP,\n  LIST_GROUPS,\n  LIST_FILTER_GROUPS,\n  UPDATE_GROUP,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Create group function.\n * @function createGroup\n * @param {Object} data Group data.\n * @returns {Object} Create group action.\n */\nexport function createGroup(data) {\n  return {\n    type: CREATE_GROUP,\n    request: {\n      op: 'post',\n      path: '/@groups',\n      data,\n    },\n  };\n}\n\n/**\n * Delete group function.\n * @function deleteGroup\n * @param {string} id Group id\n * @returns {Object} Delete group action.\n */\nexport function deleteGroup(id) {\n  return {\n    type: DELETE_GROUP,\n    request: {\n      op: 'del',\n      path: `/@groups/${id}`,\n    },\n  };\n}\n\n/**\n * Get group function\n * @function getGroup\n * @param {string} id Group id\n * @returns {Object} Get group action\n */\nexport function getGroup(id) {\n  return {\n    type: GET_GROUP,\n    request: {\n      op: 'get',\n      path: `/@groups/${id}`,\n    },\n  };\n}\n\n/**\n * List groups function\n * Two group lists needed by user group membership control panel: one for joining, one for filtering users.\n * @function listGroups\n * @returns {Object} List groups action\n */\nexport function listGroups(query, query_group_filter) {\n  return query_group_filter !== undefined\n    ? {\n        type: LIST_FILTER_GROUPS,\n        request: query_group_filter\n          ? {\n              op: 'get',\n              path: `/@groups?query=${query_group_filter}`,\n            }\n          : {\n              op: 'get',\n              path: `/@groups`,\n            },\n      }\n    : {\n        type: LIST_GROUPS,\n        request: query\n          ? {\n              op: 'get',\n              path: `/@groups?query=${query}`,\n            }\n          : {\n              op: 'get',\n              path: '/@groups',\n            },\n      };\n}\n\n/**\n * Update group function.\n * @function updateGroup\n * @param {string} id Group id\n * @param {Object} data Group data.\n * @returns {Object} Update group action.\n */\nexport function updateGroup(id, data) {\n  return {\n    type: UPDATE_GROUP,\n    request: {\n      op: 'patch',\n      path: `/@groups/${id}`,\n      data,\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SACEA,YADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,kBALF,EAMEC,YANF,QAOO,oCAPP;AASA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EAChC,OAAO;IACLC,IAAI,EAAER,YADD;IAELS,OAAO,EAAE;MACPC,EAAE,EAAE,MADG;MAEPC,IAAI,EAAE,UAFC;MAGPJ;IAHO;EAFJ,CAAP;AAQD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,WAAT,CAAqBC,EAArB,EAAyB;EAC9B,OAAO;IACLL,IAAI,EAAEP,YADD;IAELQ,OAAO,EAAE;MACPC,EAAE,EAAE,KADG;MAEPC,IAAI,EAAG,YAAWE,EAAG;IAFd;EAFJ,CAAP;AAOD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBD,EAAlB,EAAsB;EAC3B,OAAO;IACLL,IAAI,EAAEN,SADD;IAELO,OAAO,EAAE;MACPC,EAAE,EAAE,KADG;MAEPC,IAAI,EAAG,YAAWE,EAAG;IAFd;EAFJ,CAAP;AAOD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,UAAT,CAAoBC,KAApB,EAA2BC,kBAA3B,EAA+C;EACpD,OAAOA,kBAAkB,KAAKC,SAAvB,GACH;IACEV,IAAI,EAAEJ,kBADR;IAEEK,OAAO,EAAEQ,kBAAkB,GACvB;MACEP,EAAE,EAAE,KADN;MAEEC,IAAI,EAAG,kBAAiBM,kBAAmB;IAF7C,CADuB,GAKvB;MACEP,EAAE,EAAE,KADN;MAEEC,IAAI,EAAG;IAFT;EAPN,CADG,GAaH;IACEH,IAAI,EAAEL,WADR;IAEEM,OAAO,EAAEO,KAAK,GACV;MACEN,EAAE,EAAE,KADN;MAEEC,IAAI,EAAG,kBAAiBK,KAAM;IAFhC,CADU,GAKV;MACEN,EAAE,EAAE,KADN;MAEEC,IAAI,EAAE;IAFR;EAPN,CAbJ;AAyBD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASQ,WAAT,CAAqBN,EAArB,EAAyBN,IAAzB,EAA+B;EACpC,OAAO;IACLC,IAAI,EAAEH,YADD;IAELI,OAAO,EAAE;MACPC,EAAE,EAAE,OADG;MAEPC,IAAI,EAAG,YAAWE,EAAG,EAFd;MAGPN;IAHO;EAFJ,CAAP;AAQD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}