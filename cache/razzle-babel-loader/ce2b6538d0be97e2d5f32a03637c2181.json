{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Navigation/Navigation.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Navigation components.\n * @module components/theme/Navigation/Navigation\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Menu } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { BodyClass, getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { getNavigation } from '@plone/volto/actions';\nimport { CSSTransition } from 'react-transition-group';\nimport NavItems from '@plone/volto/components/theme/Navigation/NavItems';\nconst messages = defineMessages({\n  closeMobileMenu: {\n    \"id\": \"Close menu\",\n    \"defaultMessage\": \"Close menu\"\n  },\n  openMobileMenu: {\n    \"id\": \"Open menu\",\n    \"defaultMessage\": \"Open menu\"\n  }\n});\n/**\n * Navigation container class.\n * @class Navigation\n * @extends Component\n */\n\nclass Navigation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Navigation\n   */\n  constructor(props) {\n    super(props);\n    this.toggleMobileMenu = this.toggleMobileMenu.bind(this);\n    this.closeMobileMenu = this.closeMobileMenu.bind(this);\n    this.state = {\n      isMobileMenuOpen: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      settings\n    } = config;\n\n    if (!hasApiExpander('navigation', getBaseUrl(this.props.pathname))) {\n      this.props.getNavigation(getBaseUrl(this.props.pathname), settings.navDepth);\n    }\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const {\n      settings\n    } = config;\n\n    if (nextProps.pathname !== this.props.pathname || nextProps.token !== this.props.token) {\n      if (!hasApiExpander('navigation', getBaseUrl(this.props.pathname))) {\n        this.props.getNavigation(getBaseUrl(nextProps.pathname), settings.navDepth);\n      }\n    }\n  }\n  /**\n   * Toggle mobile menu's open state\n   * @method toggleMobileMenu\n   * @returns {undefined}\n   */\n\n\n  toggleMobileMenu() {\n    this.setState({\n      isMobileMenuOpen: !this.state.isMobileMenuOpen\n    });\n  }\n  /**\n   * Close mobile menu\n   * @method closeMobileMenu\n   * @returns {undefined}\n   */\n\n\n  closeMobileMenu() {\n    if (!this.state.isMobileMenuOpen) {\n      return;\n    }\n\n    this.setState({\n      isMobileMenuOpen: false\n    });\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    return __jsx(\"nav\", {\n      className: \"navigation\",\n      id: \"navigation\",\n      \"aria-label\": \"navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"hamburger-wrapper mobile tablet only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      className: cx('hamburger hamburger--spin', {\n        'is-active': this.state.isMobileMenuOpen\n      }),\n      \"aria-label\": this.state.isMobileMenuOpen ? this.props.intl.formatMessage(messages.closeMobileMenu, {\n        type: this.props.type\n      }) : this.props.intl.formatMessage(messages.openMobileMenu, {\n        type: this.props.type\n      }),\n      title: this.state.isMobileMenuOpen ? this.props.intl.formatMessage(messages.closeMobileMenu, {\n        type: this.props.type\n      }) : this.props.intl.formatMessage(messages.openMobileMenu, {\n        type: this.props.type\n      }),\n      type: \"button\",\n      onClick: this.toggleMobileMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: \"hamburger-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"hamburger-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    })))), __jsx(Menu, {\n      stackable: true,\n      pointing: true,\n      secondary: true,\n      className: \"computer large screen widescreen only\",\n      onClick: this.closeMobileMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, __jsx(NavItems, {\n      items: this.props.items,\n      lang: this.props.lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    })), __jsx(CSSTransition, {\n      in: this.state.isMobileMenuOpen,\n      timeout: 500,\n      classNames: \"mobile-menu\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      key: \"mobile-menu-key\",\n      className: \"mobile-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, __jsx(BodyClass, {\n      className: \"has-mobile-menu-open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      className: \"mobile-menu-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, __jsx(Menu, {\n      stackable: true,\n      pointing: true,\n      secondary: true,\n      onClick: this.closeMobileMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, __jsx(NavItems, {\n      items: this.props.items,\n      lang: this.props.lang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\n_defineProperty(Navigation, \"propTypes\", {\n  getNavigation: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    url: PropTypes.string\n  })).isRequired,\n  lang: PropTypes.string.isRequired\n});\n\n_defineProperty(Navigation, \"defaultProps\", {\n  token: null\n});\n\nexport default compose(injectIntl, connect(state => ({\n  token: state.userSession.token,\n  items: state.navigation.items,\n  lang: state.intl.locale\n}), {\n  getNavigation\n}))(Navigation);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","defineMessages","injectIntl","Menu","cx","BodyClass","getBaseUrl","hasApiExpander","config","getNavigation","CSSTransition","NavItems","messages","closeMobileMenu","openMobileMenu","Navigation","constructor","props","toggleMobileMenu","bind","state","isMobileMenuOpen","componentDidMount","settings","pathname","navDepth","UNSAFE_componentWillReceiveProps","nextProps","token","setState","render","intl","formatMessage","type","items","lang","func","isRequired","string","arrayOf","shape","title","url","userSession","navigation","locale"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Navigation/Navigation.jsx"],"sourcesContent":["/**\n * Navigation components.\n * @module components/theme/Navigation/Navigation\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Menu } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { BodyClass, getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { getNavigation } from '@plone/volto/actions';\nimport { CSSTransition } from 'react-transition-group';\nimport NavItems from '@plone/volto/components/theme/Navigation/NavItems';\n\nconst messages = defineMessages({\n  closeMobileMenu: {\n    id: 'Close menu',\n    defaultMessage: 'Close menu',\n  },\n  openMobileMenu: {\n    id: 'Open menu',\n    defaultMessage: 'Open menu',\n  },\n});\n\n/**\n * Navigation container class.\n * @class Navigation\n * @extends Component\n */\nclass Navigation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getNavigation: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    lang: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    token: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Navigation\n   */\n  constructor(props) {\n    super(props);\n    this.toggleMobileMenu = this.toggleMobileMenu.bind(this);\n    this.closeMobileMenu = this.closeMobileMenu.bind(this);\n    this.state = {\n      isMobileMenuOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    const { settings } = config;\n    if (!hasApiExpander('navigation', getBaseUrl(this.props.pathname))) {\n      this.props.getNavigation(\n        getBaseUrl(this.props.pathname),\n        settings.navDepth,\n      );\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { settings } = config;\n    if (\n      nextProps.pathname !== this.props.pathname ||\n      nextProps.token !== this.props.token\n    ) {\n      if (!hasApiExpander('navigation', getBaseUrl(this.props.pathname))) {\n        this.props.getNavigation(\n          getBaseUrl(nextProps.pathname),\n          settings.navDepth,\n        );\n      }\n    }\n  }\n\n  /**\n   * Toggle mobile menu's open state\n   * @method toggleMobileMenu\n   * @returns {undefined}\n   */\n  toggleMobileMenu() {\n    this.setState({ isMobileMenuOpen: !this.state.isMobileMenuOpen });\n  }\n\n  /**\n   * Close mobile menu\n   * @method closeMobileMenu\n   * @returns {undefined}\n   */\n  closeMobileMenu() {\n    if (!this.state.isMobileMenuOpen) {\n      return;\n    }\n    this.setState({ isMobileMenuOpen: false });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <nav className=\"navigation\" id=\"navigation\" aria-label=\"navigation\">\n        <div className=\"hamburger-wrapper mobile tablet only\">\n          <button\n            className={cx('hamburger hamburger--spin', {\n              'is-active': this.state.isMobileMenuOpen,\n            })}\n            aria-label={\n              this.state.isMobileMenuOpen\n                ? this.props.intl.formatMessage(messages.closeMobileMenu, {\n                    type: this.props.type,\n                  })\n                : this.props.intl.formatMessage(messages.openMobileMenu, {\n                    type: this.props.type,\n                  })\n            }\n            title={\n              this.state.isMobileMenuOpen\n                ? this.props.intl.formatMessage(messages.closeMobileMenu, {\n                    type: this.props.type,\n                  })\n                : this.props.intl.formatMessage(messages.openMobileMenu, {\n                    type: this.props.type,\n                  })\n            }\n            type=\"button\"\n            onClick={this.toggleMobileMenu}\n          >\n            <span className=\"hamburger-box\">\n              <span className=\"hamburger-inner\" />\n            </span>\n          </button>\n        </div>\n        <Menu\n          stackable\n          pointing\n          secondary\n          className=\"computer large screen widescreen only\"\n          onClick={this.closeMobileMenu}\n        >\n          <NavItems items={this.props.items} lang={this.props.lang} />\n        </Menu>\n        <CSSTransition\n          in={this.state.isMobileMenuOpen}\n          timeout={500}\n          classNames=\"mobile-menu\"\n          unmountOnExit\n        >\n          <div key=\"mobile-menu-key\" className=\"mobile-menu\">\n            <BodyClass className=\"has-mobile-menu-open\" />\n            <div className=\"mobile-menu-nav\">\n              <Menu stackable pointing secondary onClick={this.closeMobileMenu}>\n                <NavItems items={this.props.items} lang={this.props.lang} />\n              </Menu>\n            </div>\n          </div>\n        </CSSTransition>\n      </nav>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      token: state.userSession.token,\n      items: state.navigation.items,\n      lang: state.intl.locale,\n    }),\n    { getNavigation },\n  ),\n)(Navigation);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Close menu","defaultMessage":"Close menu"},{"id":"Open menu","defaultMessage":"Open menu"}]}},"sourceType":"module"}