{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _uniq from \"lodash/uniq\";\nimport _union from \"lodash/union\";\nimport _map from \"lodash/map\";\nimport _keys from \"lodash/keys\";\nimport _concat from \"lodash/concat\";\nimport _compact from \"lodash/compact\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/IdWidget.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * IdWidget component.\n * @module components/manage/Widgets/IdWidget\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Input } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport { getQuerystring } from '@plone/volto/actions';\nconst messages = defineMessages({\n  reservedId: {\n    \"id\": \"This is a reserved name and can't be used\",\n    \"defaultMessage\": \"This is a reserved name and can't be used\"\n  },\n  invalidCharacters: {\n    \"id\": \"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \\\"-\\\", \\\"_\\\", and \\\".\\\" are allowed.\",\n    \"defaultMessage\": \"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \\\"-\\\", \\\"_\\\", and \\\".\\\" are allowed.\"\n  }\n});\n/**\n * The id widget.\n *\n * This is the id widget to handle for example the short name field.\n */\n\nclass IdWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: [],\n      reservedIds: _compact(_uniq(_union(config.settings.reservedIds, _map(config.settings.nonContentRoutes, route => String(route).replace(/[^a-z-]/g, '')))))\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.fieldValidation = this.fieldValidation.bind(this);\n  }\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n\n    this.props.getQuerystring();\n    this.fieldValidation(this.props.value);\n  }\n  /**\n   * Field validation.\n   * @method fieldValidation\n   * @param {string} value New value\n   * @returns {undefined}\n   */\n\n\n  fieldValidation(value) {\n    const error = []; // Check reserved id's\n\n    if (this.state.reservedIds.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    } // Check invalid characters\n\n\n    if (!/^[.a-z0-9_-]*$/.test(value)) {\n      error.push(this.props.intl.formatMessage(messages.invalidCharacters));\n    } // Check indexes\n\n\n    if (this.props.indexes.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    this.setState({\n      error\n    });\n  }\n  /**\n   * Handle the field change.\n   * @method handleChange\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    this.fieldValidation(target.value);\n    this.props.onChange(this.props.id, target.value === '' ? undefined : target.value);\n  }\n  /**\n   * Handle the field blur.\n   * @method handleBlur\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n\n\n  handleBlur(_ref2) {\n    let {\n      target\n    } = _ref2;\n    this.fieldValidation(target.value);\n    this.props.onBlur(this.props.id, target.value === '' ? undefined : target.value);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    const {\n      id,\n      value,\n      onClick,\n      icon,\n      iconAction,\n      minLength,\n      maxLength,\n      placeholder\n    } = this.props;\n\n    const props = _objectSpread(_objectSpread({}, this.props), {}, {\n      error: _concat(this.props.error, this.state.error)\n    });\n\n    return __jsx(FormFieldWrapper, _extends({}, props, {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }), __jsx(Input, {\n      id: `field-${id}`,\n      name: id,\n      value: value || '',\n      disabled: this.props.isDisabled,\n      icon: icon || null,\n      placeholder: placeholder,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      onClick: () => onClick(),\n      ref: node => {\n        this.node = node;\n      },\n      minLength: minLength || null,\n      maxLength: maxLength || null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }), icon && iconAction && __jsx(\"button\", {\n      className: `field-${id}-action-button`,\n      onClick: iconAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: icon,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\n_defineProperty(IdWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  icon: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string\n  }),\n  iconAction: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string\n});\n\n_defineProperty(IdWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  onEdit: null,\n  onDelete: null,\n  focus: false,\n  icon: null,\n  iconAction: null,\n  minLength: null,\n  maxLength: null\n});\n\nexport default compose(injectIntl, connect((state, props) => ({\n  indexes: _keys(state.querystring.indexes)\n}), {\n  getQuerystring\n}))(IdWidget);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Input","defineMessages","injectIntl","Icon","FormFieldWrapper","config","getQuerystring","messages","reservedId","invalidCharacters","IdWidget","constructor","props","state","error","reservedIds","settings","nonContentRoutes","route","String","replace","handleChange","bind","handleBlur","fieldValidation","componentDidMount","focus","node","value","indexOf","push","intl","formatMessage","test","indexes","setState","target","onChange","id","undefined","onBlur","render","onClick","icon","iconAction","minLength","maxLength","placeholder","isDisabled","string","isRequired","title","description","required","bool","arrayOf","func","onEdit","onDelete","shape","xmlns","viewBox","content","number","wrapped","querystring"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/IdWidget.jsx"],"sourcesContent":["/**\n * IdWidget component.\n * @module components/manage/Widgets/IdWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Input } from 'semantic-ui-react';\nimport { compact, concat, keys, map, union, uniq } from 'lodash';\n\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport { getQuerystring } from '@plone/volto/actions';\n\nconst messages = defineMessages({\n  reservedId: {\n    id: \"This is a reserved name and can't be used\",\n    defaultMessage: \"This is a reserved name and can't be used\",\n  },\n  invalidCharacters: {\n    id:\n      'Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed.',\n    defaultMessage:\n      'Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed.',\n  },\n});\n\n/**\n * The id widget.\n *\n * This is the id widget to handle for example the short name field.\n */\nclass IdWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.string,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    icon: PropTypes.shape({\n      xmlns: PropTypes.string,\n      viewBox: PropTypes.string,\n      content: PropTypes.string,\n    }),\n    iconAction: PropTypes.func,\n    minLength: PropTypes.number,\n    maxLength: PropTypes.number,\n    wrapped: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n    icon: null,\n    iconAction: null,\n    minLength: null,\n    maxLength: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: [],\n      reservedIds: compact(\n        uniq(\n          union(\n            config.settings.reservedIds,\n            map(config.settings.nonContentRoutes, (route) =>\n              String(route).replace(/[^a-z-]/g, ''),\n            ),\n          ),\n        ),\n      ),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.fieldValidation = this.fieldValidation.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n    this.fieldValidation(this.props.value);\n  }\n\n  /**\n   * Field validation.\n   * @method fieldValidation\n   * @param {string} value New value\n   * @returns {undefined}\n   */\n  fieldValidation(value) {\n    const error = [];\n\n    // Check reserved id's\n    if (this.state.reservedIds.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    // Check invalid characters\n    if (!/^[.a-z0-9_-]*$/.test(value)) {\n      error.push(this.props.intl.formatMessage(messages.invalidCharacters));\n    }\n\n    // Check indexes\n    if (this.props.indexes.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    this.setState({ error });\n  }\n\n  /**\n   * Handle the field change.\n   * @method handleChange\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleChange({ target }) {\n    this.fieldValidation(target.value);\n    this.props.onChange(\n      this.props.id,\n      target.value === '' ? undefined : target.value,\n    );\n  }\n\n  /**\n   * Handle the field blur.\n   * @method handleBlur\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleBlur({ target }) {\n    this.fieldValidation(target.value);\n    this.props.onBlur(\n      this.props.id,\n      target.value === '' ? undefined : target.value,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      value,\n      onClick,\n      icon,\n      iconAction,\n      minLength,\n      maxLength,\n      placeholder,\n    } = this.props;\n\n    const props = {\n      ...this.props,\n      error: concat(this.props.error, this.state.error),\n    };\n\n    return (\n      <FormFieldWrapper {...props} className=\"text\">\n        <Input\n          id={`field-${id}`}\n          name={id}\n          value={value || ''}\n          disabled={this.props.isDisabled}\n          icon={icon || null}\n          placeholder={placeholder}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onClick={() => onClick()}\n          ref={(node) => {\n            this.node = node;\n          }}\n          minLength={minLength || null}\n          maxLength={maxLength || null}\n        />\n        {icon && iconAction && (\n          <button className={`field-${id}-action-button`} onClick={iconAction}>\n            <Icon name={icon} size=\"18px\" />\n          </button>\n        )}\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      indexes: keys(state.querystring.indexes),\n    }),\n    {\n      getQuerystring,\n    },\n  ),\n)(IdWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"This is a reserved name and can't be used","defaultMessage":"This is a reserved name and can't be used"},{"id":"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed.","defaultMessage":"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed."}]}},"sourceType":"module"}