{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Comments/Comments.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Comments components.\n * @module components/theme/Comments/Comments\n */\nimport { addComment, deleteComment, listComments, listMoreComments } from '@plone/volto/actions';\nimport { Avatar, CommentEditModal, Form } from '@plone/volto/components';\nimport { flattenToAppURL, getBaseUrl, getColor } from '@plone/volto/helpers';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Comment, Container, Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable'; // import { Button, Grid, Segment, Container } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  comment: {\n    \"id\": \"Comment\",\n    \"defaultMessage\": \"Comment\"\n  },\n  comments: {\n    \"id\": \"Comments\",\n    \"defaultMessage\": \"Comments\"\n  },\n  commentDescription: {\n    \"id\": \"You can add a comment by filling out the form below. Plain text formatting.\",\n    \"defaultMessage\": \"You can add a comment by filling out the form below. Plain text formatting.\"\n  },\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  delete: {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Edit\"\n  },\n  reply: {\n    \"id\": \"Reply\",\n    \"defaultMessage\": \"Reply\"\n  },\n  hideReplies: {\n    \"id\": \"Hide Replies\",\n    \"defaultMessage\": \"Hide Replies\"\n  },\n  showReplies: {\n    \"id\": \"Show Replies\",\n    \"defaultMessage\": \"Show Replies\"\n  },\n  loadMoreComments: {\n    \"id\": \"Load more\",\n    \"defaultMessage\": \"Load more...\"\n  }\n});\n/**\n * Schema for the Form components to show an input field with it's label\n * @param {Object} intl\n */\n\nconst makeFormSchema = intl => ({\n  fieldsets: [{\n    fields: ['comment'],\n    id: 'default',\n    title: intl.formatMessage(messages.default)\n  }],\n  properties: {\n    comment: {\n      title: intl.formatMessage(messages.comment),\n      type: 'string',\n      widget: 'textarea'\n    }\n  },\n  required: ['comment1']\n});\n/**\n * Comments container class.\n * @class Comments\n * @extends Component\n */\n\n\nclass Comments extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Comments\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onEditOk = this.onEditOk.bind(this);\n    this.onEditCancel = this.onEditCancel.bind(this);\n    this.setReplyTo = this.setReplyTo.bind(this);\n    this.loadMoreComments = this.loadMoreComments.bind(this);\n    this.state = {\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n      collapsedComments: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname || this.props.addRequest.loading && nextProps.addRequest.loaded || this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) {\n      this.props.listComments(getBaseUrl(nextProps.pathname));\n    }\n  }\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} formData Form data.\n   * @returns {undefined}\n   */\n\n\n  onSubmit(formData) {\n    this.props.addComment(getBaseUrl(this.props.pathname), formData.comment, this.state.replyTo);\n    this.setState({\n      replyTo: null\n    });\n  }\n  /**\n   * The id of the comment that will receive a reply\n   * @param {string} commentId\n   */\n\n\n  setReplyTo(commentId) {\n    this.setState({\n      replyTo: commentId\n    });\n  }\n  /**\n   * Calls the action listMoreComments passing the received url for next array of comments\n   */\n\n\n  loadMoreComments() {\n    this.props.listMoreComments(this.props.next);\n  }\n  /**\n   * Delete handler\n   * @method onDelete\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n\n\n  onDelete(value) {\n    this.props.deleteComment(value);\n  }\n  /**\n   * Will hide all replies to the specific comment\n   * including replies to any of the replies\n   * @param {string} commentId\n   */\n\n\n  hideReply(commentId) {\n    this.setState(prevState => {\n      const hasComment = prevState.collapsedComments[commentId];\n      const {\n        collapsedComments\n      } = prevState;\n      return {\n        collapsedComments: _objectSpread(_objectSpread({}, collapsedComments), {}, {\n          [commentId]: !hasComment\n        })\n      };\n    });\n  }\n  /**\n   * Edit handler\n   * @method onEdit\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n\n\n  onEdit(value) {\n    this.setState({\n      showEdit: true,\n      editId: value.id,\n      editText: value.text\n    });\n  }\n  /**\n   * On edit ok\n   * @method onEditOk\n   * @returns {undefined}\n   */\n\n\n  onEditOk() {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null\n    });\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n  /**\n   * On edit cancel\n   * @method onEditCancel\n   * @returns {undefined}\n   */\n\n\n  onEditCancel(ev) {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null\n    });\n  }\n\n  addRepliesAsChildrenToComments(items) {\n    let initialValue = {};\n    const allCommentsWithCildren = items.reduce((accumulator, item) => {\n      return _objectSpread({\n        [item.comment_id]: {\n          comment: item,\n          children: []\n        }\n      }, accumulator);\n    }, initialValue);\n    items.forEach(comment => {\n      if (comment.in_reply_to) {\n        allCommentsWithCildren[comment.in_reply_to].children.push(comment);\n      }\n    });\n    return allCommentsWithCildren;\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    const {\n      items\n    } = this.props;\n    const moment = this.props.moment.default;\n    const {\n      collapsedComments\n    } = this.state; // object with comment ids, to easily verify if any comment has children\n\n    const allCommentsWithCildren = this.addRepliesAsChildrenToComments(items); // all comments that are not a reply will be shown in the first iteration\n\n    const allPrimaryComments = items.filter(comment => !comment.in_reply_to); // recursively makes comments with their replies nested\n    // each iteration will show replies to the specific comment using allCommentsWithCildren\n\n    const commentElement = comment => __jsx(Comment, {\n      key: comment.comment_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }\n    }, __jsx(Avatar, {\n      src: comment.author_image,\n      title: comment.author_name || 'Anonymous',\n      color: getColor(comment.author_username),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }), __jsx(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }, __jsx(Comment.Author, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, comment.author_name), __jsx(Comment.Metadata, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, ' ', __jsx(\"span\", {\n      title: moment(comment.creation_date).format('LLLL'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, moment(comment.creation_date).fromNow()))), __jsx(Comment.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }\n    }, ' ', comment.text['mime-type'] === 'text/html' ? __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: comment.text.data\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }\n    }) : comment.text.data), __jsx(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }, __jsx(Comment.Action, {\n      as: \"a\",\n      \"aria-label\": this.props.intl.formatMessage(messages.reply),\n      onClick: () => this.setReplyTo(comment.comment_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Reply\",\n      defaultMessage: \"Reply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 15\n      }\n    })), comment.is_editable && __jsx(Comment.Action, {\n      onClick: () => this.onEdit({\n        id: flattenToAppURL(comment['@id']),\n        text: comment.text.data\n      }),\n      \"aria-label\": this.props.intl.formatMessage(messages.edit),\n      value: {\n        id: flattenToAppURL(comment['@id']),\n        text: comment.text.data\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Edit\",\n      defaultMessage: \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    })), comment.is_deletable && __jsx(Comment.Action, {\n      \"aria-label\": this.props.intl.formatMessage(messages.delete),\n      onClick: () => this.onDelete(flattenToAppURL(comment['@id'])),\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: \"delete\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Delete\",\n      defaultMessage: \"Delete\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }\n    })), __jsx(Comment.Action, {\n      as: \"a\",\n      onClick: () => this.hideReply(comment.comment_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, allCommentsWithCildren[comment.comment_id].children.length > 0 ? this.state.collapsedComments[comment.comment_id] ? __jsx(React.Fragment, null, __jsx(Icon, {\n      name: \"eye\",\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Show Replies\",\n      defaultMessage: \"Show Replies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    })) : __jsx(React.Fragment, null, __jsx(Icon, {\n      name: \"minus\",\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Hide Replies\",\n      defaultMessage: \"Hide Replies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    })) : null)), __jsx(\"div\", {\n      id: `reply-place-${comment.comment_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }\n    })), allCommentsWithCildren[comment.comment_id].children.length > 0 ? allCommentsWithCildren[comment.comment_id].children.map((child, index) => __jsx(Comment.Group, {\n      collapsed: collapsedComments[comment.comment_id],\n      key: `group-${index}-${comment.comment_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }\n    }, commentElement(child))) : null);\n\n    return __jsx(Container, {\n      className: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 7\n      }\n    }, __jsx(CommentEditModal, {\n      open: this.state.showEdit,\n      onCancel: this.onEditCancel,\n      onOk: this.onEditOk,\n      id: this.state.editId,\n      text: this.state.editText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      id: \"comment-add-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      onCancel: this.onEditCancel,\n      submitLabel: this.props.intl.formatMessage(messages.comment),\n      resetAfterSubmit: true,\n      schema: makeFormSchema(this.props.intl),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }\n    })), __jsx(Comment.Group, {\n      threaded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }\n    }, allPrimaryComments.map(item => commentElement(item))), this.props.items_total > this.props.items.length && __jsx(Button, {\n      fluid: true,\n      basic: true,\n      color: \"blue\",\n      onClick: this.loadMoreComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Load more\",\n      defaultMessage: \"Load more...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 13\n      }\n    })), this.state.replyTo && __jsx(Portal, {\n      node: document && document.getElementById(`reply-place-${this.state.replyTo}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      onCancel: this.onEditCancel,\n      submitLabel: this.props.intl.formatMessage(messages.comment),\n      resetAfterSubmit: true,\n      schema: makeFormSchema(this.props.intl),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\n_defineProperty(Comments, \"propTypes\", {\n  addComment: PropTypes.func.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  listComments: PropTypes.func.isRequired,\n  listMoreComments: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    author_name: PropTypes.string,\n    creation_date: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string,\n      'mime-type': PropTypes.string\n    }),\n    is_deletable: PropTypes.bool,\n    is_editable: PropTypes.bool\n  })).isRequired,\n  addRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  deleteRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired\n});\n\nexport default compose(injectIntl, injectLazyLibs(['moment']), connect(state => ({\n  items: state.comments.items,\n  next: state.comments.next,\n  items_total: state.comments.items_total,\n  addRequest: state.comments.add,\n  deleteRequest: state.comments.delete\n}), {\n  addComment,\n  deleteComment,\n  listComments,\n  listMoreComments\n}))(Comments);","map":{"version":3,"names":["addComment","deleteComment","listComments","listMoreComments","Avatar","CommentEditModal","Form","flattenToAppURL","getBaseUrl","getColor","PropTypes","React","Component","defineMessages","FormattedMessage","injectIntl","Portal","connect","compose","Button","Comment","Container","Icon","injectLazyLibs","messages","comment","comments","commentDescription","default","delete","edit","reply","hideReplies","showReplies","loadMoreComments","makeFormSchema","intl","fieldsets","fields","id","title","formatMessage","properties","type","widget","required","Comments","constructor","props","onSubmit","bind","onDelete","onEdit","onEditOk","onEditCancel","setReplyTo","state","showEdit","editId","editText","replyTo","collapsedComments","componentDidMount","pathname","UNSAFE_componentWillReceiveProps","nextProps","addRequest","loading","loaded","deleteRequest","formData","setState","commentId","next","value","hideReply","prevState","hasComment","text","ev","addRepliesAsChildrenToComments","items","initialValue","allCommentsWithCildren","reduce","accumulator","item","comment_id","children","forEach","in_reply_to","push","render","moment","allPrimaryComments","filter","commentElement","author_image","author_name","author_username","creation_date","format","fromNow","__html","data","is_editable","is_deletable","length","map","child","index","items_total","document","getElementById","func","isRequired","string","arrayOf","shape","bool","add"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Comments/Comments.jsx"],"sourcesContent":["/**\n * Comments components.\n * @module components/theme/Comments/Comments\n */\n\nimport {\n  addComment,\n  deleteComment,\n  listComments,\n  listMoreComments,\n} from '@plone/volto/actions';\nimport { Avatar, CommentEditModal, Form } from '@plone/volto/components';\nimport { flattenToAppURL, getBaseUrl, getColor } from '@plone/volto/helpers';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Comment, Container, Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n// import { Button, Grid, Segment, Container } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  comment: {\n    id: 'Comment',\n    defaultMessage: 'Comment',\n  },\n  comments: {\n    id: 'Comments',\n    defaultMessage: 'Comments',\n  },\n  commentDescription: {\n    id:\n      'You can add a comment by filling out the form below. Plain text formatting.',\n    defaultMessage:\n      'You can add a comment by filling out the form below. Plain text formatting.',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  reply: {\n    id: 'Reply',\n    defaultMessage: 'Reply',\n  },\n  hideReplies: {\n    id: 'Hide Replies',\n    defaultMessage: 'Hide Replies',\n  },\n  showReplies: {\n    id: 'Show Replies',\n    defaultMessage: 'Show Replies',\n  },\n  loadMoreComments: {\n    id: 'Load more',\n    defaultMessage: 'Load more...',\n  },\n});\n/**\n * Schema for the Form components to show an input field with it's label\n * @param {Object} intl\n */\nconst makeFormSchema = (intl) => ({\n  fieldsets: [\n    {\n      fields: ['comment'],\n      id: 'default',\n      title: intl.formatMessage(messages.default),\n    },\n  ],\n  properties: {\n    comment: {\n      title: intl.formatMessage(messages.comment),\n      type: 'string',\n      widget: 'textarea',\n    },\n  },\n  required: ['comment1'],\n});\n\n/**\n * Comments container class.\n * @class Comments\n * @extends Component\n */\nclass Comments extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    addComment: PropTypes.func.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n    listComments: PropTypes.func.isRequired,\n    listMoreComments: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        author_name: PropTypes.string,\n        creation_date: PropTypes.string,\n        text: PropTypes.shape({\n          data: PropTypes.string,\n          'mime-type': PropTypes.string,\n        }),\n        is_deletable: PropTypes.bool,\n        is_editable: PropTypes.bool,\n      }),\n    ).isRequired,\n    addRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Comments\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onEditOk = this.onEditOk.bind(this);\n    this.onEditCancel = this.onEditCancel.bind(this);\n    this.setReplyTo = this.setReplyTo.bind(this);\n    this.loadMoreComments = this.loadMoreComments.bind(this);\n    this.state = {\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n      collapsedComments: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.pathname !== this.props.pathname ||\n      (this.props.addRequest.loading && nextProps.addRequest.loaded) ||\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded)\n    ) {\n      this.props.listComments(getBaseUrl(nextProps.pathname));\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} formData Form data.\n   * @returns {undefined}\n   */\n  onSubmit(formData) {\n    this.props.addComment(\n      getBaseUrl(this.props.pathname),\n      formData.comment,\n      this.state.replyTo,\n    );\n    this.setState({ replyTo: null });\n  }\n\n  /**\n   * The id of the comment that will receive a reply\n   * @param {string} commentId\n   */\n  setReplyTo(commentId) {\n    this.setState({ replyTo: commentId });\n  }\n\n  /**\n   * Calls the action listMoreComments passing the received url for next array of comments\n   */\n  loadMoreComments() {\n    this.props.listMoreComments(this.props.next);\n  }\n\n  /**\n   * Delete handler\n   * @method onDelete\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onDelete(value) {\n    this.props.deleteComment(value);\n  }\n\n  /**\n   * Will hide all replies to the specific comment\n   * including replies to any of the replies\n   * @param {string} commentId\n   */\n  hideReply(commentId) {\n    this.setState((prevState) => {\n      const hasComment = prevState.collapsedComments[commentId];\n      const { collapsedComments } = prevState;\n\n      return {\n        collapsedComments: {\n          ...collapsedComments,\n          [commentId]: !hasComment,\n        },\n      };\n    });\n  }\n\n  /**\n   * Edit handler\n   * @method onEdit\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onEdit(value) {\n    this.setState({\n      showEdit: true,\n      editId: value.id,\n      editText: value.text,\n    });\n  }\n\n  /**\n   * On edit ok\n   * @method onEditOk\n   * @returns {undefined}\n   */\n  onEditOk() {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n    });\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * On edit cancel\n   * @method onEditCancel\n   * @returns {undefined}\n   */\n  onEditCancel(ev) {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n    });\n  }\n\n  addRepliesAsChildrenToComments(items) {\n    let initialValue = {};\n    const allCommentsWithCildren = items.reduce((accumulator, item) => {\n      return {\n        [item.comment_id]: { comment: item, children: [] },\n        ...accumulator,\n      };\n    }, initialValue);\n\n    items.forEach((comment) => {\n      if (comment.in_reply_to) {\n        allCommentsWithCildren[comment.in_reply_to].children.push(comment);\n      }\n    });\n    return allCommentsWithCildren;\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { items } = this.props;\n    const moment = this.props.moment.default;\n    const { collapsedComments } = this.state;\n    // object with comment ids, to easily verify if any comment has children\n    const allCommentsWithCildren = this.addRepliesAsChildrenToComments(items);\n    // all comments that are not a reply will be shown in the first iteration\n    const allPrimaryComments = items.filter((comment) => !comment.in_reply_to);\n\n    // recursively makes comments with their replies nested\n    // each iteration will show replies to the specific comment using allCommentsWithCildren\n    const commentElement = (comment) => (\n      <Comment key={comment.comment_id}>\n        <Avatar\n          src={comment.author_image}\n          title={comment.author_name || 'Anonymous'}\n          color={getColor(comment.author_username)}\n        />\n        <Comment.Content>\n          <Comment.Author>{comment.author_name}</Comment.Author>\n          <Comment.Metadata>\n            <span>\n              {' '}\n              <span title={moment(comment.creation_date).format('LLLL')}>\n                {moment(comment.creation_date).fromNow()}\n              </span>\n            </span>\n          </Comment.Metadata>\n          <Comment.Text>\n            {' '}\n            {comment.text['mime-type'] === 'text/html' ? (\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: comment.text.data,\n                }}\n              />\n            ) : (\n              comment.text.data\n            )}\n          </Comment.Text>\n          <Comment.Actions>\n            <Comment.Action\n              as=\"a\"\n              aria-label={this.props.intl.formatMessage(messages.reply)}\n              onClick={() => this.setReplyTo(comment.comment_id)}\n            >\n              <FormattedMessage id=\"Reply\" defaultMessage=\"Reply\" />\n            </Comment.Action>\n            {comment.is_editable && (\n              <Comment.Action\n                onClick={() =>\n                  this.onEdit({\n                    id: flattenToAppURL(comment['@id']),\n                    text: comment.text.data,\n                  })\n                }\n                aria-label={this.props.intl.formatMessage(messages.edit)}\n                value={{\n                  id: flattenToAppURL(comment['@id']),\n                  text: comment.text.data,\n                }}\n              >\n                <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n              </Comment.Action>\n            )}\n            {comment.is_deletable && (\n              <Comment.Action\n                aria-label={this.props.intl.formatMessage(messages.delete)}\n                onClick={() => this.onDelete(flattenToAppURL(comment['@id']))}\n                color=\"red\"\n              >\n                <Icon name=\"delete\" color=\"red\" />\n                <FormattedMessage\n                  id=\"Delete\"\n                  defaultMessage=\"Delete\"\n                  color=\"red\"\n                />\n              </Comment.Action>\n            )}\n            <Comment.Action\n              as=\"a\"\n              onClick={() => this.hideReply(comment.comment_id)}\n            >\n              {allCommentsWithCildren[comment.comment_id].children.length >\n              0 ? (\n                this.state.collapsedComments[comment.comment_id] ? (\n                  <>\n                    <Icon name=\"eye\" color=\"blue\" />\n                    <FormattedMessage\n                      id=\"Show Replies\"\n                      defaultMessage=\"Show Replies\"\n                    />\n                  </>\n                ) : (\n                  <>\n                    <Icon name=\"minus\" color=\"blue\" />\n                    <FormattedMessage\n                      id=\"Hide Replies\"\n                      defaultMessage=\"Hide Replies\"\n                    />\n                  </>\n                )\n              ) : null}\n            </Comment.Action>\n          </Comment.Actions>\n          <div id={`reply-place-${comment.comment_id}`}></div>\n        </Comment.Content>\n\n        {allCommentsWithCildren[comment.comment_id].children.length > 0\n          ? allCommentsWithCildren[comment.comment_id].children.map(\n              (child, index) => (\n                <Comment.Group\n                  collapsed={collapsedComments[comment.comment_id]}\n                  key={`group-${index}-${comment.comment_id}`}\n                >\n                  {commentElement(child)}\n                </Comment.Group>\n              ),\n            )\n          : null}\n      </Comment>\n    );\n\n    return (\n      <Container className=\"comments\">\n        <CommentEditModal\n          open={this.state.showEdit}\n          onCancel={this.onEditCancel}\n          onOk={this.onEditOk}\n          id={this.state.editId}\n          text={this.state.editText}\n        />\n        <div id=\"comment-add-id\">\n          <Form\n            onSubmit={this.onSubmit}\n            onCancel={this.onEditCancel}\n            submitLabel={this.props.intl.formatMessage(messages.comment)}\n            resetAfterSubmit\n            schema={makeFormSchema(this.props.intl)}\n          />\n        </div>\n\n        {/* all comments  */}\n        <Comment.Group threaded>\n          {allPrimaryComments.map((item) => commentElement(item))}\n        </Comment.Group>\n\n        {/* load more button */}\n        {this.props.items_total > this.props.items.length && (\n          <Button fluid basic color=\"blue\" onClick={this.loadMoreComments}>\n            <FormattedMessage id=\"Load more\" defaultMessage=\"Load more...\" />\n          </Button>\n        )}\n\n        {this.state.replyTo && (\n          <Portal\n            node={\n              document &&\n              document.getElementById(`reply-place-${this.state.replyTo}`)\n            }\n          >\n            <Form\n              onSubmit={this.onSubmit}\n              onCancel={this.onEditCancel}\n              submitLabel={this.props.intl.formatMessage(messages.comment)}\n              resetAfterSubmit\n              schema={makeFormSchema(this.props.intl)}\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['moment']),\n  connect(\n    (state) => ({\n      items: state.comments.items,\n      next: state.comments.next,\n      items_total: state.comments.items_total,\n      addRequest: state.comments.add,\n      deleteRequest: state.comments.delete,\n    }),\n    { addComment, deleteComment, listComments, listMoreComments },\n  ),\n)(Comments);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Comment","defaultMessage":"Comment"},{"id":"Comments","defaultMessage":"Comments"},{"id":"You can add a comment by filling out the form below. Plain text formatting.","defaultMessage":"You can add a comment by filling out the form below. Plain text formatting."},{"id":"Default","defaultMessage":"Default"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Edit","defaultMessage":"Edit"},{"id":"Reply","defaultMessage":"Reply"},{"id":"Hide Replies","defaultMessage":"Hide Replies"},{"id":"Show Replies","defaultMessage":"Show Replies"},{"id":"Load more","defaultMessage":"Load more..."}]}},"sourceType":"module"}