{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport config from '@plone/volto/registry';\nconst reserved_option_names = ['tags', 'extras'];\n\nconst initSentry = libraries => {\n  const {\n    Sentry\n  } = libraries;\n  const {\n    settings\n  } = config;\n  let sentry_config = __SENTRY__;\n\n  if (__SENTRY__) {\n    if (!sentry_config) {\n      sentry_config = {};\n    }\n\n    sentry_config.SENTRY_DSN = __SENTRY__.SENTRY_DSN;\n    sentry_config.SENTRY_CONFIG = __SENTRY__.SENTRY_CONFIG;\n  }\n\n  if (__SERVER__) {\n    if (process.env.RAZZLE_SENTRY_DSN) {\n      if (!sentry_config) {\n        sentry_config = {};\n      }\n\n      sentry_config.SENTRY_DSN = process.env.RAZZLE_SENTRY_DSN;\n    }\n\n    if (sentry_config) {\n      if (process.env.RAZZLE_SENTRY_BACKEND_CONFIG) {\n        sentry_config.SENTRY_CONFIG = JSON.parse(process.env.RAZZLE_SENTRY_BACKEND_CONFIG);\n      }\n\n      if (process.env.RAZZLE_SENTRY_RELEASE) {\n        if (!sentry_config.SENTRY_CONFIG) {\n          sentry_config.SENTRY_CONFIG = {};\n        }\n\n        sentry_config.SENTRY_CONFIG.release = process.env.RAZZLE_SENTRY_RELEASE;\n      }\n    }\n  }\n\n  if (__CLIENT__) {\n    var _window, _window$env;\n\n    if ((_window = window) !== null && _window !== void 0 && (_window$env = _window.env) !== null && _window$env !== void 0 && _window$env.RAZZLE_SENTRY_DSN) {\n      if (!sentry_config) {\n        sentry_config = {};\n      }\n\n      sentry_config.SENTRY_DSN = window.env.RAZZLE_SENTRY_DSN;\n    }\n\n    if (sentry_config) {\n      var _window2, _window2$env, _window3, _window3$env;\n\n      if ((_window2 = window) !== null && _window2 !== void 0 && (_window2$env = _window2.env) !== null && _window2$env !== void 0 && _window2$env.RAZZLE_SENTRY_FRONTEND_CONFIG) {\n        sentry_config.SENTRY_CONFIG = JSON.parse(window.env.RAZZLE_SENTRY_FRONTEND_CONFIG);\n      }\n\n      if ((_window3 = window) !== null && _window3 !== void 0 && (_window3$env = _window3.env) !== null && _window3$env !== void 0 && _window3$env.RAZZLE_SENTRY_RELEASE) {\n        if (!sentry_config.SENTRY_CONFIG) {\n          sentry_config.SENTRY_CONFIG = {};\n        }\n\n        sentry_config.SENTRY_CONFIG.release = window.env.RAZZLE_SENTRY_RELEASE;\n      }\n    }\n  }\n\n  const sentryOptions = settings.sentryOptions ? settings.sentryOptions(libraries) : {};\n\n  if (sentry_config || sentryOptions.dsn) {\n    var _sentry_config, _sentry_config2, _sentry_config3;\n\n    let sentry_options = _objectSpread({}, sentryOptions);\n\n    if ((_sentry_config = sentry_config) !== null && _sentry_config !== void 0 && _sentry_config.SENTRY_DSN) {\n      sentry_options.dsn = sentry_config.SENTRY_DSN;\n    }\n\n    if (((_sentry_config2 = sentry_config) === null || _sentry_config2 === void 0 ? void 0 : _sentry_config2.SENTRY_CONFIG) !== undefined) {\n      const options = Object.keys(sentry_config.SENTRY_CONFIG);\n      options.forEach(field => {\n        if (!reserved_option_names.includes(field)) {\n          sentry_options[field] = sentry_config.SENTRY_CONFIG[field];\n        }\n      });\n    }\n\n    Sentry.init(sentry_options);\n\n    if (sentry_options !== null && sentry_options !== void 0 && sentry_options.tags) {\n      Sentry.setTags(sentry_options.tags);\n    }\n\n    if (sentry_options !== null && sentry_options !== void 0 && sentry_options.extras) {\n      Sentry.setExtras(sentry_options.extras);\n    }\n\n    if (((_sentry_config3 = sentry_config) === null || _sentry_config3 === void 0 ? void 0 : _sentry_config3.SENTRY_CONFIG) !== undefined) {\n      var _sentry_config4, _sentry_config4$SENTR, _sentry_config5, _sentry_config5$SENTR;\n\n      if (((_sentry_config4 = sentry_config) === null || _sentry_config4 === void 0 ? void 0 : (_sentry_config4$SENTR = _sentry_config4.SENTRY_CONFIG) === null || _sentry_config4$SENTR === void 0 ? void 0 : _sentry_config4$SENTR.tags) !== undefined) {\n        Sentry.setTags(sentry_config.SENTRY_CONFIG.tags);\n      }\n\n      if (((_sentry_config5 = sentry_config) === null || _sentry_config5 === void 0 ? void 0 : (_sentry_config5$SENTR = _sentry_config5.SENTRY_CONFIG) === null || _sentry_config5$SENTR === void 0 ? void 0 : _sentry_config5$SENTR.extras) !== undefined) {\n        Sentry.setExtras(sentry_config.SENTRY_CONFIG.extras);\n      }\n    }\n  }\n};\n\nexport default initSentry;","map":{"version":3,"names":["config","reserved_option_names","initSentry","libraries","Sentry","settings","sentry_config","__SENTRY__","SENTRY_DSN","SENTRY_CONFIG","__SERVER__","process","env","RAZZLE_SENTRY_DSN","RAZZLE_SENTRY_BACKEND_CONFIG","JSON","parse","RAZZLE_SENTRY_RELEASE","release","__CLIENT__","window","RAZZLE_SENTRY_FRONTEND_CONFIG","sentryOptions","dsn","sentry_options","undefined","options","Object","keys","forEach","field","includes","init","tags","setTags","extras","setExtras"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/sentry.js"],"sourcesContent":["import config from '@plone/volto/registry';\n\nconst reserved_option_names = ['tags', 'extras'];\n\nconst initSentry = (libraries) => {\n  const { Sentry } = libraries;\n  const { settings } = config;\n  let sentry_config = __SENTRY__;\n\n  if (__SENTRY__) {\n    if (!sentry_config) {\n      sentry_config = {};\n    }\n    sentry_config.SENTRY_DSN = __SENTRY__.SENTRY_DSN;\n    sentry_config.SENTRY_CONFIG = __SENTRY__.SENTRY_CONFIG;\n  }\n\n  if (__SERVER__) {\n    if (process.env.RAZZLE_SENTRY_DSN) {\n      if (!sentry_config) {\n        sentry_config = {};\n      }\n      sentry_config.SENTRY_DSN = process.env.RAZZLE_SENTRY_DSN;\n    }\n    if (sentry_config) {\n      if (process.env.RAZZLE_SENTRY_BACKEND_CONFIG) {\n        sentry_config.SENTRY_CONFIG = JSON.parse(\n          process.env.RAZZLE_SENTRY_BACKEND_CONFIG,\n        );\n      }\n      if (process.env.RAZZLE_SENTRY_RELEASE) {\n        if (!sentry_config.SENTRY_CONFIG) {\n          sentry_config.SENTRY_CONFIG = {};\n        }\n        sentry_config.SENTRY_CONFIG.release = process.env.RAZZLE_SENTRY_RELEASE;\n      }\n    }\n  }\n\n  if (__CLIENT__) {\n    if (window?.env?.RAZZLE_SENTRY_DSN) {\n      if (!sentry_config) {\n        sentry_config = {};\n      }\n      sentry_config.SENTRY_DSN = window.env.RAZZLE_SENTRY_DSN;\n    }\n    if (sentry_config) {\n      if (window?.env?.RAZZLE_SENTRY_FRONTEND_CONFIG) {\n        sentry_config.SENTRY_CONFIG = JSON.parse(\n          window.env.RAZZLE_SENTRY_FRONTEND_CONFIG,\n        );\n      }\n      if (window?.env?.RAZZLE_SENTRY_RELEASE) {\n        if (!sentry_config.SENTRY_CONFIG) {\n          sentry_config.SENTRY_CONFIG = {};\n        }\n        sentry_config.SENTRY_CONFIG.release = window.env.RAZZLE_SENTRY_RELEASE;\n      }\n    }\n  }\n\n  const sentryOptions = settings.sentryOptions\n    ? settings.sentryOptions(libraries)\n    : {};\n\n  if (sentry_config || sentryOptions.dsn) {\n    let sentry_options = {\n      ...sentryOptions,\n    };\n    if (sentry_config?.SENTRY_DSN) {\n      sentry_options.dsn = sentry_config.SENTRY_DSN;\n    }\n    if (sentry_config?.SENTRY_CONFIG !== undefined) {\n      const options = Object.keys(sentry_config.SENTRY_CONFIG);\n      options.forEach((field) => {\n        if (!reserved_option_names.includes(field)) {\n          sentry_options[field] = sentry_config.SENTRY_CONFIG[field];\n        }\n      });\n    }\n    Sentry.init(sentry_options);\n    if (sentry_options?.tags) {\n      Sentry.setTags(sentry_options.tags);\n    }\n    if (sentry_options?.extras) {\n      Sentry.setExtras(sentry_options.extras);\n    }\n\n    if (sentry_config?.SENTRY_CONFIG !== undefined) {\n      if (sentry_config?.SENTRY_CONFIG?.tags !== undefined) {\n        Sentry.setTags(sentry_config.SENTRY_CONFIG.tags);\n      }\n      if (sentry_config?.SENTRY_CONFIG?.extras !== undefined) {\n        Sentry.setExtras(sentry_config.SENTRY_CONFIG.extras);\n      }\n    }\n  }\n};\n\nexport default initSentry;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}