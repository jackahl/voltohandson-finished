{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SelectFacet.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { Option, DropdownIndicator } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { selectTheme, customSelectStyles } from './SelectStyling';\nimport { selectFacetSchemaEnhancer, selectFacetStateToValue, selectFacetValueToQuery } from './base';\n\nconst SelectFacet = props => {\n  var _facet$title, _facet$field;\n\n  const {\n    facet,\n    choices,\n    reactSelect,\n    isMulti,\n    onChange,\n    value,\n    isEditMode\n  } = props;\n  const Select = reactSelect.default;\n  const v = Array.isArray(value) && value.length === 0 ? null : value;\n  return __jsx(Select, {\n    placeholder: (_facet$title = facet === null || facet === void 0 ? void 0 : facet.title) !== null && _facet$title !== void 0 ? _facet$title : (facet === null || facet === void 0 ? void 0 : (_facet$field = facet.field) === null || _facet$field === void 0 ? void 0 : _facet$field.label) || 'select...',\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    options: choices,\n    styles: customSelectStyles,\n    theme: selectTheme,\n    components: {\n      DropdownIndicator,\n      Option\n    },\n    isDisabled: isEditMode,\n    onChange: data => {\n      if (data) {\n        onChange(facet.field.value, isMulti ? data.map(_ref => {\n          let {\n            value\n          } = _ref;\n          return value;\n        }) : [data.value]);\n      } else {\n        // data has been removed\n        onChange(facet.field.value, []);\n      }\n    },\n    isMulti: facet.multiple,\n    isClearable: true,\n    value: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n};\n\n_c = SelectFacet;\nSelectFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nSelectFacet.stateToValue = selectFacetStateToValue;\nSelectFacet.valueToQuery = selectFacetValueToQuery;\nexport default injectLazyLibs('reactSelect')(SelectFacet);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectFacet\");","map":{"version":3,"names":["React","injectLazyLibs","Option","DropdownIndicator","selectTheme","customSelectStyles","selectFacetSchemaEnhancer","selectFacetStateToValue","selectFacetValueToQuery","SelectFacet","props","facet","choices","reactSelect","isMulti","onChange","value","isEditMode","Select","default","v","Array","isArray","length","title","field","label","data","map","multiple","schemaEnhancer","stateToValue","valueToQuery"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SelectFacet.jsx"],"sourcesContent":["import React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport {\n  Option,\n  DropdownIndicator,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { selectTheme, customSelectStyles } from './SelectStyling';\nimport {\n  selectFacetSchemaEnhancer,\n  selectFacetStateToValue,\n  selectFacetValueToQuery,\n} from './base';\n\nconst SelectFacet = (props) => {\n  const {\n    facet,\n    choices,\n    reactSelect,\n    isMulti,\n    onChange,\n    value,\n    isEditMode,\n  } = props;\n  const Select = reactSelect.default;\n  const v = Array.isArray(value) && value.length === 0 ? null : value;\n\n  return (\n    <Select\n      placeholder={facet?.title ?? (facet?.field?.label || 'select...')}\n      className=\"react-select-container\"\n      classNamePrefix=\"react-select\"\n      options={choices}\n      styles={customSelectStyles}\n      theme={selectTheme}\n      components={{ DropdownIndicator, Option }}\n      isDisabled={isEditMode}\n      onChange={(data) => {\n        if (data) {\n          onChange(\n            facet.field.value,\n            isMulti ? data.map(({ value }) => value) : [data.value],\n          );\n        } else {\n          // data has been removed\n          onChange(facet.field.value, []);\n        }\n      }}\n      isMulti={facet.multiple}\n      isClearable\n      value={v}\n    />\n  );\n};\n\nSelectFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nSelectFacet.stateToValue = selectFacetStateToValue;\nSelectFacet.valueToQuery = selectFacetValueToQuery;\n\nexport default injectLazyLibs('reactSelect')(SelectFacet);\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,wCAA/B;AACA,SACEC,MADF,EAEEC,iBAFF,QAGO,sDAHP;AAIA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,iBAAhD;AACA,SACEC,yBADF,EAEEC,uBAFF,EAGEC,uBAHF,QAIO,QAJP;;AAMA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM;IACJC,KADI;IAEJC,OAFI;IAGJC,WAHI;IAIJC,OAJI;IAKJC,QALI;IAMJC,KANI;IAOJC;EAPI,IAQFP,KARJ;EASA,MAAMQ,MAAM,GAAGL,WAAW,CAACM,OAA3B;EACA,MAAMC,CAAC,GAAGC,KAAK,CAACC,OAAN,CAAcN,KAAd,KAAwBA,KAAK,CAACO,MAAN,KAAiB,CAAzC,GAA6C,IAA7C,GAAoDP,KAA9D;EAEA,OACE,MAAC,MAAD;IACE,WAAW,kBAAEL,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEa,KAAT,uDAAmB,CAAAb,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAEc,KAAP,8DAAcC,KAAd,KAAuB,WADvD;IAEE,SAAS,EAAC,wBAFZ;IAGE,eAAe,EAAC,cAHlB;IAIE,OAAO,EAAEd,OAJX;IAKE,MAAM,EAAEP,kBALV;IAME,KAAK,EAAED,WANT;IAOE,UAAU,EAAE;MAAED,iBAAF;MAAqBD;IAArB,CAPd;IAQE,UAAU,EAAEe,UARd;IASE,QAAQ,EAAGU,IAAD,IAAU;MAClB,IAAIA,IAAJ,EAAU;QACRZ,QAAQ,CACNJ,KAAK,CAACc,KAAN,CAAYT,KADN,EAENF,OAAO,GAAGa,IAAI,CAACC,GAAL,CAAS;UAAA,IAAC;YAAEZ;UAAF,CAAD;UAAA,OAAeA,KAAf;QAAA,CAAT,CAAH,GAAoC,CAACW,IAAI,CAACX,KAAN,CAFrC,CAAR;MAID,CALD,MAKO;QACL;QACAD,QAAQ,CAACJ,KAAK,CAACc,KAAN,CAAYT,KAAb,EAAoB,EAApB,CAAR;MACD;IACF,CAnBH;IAoBE,OAAO,EAAEL,KAAK,CAACkB,QApBjB;IAqBE,WAAW,MArBb;IAsBE,KAAK,EAAET,CAtBT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AA0BD,CAvCD;;KAAMX,W;AAyCNA,WAAW,CAACqB,cAAZ,GAA6BxB,yBAA7B;AACAG,WAAW,CAACsB,YAAZ,GAA2BxB,uBAA3B;AACAE,WAAW,CAACuB,YAAZ,GAA2BxB,uBAA3B;AAEA,eAAeP,cAAc,CAAC,aAAD,CAAd,CAA8BQ,WAA9B,CAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}