{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Display/Display.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { getSchema, updateContent, getContent } from '@plone/volto/actions';\nimport { getLayoutFieldname } from '@plone/volto/helpers';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nconst messages = defineMessages({\n  Viewmode: {\n    \"id\": \"Viewmode\",\n    \"defaultMessage\": \"View\"\n  }\n});\nconst Option = injectLazyLibs('reactSelect')(props => {\n  const {\n    Option\n  } = props.reactSelect.components;\n  return __jsx(Option, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, props.label), props.isFocused && !props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 28\n    }\n  }));\n});\nconst DropdownIndicator = injectLazyLibs('reactSelect')(props => {\n  const {\n    DropdownIndicator\n  } = props.reactSelect.components;\n  return __jsx(DropdownIndicator, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), props.selectProps.menuIsOpen ? __jsx(Icon, {\n    name: upSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n});\n\nconst selectTheme = theme => _objectSpread(_objectSpread({}, theme), {}, {\n  borderRadius: 0,\n  colors: _objectSpread(_objectSpread({}, theme.colors), {}, {\n    primary25: 'hotpink',\n    primary: '#b8c6c8'\n  })\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid'\n  }),\n  menu: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8'\n  }),\n  menuList: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    maxHeight: '400px'\n  }),\n  indicatorSeparator: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    width: null\n  }),\n  valueContainer: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    padding: 0\n  }),\n  option: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected ? '#007bc1' : state.isFocused ? '#4a4a4a' : 'inherit',\n    ':active': {\n      backgroundColor: null\n    },\n    span: {\n      flex: '0 0 auto'\n    },\n    svg: {\n      flex: '0 0 auto'\n    }\n  })\n};\n/**\n * Display container class.\n * @class Display\n * @extends Component\n */\n\nclass DisplaySelect extends Component {\n  constructor() {\n    var _config$views$layoutV, _config$views$layoutV2;\n\n    super(...arguments);\n\n    _defineProperty(this, \"state\", {\n      selectedOption: {\n        value: this.props.layout,\n        label: this.props.intl.formatMessage({\n          id: (_config$views$layoutV = config.views.layoutViewsNamesMapping) === null || _config$views$layoutV === void 0 ? void 0 : _config$views$layoutV[this.props.layout],\n          defaultMessage: (_config$views$layoutV2 = config.views.layoutViewsNamesMapping) === null || _config$views$layoutV2 === void 0 ? void 0 : _config$views$layoutV2[this.props.layout]\n        }) || this.props.layout\n      }\n    });\n\n    _defineProperty(this, \"setLayout\", selectedOption => {\n      this.props.updateContent(this.props.pathname, {\n        layout: selectedOption.value\n      });\n      this.setState({\n        selectedOption\n      });\n    });\n\n    _defineProperty(this, \"selectValue\", option => __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }\n    }, __jsx(\"span\", {\n      className: \"Select-value-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, option.label)));\n\n    _defineProperty(this, \"optionRenderer\", option => __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }\n    }, __jsx(\"span\", {\n      style: {\n        marginRight: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, option.label), __jsx(Icon, {\n      name: checkSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    })));\n  }\n\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getSchema(nextProps.type);\n    }\n\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n  /**\n   * On set layout handler\n   * @method setLayout\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    const Select = this.props.reactSelect.default;\n    const layoutsNames = config.views.layoutViewsNamesMapping;\n    const layoutOptions = this.props.layouts.filter(layout => Object.keys(config.views.contentTypesViews).includes(layout) || Object.keys(config.views.layoutViews).includes(layout)).map(item => ({\n      value: item,\n      label: this.props.intl.formatMessage({\n        id: layoutsNames[item],\n        defaultMessage: layoutsNames[item]\n      }) || item\n    }));\n    return (layoutOptions === null || layoutOptions === void 0 ? void 0 : layoutOptions.length) > 1 ? __jsx(FormFieldWrapper, _extends({\n      id: \"display-select\",\n      title: this.props.intl.formatMessage(messages.Viewmode)\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }\n    }), __jsx(Select, {\n      name: \"display-select\",\n      className: \"react-select-container\",\n      classNamePrefix: \"react-select\",\n      options: layoutOptions,\n      styles: customSelectStyles,\n      theme: selectTheme,\n      components: {\n        DropdownIndicator,\n        Option\n      },\n      onChange: this.setLayout,\n      defaultValue: selectedOption,\n      isSearchable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    })) : null;\n  }\n\n}\n\n_defineProperty(DisplaySelect, \"propTypes\", {\n  getSchema: PropTypes.func.isRequired,\n  updateContent: PropTypes.func.isRequired,\n  getContent: PropTypes.func.isRequired,\n  loaded: PropTypes.bool.isRequired,\n  pathname: PropTypes.string.isRequired,\n  layouts: PropTypes.arrayOf(PropTypes.string),\n  layout: PropTypes.string,\n  type: PropTypes.string.isRequired\n});\n\n_defineProperty(DisplaySelect, \"defaultProps\", {\n  layouts: [],\n  layout: ''\n});\n\nexport default compose(injectIntl, injectLazyLibs('reactSelect'), connect(state => ({\n  loaded: state.content.update.loaded,\n  layouts: state.schema.schema ? state.schema.schema.layouts : [],\n  layout: state.content.data ? state.content.data[getLayoutFieldname(state.content.data)] : '',\n  layout_fieldname: state.content.data ? getLayoutFieldname(state.content.data) : '',\n  type: state.content.data ? state.content.data['@type'] : ''\n}), {\n  getSchema,\n  updateContent,\n  getContent\n}))(DisplaySelect);","map":{"version":3,"names":["React","Component","Fragment","PropTypes","connect","compose","injectLazyLibs","getSchema","updateContent","getContent","getLayoutFieldname","FormFieldWrapper","Icon","defineMessages","injectIntl","config","downSVG","upSVG","checkSVG","messages","Viewmode","Option","props","reactSelect","components","label","isFocused","isSelected","DropdownIndicator","selectProps","menuIsOpen","selectTheme","theme","borderRadius","colors","primary25","primary","customSelectStyles","control","styles","state","border","borderBottom","boxShadow","borderBottomStyle","menu","top","marginTop","menuList","maxHeight","indicatorSeparator","width","valueContainer","padding","option","backgroundColor","minHeight","display","justifyContent","alignItems","color","span","flex","svg","DisplaySelect","selectedOption","value","layout","intl","formatMessage","id","views","layoutViewsNamesMapping","defaultMessage","pathname","setState","marginRight","componentDidMount","type","UNSAFE_componentWillReceiveProps","nextProps","loaded","render","Select","default","layoutsNames","layoutOptions","layouts","filter","Object","keys","contentTypesViews","includes","layoutViews","map","item","length","setLayout","func","isRequired","bool","string","arrayOf","content","update","schema","data","layout_fieldname"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Display/Display.jsx"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport { getSchema, updateContent, getContent } from '@plone/volto/actions';\nimport { getLayoutFieldname } from '@plone/volto/helpers';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nconst messages = defineMessages({\n  Viewmode: {\n    id: 'Viewmode',\n    defaultMessage: 'View',\n  },\n});\n\nconst Option = injectLazyLibs('reactSelect')((props) => {\n  const { Option } = props.reactSelect.components;\n  return (\n    <Option {...props}>\n      <div>{props.label}</div>\n      {props.isFocused && !props.isSelected && (\n        <Icon name={checkSVG} size=\"18px\" color=\"#b8c6c8\" />\n      )}\n      {props.isSelected && <Icon name={checkSVG} size=\"18px\" color=\"#007bc1\" />}\n    </Option>\n  );\n});\n\nconst DropdownIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { DropdownIndicator } = props.reactSelect.components;\n  return (\n    <DropdownIndicator {...props}>\n      {props.selectProps.menuIsOpen ? (\n        <Icon name={upSVG} size=\"24px\" color=\"#007bc1\" />\n      ) : (\n        <Icon name={downSVG} size=\"24px\" color=\"#007bc1\" />\n      )}\n    </DropdownIndicator>\n  );\n});\n\nconst selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8',\n  }),\n  menuList: (styles, state) => ({\n    ...styles,\n    maxHeight: '400px',\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    padding: 0,\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n      ? '#4a4a4a'\n      : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n    span: {\n      flex: '0 0 auto',\n    },\n    svg: {\n      flex: '0 0 auto',\n    },\n  }),\n};\n\n/**\n * Display container class.\n * @class Display\n * @extends Component\n */\nclass DisplaySelect extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getSchema: PropTypes.func.isRequired,\n    updateContent: PropTypes.func.isRequired,\n    getContent: PropTypes.func.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    pathname: PropTypes.string.isRequired,\n    layouts: PropTypes.arrayOf(PropTypes.string),\n    layout: PropTypes.string,\n    type: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    layouts: [],\n    layout: '',\n  };\n\n  state = {\n    selectedOption: {\n      value: this.props.layout,\n      label:\n        this.props.intl.formatMessage({\n          id: config.views.layoutViewsNamesMapping?.[this.props.layout],\n          defaultMessage:\n            config.views.layoutViewsNamesMapping?.[this.props.layout],\n        }) || this.props.layout,\n    },\n  };\n\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getSchema(nextProps.type);\n    }\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n\n  /**\n   * On set layout handler\n   * @method setLayout\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  setLayout = (selectedOption) => {\n    this.props.updateContent(this.props.pathname, {\n      layout: selectedOption.value,\n    });\n    this.setState({ selectedOption });\n  };\n\n  selectValue = (option) => (\n    <Fragment>\n      <span className=\"Select-value-label\">{option.label}</span>\n    </Fragment>\n  );\n\n  optionRenderer = (option) => (\n    <Fragment>\n      <span style={{ marginRight: 'auto' }}>{option.label}</span>\n      <Icon name={checkSVG} size=\"24px\" />\n    </Fragment>\n  );\n\n  render() {\n    const { selectedOption } = this.state;\n    const Select = this.props.reactSelect.default;\n    const layoutsNames = config.views.layoutViewsNamesMapping;\n    const layoutOptions = this.props.layouts\n      .filter(\n        (layout) =>\n          Object.keys(config.views.contentTypesViews).includes(layout) ||\n          Object.keys(config.views.layoutViews).includes(layout),\n      )\n      .map((item) => ({\n        value: item,\n        label:\n          this.props.intl.formatMessage({\n            id: layoutsNames[item],\n            defaultMessage: layoutsNames[item],\n          }) || item,\n      }));\n\n    return layoutOptions?.length > 1 ? (\n      <FormFieldWrapper\n        id=\"display-select\"\n        title={this.props.intl.formatMessage(messages.Viewmode)}\n        {...this.props}\n      >\n        <Select\n          name=\"display-select\"\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={layoutOptions}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{ DropdownIndicator, Option }}\n          onChange={this.setLayout}\n          defaultValue={selectedOption}\n          isSearchable={false}\n        />\n      </FormFieldWrapper>\n    ) : null;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs('reactSelect'),\n  connect(\n    (state) => ({\n      loaded: state.content.update.loaded,\n      layouts: state.schema.schema ? state.schema.schema.layouts : [],\n      layout: state.content.data\n        ? state.content.data[getLayoutFieldname(state.content.data)]\n        : '',\n      layout_fieldname: state.content.data\n        ? getLayoutFieldname(state.content.data)\n        : '',\n      type: state.content.data ? state.content.data['@type'] : '',\n    }),\n    { getSchema, updateContent, getContent },\n  ),\n)(DisplaySelect);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Viewmode","defaultMessage":"View"}]}},"sourceType":"module"}