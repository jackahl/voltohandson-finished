{"ast":null,"code":"import _map from \"lodash/map\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Contents/ContentsTagsModal.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Contents tags modal.\n * @module components/manage/Contents/ContentsTagsModal\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\nconst messages = defineMessages({\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  tags: {\n    \"id\": \"Tags\",\n    \"defaultMessage\": \"Tags\"\n  },\n  tagsToRemove: {\n    \"id\": \"Tags to remove\",\n    \"defaultMessage\": \"Tags to remove\"\n  },\n  tagsToAdd: {\n    \"id\": \"Tags to add\",\n    \"defaultMessage\": \"Tags to add\"\n  }\n});\n/**\n * ContentsTagsModal class.\n * @class ContentsTagsModal\n * @extends Component\n */\n\nclass ContentsTagsModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n\n\n  onSubmit({\n    tags_to_add = [],\n    tags_to_remove = []\n  }) {\n    this.props.updateContent(_map(this.props.items, item => item.url), _map(this.props.items, item => {\n      var _item$subjects;\n\n      return {\n        subjects: [...new Set(((_item$subjects = item.subjects) !== null && _item$subjects !== void 0 ? _item$subjects : []).filter(s => !tags_to_remove.includes(s)).concat(tags_to_add))]\n      };\n    }));\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    const currentSetTags = [...new Set(this.props.items.map(item => item.subjects).flat())];\n    return this.props.open && __jsx(ModalForm, {\n      open: this.props.open,\n      onSubmit: this.onSubmit,\n      onCancel: this.props.onCancel,\n      title: this.props.intl.formatMessage(messages.tags),\n      schema: {\n        fieldsets: [{\n          id: 'default',\n          title: this.props.intl.formatMessage(messages.default),\n          fields: ['tags_to_remove', 'tags_to_add']\n        }],\n        properties: {\n          tags_to_remove: {\n            type: 'array',\n            widget: 'array',\n            title: this.props.intl.formatMessage(messages.tagsToRemove),\n            choices: currentSetTags.map(tag => [tag, tag])\n          },\n          tags_to_add: {\n            type: 'array',\n            widget: 'token',\n            title: this.props.intl.formatMessage(messages.tagsToAdd),\n            items: {\n              vocabulary: {\n                '@id': 'plone.app.vocabularies.Keywords'\n              }\n            }\n          }\n        },\n        required: []\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\n_defineProperty(ContentsTagsModal, \"propTypes\", {\n  updateContent: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    subjects: PropTypes.arrayOf(PropTypes.string),\n    url: PropTypes.string\n  })).isRequired,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n});\n\nexport default compose(injectIntl, connect(state => ({\n  request: state.content.update\n}), {\n  updateContent\n}))(ContentsTagsModal);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","defineMessages","injectIntl","updateContent","ModalForm","messages","default","tags","tagsToRemove","tagsToAdd","ContentsTagsModal","constructor","props","onSubmit","bind","UNSAFE_componentWillReceiveProps","nextProps","request","loading","loaded","onOk","tags_to_add","tags_to_remove","items","item","url","subjects","Set","filter","s","includes","concat","render","currentSetTags","map","flat","open","onCancel","intl","formatMessage","fieldsets","id","title","fields","properties","type","widget","choices","tag","vocabulary","required","func","isRequired","arrayOf","shape","string","bool","state","content","update"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Contents/ContentsTagsModal.jsx"],"sourcesContent":["/**\n * Contents tags modal.\n * @module components/manage/Contents/ContentsTagsModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  tags: {\n    id: 'Tags',\n    defaultMessage: 'Tags',\n  },\n  tagsToRemove: {\n    id: 'Tags to remove',\n    defaultMessage: 'Tags to remove',\n  },\n  tagsToAdd: {\n    id: 'Tags to add',\n    defaultMessage: 'Tags to add',\n  },\n});\n\n/**\n * ContentsTagsModal class.\n * @class ContentsTagsModal\n * @extends Component\n */\nclass ContentsTagsModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        subjects: PropTypes.arrayOf(PropTypes.string),\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit({ tags_to_add = [], tags_to_remove = [] }) {\n    this.props.updateContent(\n      map(this.props.items, (item) => item.url),\n      map(this.props.items, (item) => ({\n        subjects: [\n          ...new Set(\n            (item.subjects ?? [])\n              .filter((s) => !tags_to_remove.includes(s))\n              .concat(tags_to_add),\n          ),\n        ],\n      })),\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const currentSetTags = [\n      ...new Set(this.props.items.map((item) => item.subjects).flat()),\n    ];\n\n    return (\n      this.props.open && (\n        <ModalForm\n          open={this.props.open}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          title={this.props.intl.formatMessage(messages.tags)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: ['tags_to_remove', 'tags_to_add'],\n              },\n            ],\n            properties: {\n              tags_to_remove: {\n                type: 'array',\n                widget: 'array',\n                title: this.props.intl.formatMessage(messages.tagsToRemove),\n                choices: currentSetTags.map((tag) => [tag, tag]),\n              },\n              tags_to_add: {\n                type: 'array',\n                widget: 'token',\n                title: this.props.intl.formatMessage(messages.tagsToAdd),\n                items: {\n                  vocabulary: { '@id': 'plone.app.vocabularies.Keywords' },\n                },\n              },\n            },\n            required: [],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.update,\n    }),\n    { updateContent },\n  ),\n)(ContentsTagsModal);\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,YAA3C;AAEA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,OAAO;IAAA;IAAA;EAAA,CADuB;EAK9BC,IAAI;IAAA;IAAA;EAAA,CAL0B;EAS9BC,YAAY;IAAA;IAAA;EAAA,CATkB;EAa9BC,SAAS;IAAA;IAAA;EAAA;AAbqB,CAAD,CAA/B;AAmBA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAN,SAAgCb,SAAhC,CAA0C;EACxC;AACF;AACA;AACA;AACA;;EAkBE;AACF;AACA;AACA;AACA;AACA;EACEc,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEC,gCAAgC,CAACC,SAAD,EAAY;IAC1C,IAAI,KAAKJ,KAAL,CAAWK,OAAX,CAAmBC,OAAnB,IAA8BF,SAAS,CAACC,OAAV,CAAkBE,MAApD,EAA4D;MAC1D,KAAKP,KAAL,CAAWQ,IAAX;IACD;EACF;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEP,QAAQ,CAAC;IAAEQ,WAAW,GAAG,EAAhB;IAAoBC,cAAc,GAAG;EAArC,CAAD,EAA4C;IAClD,KAAKV,KAAL,CAAWT,aAAX,CACE,KAAI,KAAKS,KAAL,CAAWW,KAAf,EAAuBC,IAAD,IAAUA,IAAI,CAACC,GAArC,CADF,EAEE,KAAI,KAAKb,KAAL,CAAWW,KAAf,EAAuBC,IAAD;MAAA;;MAAA,OAAW;QAC/BE,QAAQ,EAAE,CACR,GAAG,IAAIC,GAAJ,CACD,mBAACH,IAAI,CAACE,QAAN,2DAAkB,EAAlB,EACGE,MADH,CACWC,CAAD,IAAO,CAACP,cAAc,CAACQ,QAAf,CAAwBD,CAAxB,CADlB,EAEGE,MAFH,CAEUV,WAFV,CADC,CADK;MADqB,CAAX;IAAA,CAAtB,CAFF;EAYD;EAED;AACF;AACA;AACA;AACA;;;EACEW,MAAM,GAAG;IACP,MAAMC,cAAc,GAAG,CACrB,GAAG,IAAIN,GAAJ,CAAQ,KAAKf,KAAL,CAAWW,KAAX,CAAiBW,GAAjB,CAAsBV,IAAD,IAAUA,IAAI,CAACE,QAApC,EAA8CS,IAA9C,EAAR,CADkB,CAAvB;IAIA,OACE,KAAKvB,KAAL,CAAWwB,IAAX,IACE,MAAC,SAAD;MACE,IAAI,EAAE,KAAKxB,KAAL,CAAWwB,IADnB;MAEE,QAAQ,EAAE,KAAKvB,QAFjB;MAGE,QAAQ,EAAE,KAAKD,KAAL,CAAWyB,QAHvB;MAIE,KAAK,EAAE,KAAKzB,KAAL,CAAW0B,IAAX,CAAgBC,aAAhB,CAA8BlC,QAAQ,CAACE,IAAvC,CAJT;MAKE,MAAM,EAAE;QACNiC,SAAS,EAAE,CACT;UACEC,EAAE,EAAE,SADN;UAEEC,KAAK,EAAE,KAAK9B,KAAL,CAAW0B,IAAX,CAAgBC,aAAhB,CAA8BlC,QAAQ,CAACC,OAAvC,CAFT;UAGEqC,MAAM,EAAE,CAAC,gBAAD,EAAmB,aAAnB;QAHV,CADS,CADL;QAQNC,UAAU,EAAE;UACVtB,cAAc,EAAE;YACduB,IAAI,EAAE,OADQ;YAEdC,MAAM,EAAE,OAFM;YAGdJ,KAAK,EAAE,KAAK9B,KAAL,CAAW0B,IAAX,CAAgBC,aAAhB,CAA8BlC,QAAQ,CAACG,YAAvC,CAHO;YAIduC,OAAO,EAAEd,cAAc,CAACC,GAAf,CAAoBc,GAAD,IAAS,CAACA,GAAD,EAAMA,GAAN,CAA5B;UAJK,CADN;UAOV3B,WAAW,EAAE;YACXwB,IAAI,EAAE,OADK;YAEXC,MAAM,EAAE,OAFG;YAGXJ,KAAK,EAAE,KAAK9B,KAAL,CAAW0B,IAAX,CAAgBC,aAAhB,CAA8BlC,QAAQ,CAACI,SAAvC,CAHI;YAIXc,KAAK,EAAE;cACL0B,UAAU,EAAE;gBAAE,OAAO;cAAT;YADP;UAJI;QAPH,CARN;QAwBNC,QAAQ,EAAE;MAxBJ,CALV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFJ;EAoCD;;AAjHuC;;gBAApCxC,iB,eAMe;EACjBP,aAAa,EAAEL,SAAS,CAACqD,IAAV,CAAeC,UADb;EAEjB7B,KAAK,EAAEzB,SAAS,CAACuD,OAAV,CACLvD,SAAS,CAACwD,KAAV,CAAgB;IACd5B,QAAQ,EAAE5B,SAAS,CAACuD,OAAV,CAAkBvD,SAAS,CAACyD,MAA5B,CADI;IAEd9B,GAAG,EAAE3B,SAAS,CAACyD;EAFD,CAAhB,CADK,EAKLH,UAPe;EAQjBnC,OAAO,EAAEnB,SAAS,CAACwD,KAAV,CAAgB;IACvBpC,OAAO,EAAEpB,SAAS,CAAC0D,IADI;IAEvBrC,MAAM,EAAErB,SAAS,CAAC0D;EAFK,CAAhB,EAGNJ,UAXc;EAYjBhB,IAAI,EAAEtC,SAAS,CAAC0D,IAAV,CAAeJ,UAZJ;EAajBhC,IAAI,EAAEtB,SAAS,CAACqD,IAAV,CAAeC,UAbJ;EAcjBf,QAAQ,EAAEvC,SAAS,CAACqD,IAAV,CAAeC;AAdR,C;;AA8GrB,eAAepD,OAAO,CACpBE,UADoB,EAEpBH,OAAO,CACJ0D,KAAD,KAAY;EACVxC,OAAO,EAAEwC,KAAK,CAACC,OAAN,CAAcC;AADb,CAAZ,CADK,EAIL;EAAExD;AAAF,CAJK,CAFa,CAAP,CAQbO,iBARa,CAAf"},"metadata":{"react-intl":{"messages":[{"id":"Default","defaultMessage":"Default"},{"id":"Tags","defaultMessage":"Tags"},{"id":"Tags to remove","defaultMessage":"Tags to remove"},{"id":"Tags to add","defaultMessage":"Tags to add"}]}},"sourceType":"module"}