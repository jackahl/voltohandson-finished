{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _groupBy from \"lodash/groupBy\";\nimport _toPairs from \"lodash/toPairs\";\nimport _filter from \"lodash/filter\";\nimport _intersection from \"lodash/intersection\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/widgets/SelectMetadataField.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { compose } from 'redux';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport withQueryString from './../hocs/withQueryString';\nimport { Option, DropdownIndicator, selectTheme, customSelectStyles } from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nconst identity = a => a;\n/**\n * SelectWidget component class.\n * @function SelectWidget\n * @returns {string} Markup of the component.\n */\n\n\nclass SelectWidget extends Component {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"state\", {\n      selectedOption: this.props.value ? {\n        label: this.props.value.title,\n        value: this.props.value.value\n      } : {}\n    });\n\n    _defineProperty(this, \"loadOptions\", (search, previousOptions, additional) => {\n      let hasMore = this.props.itemsTotal > previousOptions.length;\n\n      if (hasMore) {\n        const offset = this.state.search !== search ? 0 : additional.offset;\n        this.props.getVocabulary({\n          vocabNameOrURL: this.props.vocabBaseUrl,\n          query: search,\n          start: offset\n        });\n        this.setState({\n          search\n        });\n        return {\n          options: _intersection(previousOptions, this.props.choices).length === this.props.choices.length ? [] : this.props.choices,\n          hasMore: hasMore,\n          additional: {\n            offset: offset === additional.offset ? offset + 25 : offset\n          }\n        };\n      }\n\n      return null;\n    });\n\n    _defineProperty(this, \"handleChange\", selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      this.props.onChange(this.props.id, {\n        value: selectedOption.value,\n        title: selectedOption.label\n      });\n    });\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (!this.props.choices && this.props.vocabBaseUrl) {\n      this.props.getVocabulary({\n        vocabNameOrURL: this.props.vocabBaseUrl\n      });\n    }\n  }\n  /**\n   * Initiate search with new query\n   * @method loadOptions\n   * @param {string} search Search query.\n   * @param {string} previousOptions The previous options rendered.\n   * @param {string} additional Additional arguments to pass to the next loadOptions.\n   * @returns {undefined}\n   */\n\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      // choices,\n      value,\n      onChange,\n      // placeholder,\n      querystring,\n      filterOptions = identity\n    } = this.props;\n    const isDisabled = false;\n    const {\n      indexes = []\n    } = querystring;\n    const Select = this.props.reactSelect.default;\n    return __jsx(FormFieldWrapper, _extends({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }), __jsx(Select, {\n      id: `field-${id}`,\n      name: id,\n      isDisabled: isDisabled,\n      className: \"react-select-container\",\n      classNamePrefix: \"react-select\",\n      options: _map(_toPairs(_groupBy(_toPairs(filterOptions(indexes)), item => item[1].group)), group => ({\n        label: group[0],\n        options: _map(_filter(group[1], item => item[1].enabled), field => ({\n          label: field[1].title,\n          value: field[0]\n        }))\n      })),\n      styles: customSelectStyles,\n      theme: selectTheme,\n      components: {\n        DropdownIndicator,\n        Option\n      },\n      value: value,\n      onChange: data => {\n        let dataValue = [];\n\n        if (Array.isArray(data)) {\n          for (let obj of data) {\n            dataValue.push(obj.value);\n          }\n\n          return onChange(id, dataValue);\n        }\n\n        return onChange(id, data);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n_defineProperty(SelectWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  loading: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.bool]),\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n  querystring: PropTypes.object\n});\n\n_defineProperty(SelectWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  items: {\n    vocabulary: null\n  },\n  widgetOptions: {\n    vocabulary: null\n  },\n  error: [],\n  choices: [],\n  loading: false,\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  onEdit: null,\n  onDelete: null\n});\n\nexport default compose(withQueryString, injectLazyLibs(['reactSelect']))(SelectWidget);","map":{"version":3,"names":["React","Component","PropTypes","injectLazyLibs","compose","FormFieldWrapper","withQueryString","Option","DropdownIndicator","selectTheme","customSelectStyles","identity","a","SelectWidget","selectedOption","props","value","label","title","search","previousOptions","additional","hasMore","itemsTotal","length","offset","state","getVocabulary","vocabNameOrURL","vocabBaseUrl","query","start","setState","options","choices","onChange","id","componentDidMount","render","querystring","filterOptions","isDisabled","indexes","Select","reactSelect","default","item","group","enabled","field","data","dataValue","Array","isArray","obj","push","string","isRequired","description","required","bool","error","arrayOf","loading","oneOfType","object","func","onBlur","onClick","onEdit","onDelete","wrapped","items","vocabulary","widgetOptions"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/widgets/SelectMetadataField.jsx"],"sourcesContent":["/**\n * SelectWidget component.\n * @module components/manage/Widgets/SelectWidget\n */\n\nimport { map, intersection, filter, toPairs, groupBy } from 'lodash';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { compose } from 'redux';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport withQueryString from './../hocs/withQueryString';\n\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nconst identity = (a) => a;\n\n/**\n * SelectWidget component class.\n * @function SelectWidget\n * @returns {string} Markup of the component.\n */\nclass SelectWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    loading: PropTypes.bool,\n    value: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    wrapped: PropTypes.bool,\n    querystring: PropTypes.object,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    items: {\n      vocabulary: null,\n    },\n    widgetOptions: {\n      vocabulary: null,\n    },\n    error: [],\n    choices: [],\n    loading: false,\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n  };\n\n  state = {\n    selectedOption: this.props.value\n      ? { label: this.props.value.title, value: this.props.value.value }\n      : {},\n  };\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (!this.props.choices && this.props.vocabBaseUrl) {\n      this.props.getVocabulary({ vocabNameOrURL: this.props.vocabBaseUrl });\n    }\n  }\n\n  /**\n   * Initiate search with new query\n   * @method loadOptions\n   * @param {string} search Search query.\n   * @param {string} previousOptions The previous options rendered.\n   * @param {string} additional Additional arguments to pass to the next loadOptions.\n   * @returns {undefined}\n   */\n  loadOptions = (search, previousOptions, additional) => {\n    let hasMore = this.props.itemsTotal > previousOptions.length;\n    if (hasMore) {\n      const offset = this.state.search !== search ? 0 : additional.offset;\n      this.props.getVocabulary({\n        vocabNameOrURL: this.props.vocabBaseUrl,\n        query: search,\n        start: offset,\n      });\n      this.setState({ search });\n\n      return {\n        options:\n          intersection(previousOptions, this.props.choices).length ===\n          this.props.choices.length\n            ? []\n            : this.props.choices,\n        hasMore: hasMore,\n        additional: {\n          offset: offset === additional.offset ? offset + 25 : offset,\n        },\n      };\n    }\n    return null;\n  };\n\n  /* Customized to pass object instead of plain string value */\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    this.props.onChange(this.props.id, {\n      value: selectedOption.value,\n      title: selectedOption.label,\n    });\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      // choices,\n      value,\n      onChange,\n      // placeholder,\n      querystring,\n      filterOptions = identity,\n    } = this.props;\n    const isDisabled = false;\n    const { indexes = [] } = querystring;\n\n    const Select = this.props.reactSelect.default;\n\n    return (\n      <FormFieldWrapper {...this.props}>\n        <Select\n          id={`field-${id}`}\n          name={id}\n          isDisabled={isDisabled}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={map(\n            toPairs(\n              groupBy(toPairs(filterOptions(indexes)), (item) => item[1].group),\n            ),\n            (group) => ({\n              label: group[0],\n              options: map(\n                filter(group[1], (item) => item[1].enabled),\n                (field) => ({\n                  label: field[1].title,\n                  value: field[0],\n                }),\n              ),\n            }),\n          )}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{ DropdownIndicator, Option }}\n          value={value}\n          onChange={(data) => {\n            let dataValue = [];\n            if (Array.isArray(data)) {\n              for (let obj of data) {\n                dataValue.push(obj.value);\n              }\n              return onChange(id, dataValue);\n            }\n            return onChange(id, data);\n          }}\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  withQueryString,\n  injectLazyLibs(['reactSelect']),\n)(SelectWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}