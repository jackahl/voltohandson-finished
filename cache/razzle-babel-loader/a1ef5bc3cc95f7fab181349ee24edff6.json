{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/ui/SlateToolbar.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * This is the main toolbar, which:\n *\n * - appears only when a range selection exists\n * - can be toggled between expanded and hovering state\n *\n */\nimport React from 'react';\nimport cx from 'classnames';\nimport toggleIcon from '@plone/volto/icons/more.svg';\nimport Toolbar from './Toolbar';\nimport ExpandedToolbar from './ExpandedToolbar';\nimport ToolbarButton from './ToolbarButton';\nimport config from '@plone/volto/registry';\n\nconst SlateToolbar = props => {\n  const {\n    selected,\n    showExpandedToolbar,\n    setShowExpandedToolbar,\n    className,\n    enableExpando = false,\n    show\n  } = props;\n  const {\n    slate\n  } = config.settings;\n  const {\n    toolbarButtons,\n    expandedToolbarButtons,\n    buttons\n  } = slate;\n\n  function renderButton(name, index) {\n    const Btn = buttons[name];\n\n    if (!Btn) {\n      // eslint-disable-next-line\n      console.warn('Button not found:', name);\n      return null;\n    } // using also name because some buttons can be like \"Separator\"\n\n\n    return __jsx(Btn, {\n      key: `${name}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, !showExpandedToolbar && __jsx(Toolbar, {\n    show: show,\n    toggleButton: enableExpando && __jsx(ToolbarButton, {\n      title: \"More...\",\n      onMouseDown: event => {\n        setShowExpandedToolbar(!showExpandedToolbar);\n        event.preventDefault();\n      },\n      icon: toggleIcon,\n      active: showExpandedToolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }),\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, toolbarButtons === null || toolbarButtons === void 0 ? void 0 : toolbarButtons.map(renderButton)), __jsx(\"div\", {\n    className: cx('toolbar-wrapper', {\n      active: showExpandedToolbar && selected\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, selected && showExpandedToolbar && __jsx(ExpandedToolbar, {\n    show: show,\n    toggleButton: __jsx(ToolbarButton, {\n      title: \"Less...\",\n      onMouseDown: event => {\n        setShowExpandedToolbar(!showExpandedToolbar);\n        event.preventDefault();\n      },\n      icon: toggleIcon,\n      active: showExpandedToolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, expandedToolbarButtons === null || expandedToolbarButtons === void 0 ? void 0 : expandedToolbarButtons.map(renderButton))));\n};\n\nexport default SlateToolbar;","map":{"version":3,"names":["React","cx","toggleIcon","Toolbar","ExpandedToolbar","ToolbarButton","config","SlateToolbar","props","selected","showExpandedToolbar","setShowExpandedToolbar","className","enableExpando","show","slate","settings","toolbarButtons","expandedToolbarButtons","buttons","renderButton","name","index","Btn","console","warn","event","preventDefault","map","active"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/ui/SlateToolbar.jsx"],"sourcesContent":["/**\n * This is the main toolbar, which:\n *\n * - appears only when a range selection exists\n * - can be toggled between expanded and hovering state\n *\n */\n\nimport React from 'react';\nimport cx from 'classnames';\n\nimport toggleIcon from '@plone/volto/icons/more.svg';\n\nimport Toolbar from './Toolbar';\nimport ExpandedToolbar from './ExpandedToolbar';\nimport ToolbarButton from './ToolbarButton';\n\nimport config from '@plone/volto/registry';\n\nconst SlateToolbar = (props) => {\n  const {\n    selected,\n    showExpandedToolbar,\n    setShowExpandedToolbar,\n    className,\n    enableExpando = false,\n    show,\n  } = props;\n  const { slate } = config.settings;\n  const { toolbarButtons, expandedToolbarButtons, buttons } = slate;\n\n  function renderButton(name, index) {\n    const Btn = buttons[name];\n    if (!Btn) {\n      // eslint-disable-next-line\n      console.warn('Button not found:', name);\n      return null;\n    }\n    // using also name because some buttons can be like \"Separator\"\n    return <Btn key={`${name}-${index}`} />;\n  }\n\n  return (\n    <>\n      {!showExpandedToolbar && (\n        <Toolbar\n          show={show}\n          toggleButton={\n            enableExpando && (\n              <ToolbarButton\n                title=\"More...\"\n                onMouseDown={(event) => {\n                  setShowExpandedToolbar(!showExpandedToolbar);\n                  event.preventDefault();\n                }}\n                icon={toggleIcon}\n                active={showExpandedToolbar}\n              />\n            )\n          }\n          className={className}\n        >\n          {toolbarButtons?.map(renderButton)}\n        </Toolbar>\n      )}\n      <div\n        className={cx('toolbar-wrapper', {\n          active: showExpandedToolbar && selected,\n        })}\n      >\n        {selected && showExpandedToolbar && (\n          <ExpandedToolbar\n            show={show}\n            toggleButton={\n              <ToolbarButton\n                title=\"Less...\"\n                onMouseDown={(event) => {\n                  setShowExpandedToolbar(!showExpandedToolbar);\n                  event.preventDefault();\n                }}\n                icon={toggleIcon}\n                active={showExpandedToolbar}\n              />\n            }\n          >\n            {expandedToolbarButtons?.map(renderButton)}\n          </ExpandedToolbar>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SlateToolbar;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9B,MAAM;IACJC,QADI;IAEJC,mBAFI;IAGJC,sBAHI;IAIJC,SAJI;IAKJC,aAAa,GAAG,KALZ;IAMJC;EANI,IAOFN,KAPJ;EAQA,MAAM;IAAEO;EAAF,IAAYT,MAAM,CAACU,QAAzB;EACA,MAAM;IAAEC,cAAF;IAAkBC,sBAAlB;IAA0CC;EAA1C,IAAsDJ,KAA5D;;EAEA,SAASK,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;IACjC,MAAMC,GAAG,GAAGJ,OAAO,CAACE,IAAD,CAAnB;;IACA,IAAI,CAACE,GAAL,EAAU;MACR;MACAC,OAAO,CAACC,IAAR,CAAa,mBAAb,EAAkCJ,IAAlC;MACA,OAAO,IAAP;IACD,CANgC,CAOjC;;;IACA,OAAO,MAAC,GAAD;MAAK,GAAG,EAAG,GAAEA,IAAK,IAAGC,KAAM,EAA3B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EACD;;EAED,OACE,4BACG,CAACZ,mBAAD,IACC,MAAC,OAAD;IACE,IAAI,EAAEI,IADR;IAEE,YAAY,EACVD,aAAa,IACX,MAAC,aAAD;MACE,KAAK,EAAC,SADR;MAEE,WAAW,EAAGa,KAAD,IAAW;QACtBf,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;QACAgB,KAAK,CAACC,cAAN;MACD,CALH;MAME,IAAI,EAAEzB,UANR;MAOE,MAAM,EAAEQ,mBAPV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAJN;IAeE,SAAS,EAAEE,SAfb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAiBGK,cAjBH,aAiBGA,cAjBH,uBAiBGA,cAAc,CAAEW,GAAhB,CAAoBR,YAApB,CAjBH,CAFJ,EAsBE;IACE,SAAS,EAAEnB,EAAE,CAAC,iBAAD,EAAoB;MAC/B4B,MAAM,EAAEnB,mBAAmB,IAAID;IADA,CAApB,CADf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAKGA,QAAQ,IAAIC,mBAAZ,IACC,MAAC,eAAD;IACE,IAAI,EAAEI,IADR;IAEE,YAAY,EACV,MAAC,aAAD;MACE,KAAK,EAAC,SADR;MAEE,WAAW,EAAGY,KAAD,IAAW;QACtBf,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;QACAgB,KAAK,CAACC,cAAN;MACD,CALH;MAME,IAAI,EAAEzB,UANR;MAOE,MAAM,EAAEQ,mBAPV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAHJ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAcGQ,sBAdH,aAcGA,sBAdH,uBAcGA,sBAAsB,CAAEU,GAAxB,CAA4BR,YAA5B,CAdH,CANJ,CAtBF,CADF;AAiDD,CAxED;;AA0EA,eAAeb,YAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}