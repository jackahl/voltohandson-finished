{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Video/VideoSidebar.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { VideoBlockSchema } from './schema';\nimport { BlockDataForm } from '@plone/volto/components';\nimport { Segment } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport videoSVG from '@plone/volto/icons/videocamera.svg';\nconst messages = defineMessages({\n  Video: {\n    \"id\": \"Video\",\n    \"defaultMessage\": \"Video\"\n  },\n  NoVideo: {\n    \"id\": \"No Video selected\",\n    \"defaultMessage\": \"No Video selected\"\n  }\n});\n\nconst VideoSidebar = props => {\n  _s();\n\n  const {\n    data,\n    block,\n    onChangeBlock\n  } = props;\n  const intl = useIntl();\n  const schema = VideoBlockSchema(_objectSpread(_objectSpread({}, props), {}, {\n    intl\n  }));\n  return __jsx(React.Fragment, null, !data.url ? __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, props.intl.formatMessage(messages.NoVideo), __jsx(Icon, {\n    name: videoSVG,\n    size: \"100px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })) : __jsx(BlockDataForm, {\n    schema: schema,\n    title: intl.formatMessage(messages.Video),\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    formData: data,\n    fieldIndex: data.index,\n    block: block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(VideoSidebar, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n\n_c = VideoSidebar;\nexport default VideoSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoSidebar\");","map":{"version":3,"names":["React","VideoBlockSchema","BlockDataForm","Segment","defineMessages","useIntl","Icon","videoSVG","messages","Video","NoVideo","VideoSidebar","props","data","block","onChangeBlock","intl","schema","url","formatMessage","id","value","index"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Video/VideoSidebar.jsx"],"sourcesContent":["import React from 'react';\nimport { VideoBlockSchema } from './schema';\nimport { BlockDataForm } from '@plone/volto/components';\nimport { Segment } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport videoSVG from '@plone/volto/icons/videocamera.svg';\n\nconst messages = defineMessages({\n  Video: {\n    id: 'Video',\n    defaultMessage: 'Video',\n  },\n  NoVideo: {\n    id: 'No Video selected',\n    defaultMessage: 'No Video selected',\n  },\n});\n\nconst VideoSidebar = (props) => {\n  const { data, block, onChangeBlock } = props;\n  const intl = useIntl();\n  const schema = VideoBlockSchema({ ...props, intl });\n\n  return (\n    <>\n      {!data.url ? (\n        <Segment className=\"sidebar-metadata-container\" secondary>\n          {props.intl.formatMessage(messages.NoVideo)}\n          <Icon name={videoSVG} size=\"100px\" color=\"#b8c6c8\" />\n        </Segment>\n      ) : (\n        <BlockDataForm\n          schema={schema}\n          title={intl.formatMessage(messages.Video)}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          formData={data}\n          fieldIndex={data.index}\n          block={block}\n        />\n      )}\n    </>\n  );\n};\n\nexport default VideoSidebar;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,YAAxC;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AAEA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,KAAK;IAAA;IAAA;EAAA,CADyB;EAK9BC,OAAO;IAAA;IAAA;EAAA;AALuB,CAAD,CAA/B;;AAWA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM;IAAEC,IAAF;IAAQC,KAAR;IAAeC;EAAf,IAAiCH,KAAvC;EACA,MAAMI,IAAI,GAAGX,OAAO,EAApB;EACA,MAAMY,MAAM,GAAGhB,gBAAgB,iCAAMW,KAAN;IAAaI;EAAb,GAA/B;EAEA,OACE,4BACG,CAACH,IAAI,CAACK,GAAN,GACC,MAAC,OAAD;IAAS,SAAS,EAAC,4BAAnB;IAAgD,SAAS,MAAzD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGN,KAAK,CAACI,IAAN,CAAWG,aAAX,CAAyBX,QAAQ,CAACE,OAAlC,CADH,EAEE,MAAC,IAAD;IAAM,IAAI,EAAEH,QAAZ;IAAsB,IAAI,EAAC,OAA3B;IAAmC,KAAK,EAAC,SAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADD,GAMC,MAAC,aAAD;IACE,MAAM,EAAEU,MADV;IAEE,KAAK,EAAED,IAAI,CAACG,aAAL,CAAmBX,QAAQ,CAACC,KAA5B,CAFT;IAGE,aAAa,EAAE,CAACW,EAAD,EAAKC,KAAL,KAAe;MAC5BN,aAAa,CAACD,KAAD,kCACRD,IADQ;QAEX,CAACO,EAAD,GAAMC;MAFK,GAAb;IAID,CARH;IASE,QAAQ,EAAER,IATZ;IAUE,UAAU,EAAEA,IAAI,CAACS,KAVnB;IAWE,KAAK,EAAER,KAXT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,CADF;AAwBD,CA7BD;;GAAMH,Y;UAESN,O;;;KAFTM,Y;AA+BN,eAAeA,YAAf"},"metadata":{"react-intl":{"messages":[{"id":"Video","defaultMessage":"Video"},{"id":"No Video selected","defaultMessage":"No Video selected"}]}},"sourceType":"module"}