{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _remove from \"lodash/remove\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Table/Edit.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Edit text block.\n * @module components/manage/Blocks/Title/Edit\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { Button, Segment, Table, Form } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport Cell from '@plone/volto/components/manage/Blocks/Table/Cell';\nimport { Field, Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\n\nconst getId = () => Math.floor(Math.random() * Math.pow(2, 24)).toString(32);\n\nconst valueToDraft = value => ({\n  blocks: [{\n    data: {},\n    depth: 0,\n    entityRanges: [],\n    inlineStyleRanges: [],\n    key: getId(),\n    text: value,\n    type: 'unstyled'\n  }],\n  entityMap: {}\n});\n\nconst emptyCell = type => ({\n  key: getId(),\n  type: type || 'data',\n  value: valueToDraft('')\n});\n\nconst emptyRow = cells => ({\n  key: getId(),\n  cells: _map(cells, () => emptyCell())\n});\n\nconst initialTable = () => ({\n  fixed: true,\n  compact: false,\n  basic: false,\n  celled: true,\n  inverted: false,\n  striped: false,\n  rows: [{\n    key: getId(),\n    cells: [{\n      key: getId(),\n      type: 'header',\n      value: valueToDraft('')\n    }, {\n      key: getId(),\n      type: 'header',\n      value: valueToDraft('')\n    }]\n  }, {\n    key: getId(),\n    cells: [{\n      key: getId(),\n      type: 'data',\n      value: valueToDraft('')\n    }, {\n      key: getId(),\n      type: 'data',\n      value: valueToDraft('')\n    }]\n  }]\n});\n\nconst messages = defineMessages({\n  insertRowBefore: {\n    \"id\": \"Insert row before\",\n    \"defaultMessage\": \"Insert row before\"\n  },\n  insertRowAfter: {\n    \"id\": \"Insert row after\",\n    \"defaultMessage\": \"Insert row after\"\n  },\n  deleteRow: {\n    \"id\": \"Delete row\",\n    \"defaultMessage\": \"Delete row\"\n  },\n  insertColBefore: {\n    \"id\": \"Insert col before\",\n    \"defaultMessage\": \"Insert col before\"\n  },\n  insertColAfter: {\n    \"id\": \"Insert col after\",\n    \"defaultMessage\": \"Insert col after\"\n  },\n  deleteCol: {\n    \"id\": \"Delete col\",\n    \"defaultMessage\": \"Delete col\"\n  },\n  fixed: {\n    \"id\": \"Fixed width table cells\",\n    \"defaultMessage\": \"Fixed width columns\"\n  },\n  compact: {\n    \"id\": \"Make the table compact\",\n    \"defaultMessage\": \"Reduce cell padding\"\n  },\n  basic: {\n    \"id\": \"Reduce complexity\",\n    \"defaultMessage\": \"Minimalistic table design\"\n  },\n  celled: {\n    \"id\": \"Divide each row into separate cells\",\n    \"defaultMessage\": \"Add border to inner columns\"\n  },\n  striped: {\n    \"id\": \"Stripe alternate rows with color\",\n    \"defaultMessage\": \"Alternate row background color\"\n  },\n  headerCell: {\n    \"id\": \"Header cell\",\n    \"defaultMessage\": \"Header cell\"\n  }\n});\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\n\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: {\n        row: 0,\n        cell: 0\n      },\n      isClient: false\n    };\n    this.onSelectCell = this.onSelectCell.bind(this);\n    this.onInsertRowBefore = this.onInsertRowBefore.bind(this);\n    this.onInsertRowAfter = this.onInsertRowAfter.bind(this);\n    this.onInsertColBefore = this.onInsertColBefore.bind(this);\n    this.onInsertColAfter = this.onInsertColAfter.bind(this);\n    this.onDeleteRow = this.onDeleteRow.bind(this);\n    this.onDeleteCol = this.onDeleteCol.bind(this);\n    this.onChangeCell = this.onChangeCell.bind(this);\n    this.toggleCellType = this.toggleCellType.bind(this);\n    this.toggleBool = this.toggleBool.bind(this);\n    this.toggleFixed = this.toggleFixed.bind(this);\n    this.toggleCompact = this.toggleCompact.bind(this);\n    this.toggleBasic = this.toggleBasic.bind(this);\n    this.toggleCelled = this.toggleCelled.bind(this);\n    this.toggleStriped = this.toggleStriped.bind(this);\n    const {\n      convertToRaw\n    } = props.draftJs;\n    this.convertToRaw = convertToRaw;\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    if (!this.props.data.table) {\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: initialTable()\n      }));\n    }\n\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!nextProps.data.table) {\n      this.props.onChangeBlock(nextProps.block, _objectSpread(_objectSpread({}, nextProps.data), {}, {\n        table: initialTable()\n      }));\n    }\n  }\n  /**\n   * Select cell handler\n   * @method onSelectCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @returns {undefined}\n   */\n\n\n  onSelectCell(row, cell) {\n    this.setState({\n      selected: {\n        row,\n        cell\n      }\n    });\n  }\n  /**\n   * Change cell handler\n   * @method onChangeCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @param {Object} editorState Editor state.\n   * @returns {undefined}\n   */\n\n\n  onChangeCell(row, cell, editorState) {\n    const table = _objectSpread({}, this.props.data.table);\n\n    table.rows[row].cells[cell].value = this.convertToRaw(editorState.getCurrentContent());\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table\n    }));\n  }\n  /**\n   * Toggle cell type\n   * @method toggleCellType\n   * @returns {undefined}\n   */\n\n\n  toggleCellType() {\n    const table = _objectSpread({}, this.props.data.table);\n\n    let type = table.rows[this.state.selected.row].cells[this.state.selected.cell].type;\n    table.rows[this.state.selected.row].cells[this.state.selected.cell].type = type === 'header' ? 'data' : 'header';\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table\n    }));\n  }\n  /**\n   * Insert row before handler\n   * @method onInsertRowBefore\n   * @returns {undefined}\n   */\n\n\n  onInsertRowBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: [...table.rows.slice(0, this.state.selected.row), emptyRow(table.rows[0].cells), ...table.rows.slice(this.state.selected.row)]\n      })\n    }));\n    this.setState({\n      selected: {\n        row: this.state.selected.row + 1,\n        cell: this.state.selected.cell\n      }\n    });\n  }\n  /**\n   * Insert row after handler\n   * @method onInsertRowAfter\n   * @returns {undefined}\n   */\n\n\n  onInsertRowAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: [...table.rows.slice(0, this.state.selected.row + 1), emptyRow(table.rows[0].cells), ...table.rows.slice(this.state.selected.row + 1)]\n      })\n    }));\n  }\n  /**\n   * Insert col before handler\n   * @method onInsertColBefore\n   * @returns {undefined}\n   */\n\n\n  onInsertColBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: _map(table.rows, (row, index) => _objectSpread(_objectSpread({}, row), {}, {\n          cells: [...row.cells.slice(0, this.state.selected.cell), emptyCell(table.rows[index].cells[this.state.selected.cell].type), ...row.cells.slice(this.state.selected.cell)]\n        }))\n      })\n    }));\n    this.setState({\n      selected: {\n        row: this.state.selected.row,\n        cell: this.state.selected.cell + 1\n      }\n    });\n  }\n  /**\n   * Insert col after handler\n   * @method onInsertColAfter\n   * @returns {undefined}\n   */\n\n\n  onInsertColAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: _map(table.rows, (row, index) => _objectSpread(_objectSpread({}, row), {}, {\n          cells: [...row.cells.slice(0, this.state.selected.cell + 1), emptyCell(table.rows[index].cells[this.state.selected.cell].type), ...row.cells.slice(this.state.selected.cell + 1)]\n        }))\n      })\n    }));\n  }\n  /**\n   * Delete col handler\n   * @method onDeleteCol\n   * @returns {undefined}\n   */\n\n\n  onDeleteCol(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.cell === table.rows[0].cells.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row,\n          cell: this.state.selected.cell - 1\n        }\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: _map(table.rows, row => _objectSpread(_objectSpread({}, row), {}, {\n          cells: _remove(row.cells, (cell, index) => index !== this.state.selected.cell)\n        }))\n      })\n    }));\n  }\n  /**\n   * Delete row handler\n   * @method onDeleteRow\n   * @returns {undefined}\n   */\n\n\n  onDeleteRow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.row === table.rows.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row - 1,\n          cell: this.state.selected.cell\n        }\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: _remove(table.rows, (row, index) => index !== this.state.selected.row)\n      })\n    }));\n  }\n  /**\n   * Toggle bool\n   * @method toggleBool\n   * @param {string} value Value to toggle.\n   * @returns {undefined}\n   */\n\n\n  toggleBool(value) {\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        [value]: !table[value]\n      })\n    }));\n  }\n  /**\n   * Toggle fixed\n   * @method toggleFixed\n   * @returns {undefined}\n   */\n\n\n  toggleFixed() {\n    this.toggleBool('fixed');\n  }\n  /**\n   * Toggle compact\n   * @method toggleCompact\n   * @returns {undefined}\n   */\n\n\n  toggleCompact() {\n    this.toggleBool('compact');\n  }\n  /**\n   * Toggle basic\n   * @method toggleBasic\n   * @returns {undefined}\n   */\n\n\n  toggleBasic() {\n    this.toggleBool('basic');\n  }\n  /**\n   * Toggle celled\n   * @method toggleCelled\n   * @returns {undefined}\n   */\n\n\n  toggleCelled() {\n    this.toggleBool('celled');\n  }\n  /**\n   * Toggle striped\n   * @method toggleStriped\n   * @returns {undefined}\n   */\n\n\n  toggleStriped() {\n    this.toggleBool('striped');\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    if (!this.state.isClient) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: cx('block table', {\n        selected: this.props.selected\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 7\n      }\n    }, this.props.selected && __jsx(\"div\", {\n      className: \"toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }\n    }, __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onInsertRowBefore,\n      title: this.props.intl.formatMessage(messages.insertRowBefore),\n      \"aria-label\": this.props.intl.formatMessage(messages.insertRowBefore),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: rowBeforeSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onInsertRowAfter,\n      title: this.props.intl.formatMessage(messages.insertRowAfter),\n      \"aria-label\": this.props.intl.formatMessage(messages.insertRowAfter),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: rowAfterSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onDeleteRow,\n      disabled: this.props.data.table && this.props.data.table.rows.length === 1,\n      title: this.props.intl.formatMessage(messages.deleteRow),\n      \"aria-label\": this.props.intl.formatMessage(messages.deleteRow),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: rowDeleteSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onInsertColBefore,\n      title: this.props.intl.formatMessage(messages.insertColBefore),\n      \"aria-label\": this.props.intl.formatMessage(messages.insertColBefore),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: colBeforeSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onInsertColAfter,\n      title: this.props.intl.formatMessage(messages.insertColAfter),\n      \"aria-label\": this.props.intl.formatMessage(messages.insertColAfter),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: colAfterSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onDeleteCol,\n      disabled: this.props.data.table && this.props.data.table.rows[0].cells.length === 1,\n      title: this.props.intl.formatMessage(messages.deleteCol),\n      \"aria-label\": this.props.intl.formatMessage(messages.deleteCol),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: colDeleteSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }\n    })))), this.props.data.table && __jsx(Table, {\n      fixed: this.props.data.table.fixed,\n      compact: this.props.data.table.compact,\n      basic: this.props.data.table.basic ? 'very' : false,\n      celled: this.props.data.table.celled,\n      inverted: this.props.data.table.inverted,\n      striped: this.props.data.table.striped,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 11\n      }\n    }, __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 13\n      }\n    }, _map(this.props.data.table.rows, (row, rowIndex) => __jsx(Table.Row, {\n      key: row.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 17\n      }\n    }, _map(row.cells, (cell, cellIndex) => {\n      var _this$props$data;\n\n      return __jsx(Table.Cell, {\n        key: cell.key,\n        as: cell.type === 'header' ? 'th' : 'td',\n        className: rowIndex === this.state.selected.row && cellIndex === this.state.selected.cell && this.props.selected ? 'selected' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 21\n        }\n      }, __jsx(Cell, {\n        editable: this.props.editable,\n        value: cell.value,\n        row: rowIndex,\n        cell: cellIndex,\n        onSelectCell: this.onSelectCell,\n        selected: rowIndex === this.state.selected.row && cellIndex === this.state.selected.cell,\n        isTableBlockSelected: this.props.selected,\n        onAddBlock: this.props.onAddBlock,\n        onSelectBlock: this.props.onSelectBlock,\n        onChange: this.onChangeCell,\n        index: this.props.index,\n        disableNewBlocks: (_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.disableNewBlocks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 23\n        }\n      }));\n    }))))), this.props.selected && this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('sidebar-properties'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      method: \"post\",\n      onSubmit: event => {\n        event.preventDefault();\n        event.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      secondary: true,\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Table\",\n      defaultMessage: \"Table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 15\n      }\n    }, __jsx(Field, {\n      id: \"fixed\",\n      title: this.props.intl.formatMessage(messages.fixed),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.fixed,\n      onChange: () => this.toggleFixed(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 17\n      }\n    }), __jsx(Field, {\n      id: \"celled\",\n      title: this.props.intl.formatMessage(messages.celled),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.celled,\n      onChange: this.toggleCelled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 17\n      }\n    }), __jsx(Field, {\n      id: \"striped\",\n      title: this.props.intl.formatMessage(messages.striped),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.striped,\n      onChange: this.toggleStriped,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 17\n      }\n    }), __jsx(Field, {\n      id: \"compact\",\n      title: this.props.intl.formatMessage(messages.compact),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.compact,\n      onChange: () => this.toggleCompact(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 17\n      }\n    }), __jsx(Field, {\n      id: \"basic\",\n      title: this.props.intl.formatMessage(messages.basic),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.basic,\n      onChange: this.toggleBasic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      secondary: true,\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Cell\",\n      defaultMessage: \"Cell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 15\n      }\n    }, __jsx(Field, {\n      id: \"celltype\",\n      title: this.props.intl.formatMessage(messages.headerCell),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.rows[this.state.selected.row].cells[this.state.selected.cell].type === 'header',\n      onChange: this.toggleCellType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\n_defineProperty(Edit, \"propTypes\", {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  detached: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  onAddBlock: PropTypes.func.isRequired,\n  onInsertBlock: PropTypes.func.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  onMutateBlock: PropTypes.func.isRequired,\n  onFocusPreviousBlock: PropTypes.func.isRequired,\n  onFocusNextBlock: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired\n});\n\n_defineProperty(Edit, \"defaultProps\", {\n  detached: false\n});\n\nexport default compose(injectLazyLibs(['draftJs']), injectIntl)(Edit);","map":{"version":3,"names":["React","Component","PropTypes","compose","Button","Segment","Table","Form","Portal","cx","FormattedMessage","defineMessages","injectIntl","Cell","Field","Icon","injectLazyLibs","rowBeforeSVG","rowAfterSVG","colBeforeSVG","colAfterSVG","rowDeleteSVG","colDeleteSVG","getId","Math","floor","random","pow","toString","valueToDraft","value","blocks","data","depth","entityRanges","inlineStyleRanges","key","text","type","entityMap","emptyCell","emptyRow","cells","initialTable","fixed","compact","basic","celled","inverted","striped","rows","messages","insertRowBefore","insertRowAfter","deleteRow","insertColBefore","insertColAfter","deleteCol","headerCell","Edit","constructor","props","state","selected","row","cell","isClient","onSelectCell","bind","onInsertRowBefore","onInsertRowAfter","onInsertColBefore","onInsertColAfter","onDeleteRow","onDeleteCol","onChangeCell","toggleCellType","toggleBool","toggleFixed","toggleCompact","toggleBasic","toggleCelled","toggleStriped","convertToRaw","draftJs","componentDidMount","table","onChangeBlock","block","setState","UNSAFE_componentWillReceiveProps","nextProps","editorState","getCurrentContent","e","preventDefault","stopPropagation","slice","index","length","render","intl","formatMessage","rowIndex","cellIndex","editable","onAddBlock","onSelectBlock","disableNewBlocks","document","getElementById","event","objectOf","any","isRequired","detached","bool","number","string","func","onInsertBlock","onDeleteBlock","onMutateBlock","onFocusPreviousBlock","onFocusNextBlock"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Table/Edit.jsx"],"sourcesContent":["/**\n * Edit text block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { map, remove } from 'lodash';\nimport { Button, Segment, Table, Form } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Cell from '@plone/volto/components/manage/Blocks/Table/Cell';\nimport { Field, Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\n\nconst getId = () => Math.floor(Math.random() * Math.pow(2, 24)).toString(32);\n\nconst valueToDraft = (value) => ({\n  blocks: [\n    {\n      data: {},\n      depth: 0,\n      entityRanges: [],\n      inlineStyleRanges: [],\n      key: getId(),\n      text: value,\n      type: 'unstyled',\n    },\n  ],\n  entityMap: {},\n});\n\nconst emptyCell = (type) => ({\n  key: getId(),\n  type: type || 'data',\n  value: valueToDraft(''),\n});\n\nconst emptyRow = (cells) => ({\n  key: getId(),\n  cells: map(cells, () => emptyCell()),\n});\n\nconst initialTable = () => ({\n  fixed: true,\n  compact: false,\n  basic: false,\n  celled: true,\n  inverted: false,\n  striped: false,\n  rows: [\n    {\n      key: getId(),\n      cells: [\n        {\n          key: getId(),\n          type: 'header',\n          value: valueToDraft(''),\n        },\n        {\n          key: getId(),\n          type: 'header',\n          value: valueToDraft(''),\n        },\n      ],\n    },\n    {\n      key: getId(),\n      cells: [\n        {\n          key: getId(),\n          type: 'data',\n          value: valueToDraft(''),\n        },\n        {\n          key: getId(),\n          type: 'data',\n          value: valueToDraft(''),\n        },\n      ],\n    },\n  ],\n});\n\nconst messages = defineMessages({\n  insertRowBefore: {\n    id: 'Insert row before',\n    defaultMessage: 'Insert row before',\n  },\n  insertRowAfter: {\n    id: 'Insert row after',\n    defaultMessage: 'Insert row after',\n  },\n  deleteRow: {\n    id: 'Delete row',\n    defaultMessage: 'Delete row',\n  },\n  insertColBefore: {\n    id: 'Insert col before',\n    defaultMessage: 'Insert col before',\n  },\n  insertColAfter: {\n    id: 'Insert col after',\n    defaultMessage: 'Insert col after',\n  },\n  deleteCol: {\n    id: 'Delete col',\n    defaultMessage: 'Delete col',\n  },\n  fixed: {\n    id: 'Fixed width table cells',\n    defaultMessage: 'Fixed width columns',\n  },\n  compact: {\n    id: 'Make the table compact',\n    defaultMessage: 'Reduce cell padding',\n  },\n  basic: {\n    id: 'Reduce complexity',\n    defaultMessage: 'Minimalistic table design',\n  },\n  celled: {\n    id: 'Divide each row into separate cells',\n    defaultMessage: 'Add border to inner columns',\n  },\n  striped: {\n    id: 'Stripe alternate rows with color',\n    defaultMessage: 'Alternate row background color',\n  },\n  headerCell: {\n    id: 'Header cell',\n    defaultMessage: 'Header cell',\n  },\n});\n\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    detached: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    onAddBlock: PropTypes.func.isRequired,\n    onInsertBlock: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onMutateBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    detached: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: {\n        row: 0,\n        cell: 0,\n      },\n      isClient: false,\n    };\n    this.onSelectCell = this.onSelectCell.bind(this);\n    this.onInsertRowBefore = this.onInsertRowBefore.bind(this);\n    this.onInsertRowAfter = this.onInsertRowAfter.bind(this);\n    this.onInsertColBefore = this.onInsertColBefore.bind(this);\n    this.onInsertColAfter = this.onInsertColAfter.bind(this);\n    this.onDeleteRow = this.onDeleteRow.bind(this);\n    this.onDeleteCol = this.onDeleteCol.bind(this);\n    this.onChangeCell = this.onChangeCell.bind(this);\n    this.toggleCellType = this.toggleCellType.bind(this);\n    this.toggleBool = this.toggleBool.bind(this);\n    this.toggleFixed = this.toggleFixed.bind(this);\n    this.toggleCompact = this.toggleCompact.bind(this);\n    this.toggleBasic = this.toggleBasic.bind(this);\n    this.toggleCelled = this.toggleCelled.bind(this);\n    this.toggleStriped = this.toggleStriped.bind(this);\n\n    const { convertToRaw } = props.draftJs;\n    this.convertToRaw = convertToRaw;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (!this.props.data.table) {\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        table: initialTable(),\n      });\n    }\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!nextProps.data.table) {\n      this.props.onChangeBlock(nextProps.block, {\n        ...nextProps.data,\n        table: initialTable(),\n      });\n    }\n  }\n\n  /**\n   * Select cell handler\n   * @method onSelectCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @returns {undefined}\n   */\n  onSelectCell(row, cell) {\n    this.setState({ selected: { row, cell } });\n  }\n\n  /**\n   * Change cell handler\n   * @method onChangeCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @param {Object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChangeCell(row, cell, editorState) {\n    const table = { ...this.props.data.table };\n    table.rows[row].cells[cell].value = this.convertToRaw(\n      editorState.getCurrentContent(),\n    );\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table,\n    });\n  }\n\n  /**\n   * Toggle cell type\n   * @method toggleCellType\n   * @returns {undefined}\n   */\n  toggleCellType() {\n    const table = { ...this.props.data.table };\n    let type =\n      table.rows[this.state.selected.row].cells[this.state.selected.cell].type;\n    table.rows[this.state.selected.row].cells[this.state.selected.cell].type =\n      type === 'header' ? 'data' : 'header';\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table,\n    });\n  }\n\n  /**\n   * Insert row before handler\n   * @method onInsertRowBefore\n   * @returns {undefined}\n   */\n  onInsertRowBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: [\n          ...table.rows.slice(0, this.state.selected.row),\n          emptyRow(table.rows[0].cells),\n          ...table.rows.slice(this.state.selected.row),\n        ],\n      },\n    });\n    this.setState({\n      selected: {\n        row: this.state.selected.row + 1,\n        cell: this.state.selected.cell,\n      },\n    });\n  }\n\n  /**\n   * Insert row after handler\n   * @method onInsertRowAfter\n   * @returns {undefined}\n   */\n  onInsertRowAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: [\n          ...table.rows.slice(0, this.state.selected.row + 1),\n          emptyRow(table.rows[0].cells),\n          ...table.rows.slice(this.state.selected.row + 1),\n        ],\n      },\n    });\n  }\n\n  /**\n   * Insert col before handler\n   * @method onInsertColBefore\n   * @returns {undefined}\n   */\n  onInsertColBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row, index) => ({\n          ...row,\n          cells: [\n            ...row.cells.slice(0, this.state.selected.cell),\n            emptyCell(table.rows[index].cells[this.state.selected.cell].type),\n            ...row.cells.slice(this.state.selected.cell),\n          ],\n        })),\n      },\n    });\n    this.setState({\n      selected: {\n        row: this.state.selected.row,\n        cell: this.state.selected.cell + 1,\n      },\n    });\n  }\n\n  /**\n   * Insert col after handler\n   * @method onInsertColAfter\n   * @returns {undefined}\n   */\n  onInsertColAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row, index) => ({\n          ...row,\n          cells: [\n            ...row.cells.slice(0, this.state.selected.cell + 1),\n            emptyCell(table.rows[index].cells[this.state.selected.cell].type),\n            ...row.cells.slice(this.state.selected.cell + 1),\n          ],\n        })),\n      },\n    });\n  }\n\n  /**\n   * Delete col handler\n   * @method onDeleteCol\n   * @returns {undefined}\n   */\n  onDeleteCol(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.cell === table.rows[0].cells.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row,\n          cell: this.state.selected.cell - 1,\n        },\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row) => ({\n          ...row,\n          cells: remove(\n            row.cells,\n            (cell, index) => index !== this.state.selected.cell,\n          ),\n        })),\n      },\n    });\n  }\n\n  /**\n   * Delete row handler\n   * @method onDeleteRow\n   * @returns {undefined}\n   */\n  onDeleteRow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.row === table.rows.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row - 1,\n          cell: this.state.selected.cell,\n        },\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: remove(\n          table.rows,\n          (row, index) => index !== this.state.selected.row,\n        ),\n      },\n    });\n  }\n\n  /**\n   * Toggle bool\n   * @method toggleBool\n   * @param {string} value Value to toggle.\n   * @returns {undefined}\n   */\n  toggleBool(value) {\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        [value]: !table[value],\n      },\n    });\n  }\n\n  /**\n   * Toggle fixed\n   * @method toggleFixed\n   * @returns {undefined}\n   */\n  toggleFixed() {\n    this.toggleBool('fixed');\n  }\n\n  /**\n   * Toggle compact\n   * @method toggleCompact\n   * @returns {undefined}\n   */\n  toggleCompact() {\n    this.toggleBool('compact');\n  }\n\n  /**\n   * Toggle basic\n   * @method toggleBasic\n   * @returns {undefined}\n   */\n  toggleBasic() {\n    this.toggleBool('basic');\n  }\n\n  /**\n   * Toggle celled\n   * @method toggleCelled\n   * @returns {undefined}\n   */\n  toggleCelled() {\n    this.toggleBool('celled');\n  }\n\n  /**\n   * Toggle striped\n   * @method toggleStriped\n   * @returns {undefined}\n   */\n  toggleStriped() {\n    this.toggleBool('striped');\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (!this.state.isClient) {\n      return <div />;\n    }\n\n    return (\n      <div className={cx('block table', { selected: this.props.selected })}>\n        {this.props.selected && (\n          <div className=\"toolbar\">\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertRowBefore}\n                title={this.props.intl.formatMessage(messages.insertRowBefore)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertRowBefore,\n                )}\n              >\n                <Icon name={rowBeforeSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertRowAfter}\n                title={this.props.intl.formatMessage(messages.insertRowAfter)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertRowAfter,\n                )}\n              >\n                <Icon name={rowAfterSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onDeleteRow}\n                disabled={\n                  this.props.data.table &&\n                  this.props.data.table.rows.length === 1\n                }\n                title={this.props.intl.formatMessage(messages.deleteRow)}\n                aria-label={this.props.intl.formatMessage(messages.deleteRow)}\n              >\n                <Icon name={rowDeleteSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertColBefore}\n                title={this.props.intl.formatMessage(messages.insertColBefore)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertColBefore,\n                )}\n              >\n                <Icon name={colBeforeSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertColAfter}\n                title={this.props.intl.formatMessage(messages.insertColAfter)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertColAfter,\n                )}\n              >\n                <Icon name={colAfterSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onDeleteCol}\n                disabled={\n                  this.props.data.table &&\n                  this.props.data.table.rows[0].cells.length === 1\n                }\n                title={this.props.intl.formatMessage(messages.deleteCol)}\n                aria-label={this.props.intl.formatMessage(messages.deleteCol)}\n              >\n                <Icon name={colDeleteSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n          </div>\n        )}\n        {this.props.data.table && (\n          <Table\n            fixed={this.props.data.table.fixed}\n            compact={this.props.data.table.compact}\n            basic={this.props.data.table.basic ? 'very' : false}\n            celled={this.props.data.table.celled}\n            inverted={this.props.data.table.inverted}\n            striped={this.props.data.table.striped}\n          >\n            <Table.Body>\n              {map(this.props.data.table.rows, (row, rowIndex) => (\n                <Table.Row key={row.key}>\n                  {map(row.cells, (cell, cellIndex) => (\n                    <Table.Cell\n                      key={cell.key}\n                      as={cell.type === 'header' ? 'th' : 'td'}\n                      className={\n                        rowIndex === this.state.selected.row &&\n                        cellIndex === this.state.selected.cell &&\n                        this.props.selected\n                          ? 'selected'\n                          : ''\n                      }\n                    >\n                      <Cell\n                        editable={this.props.editable}\n                        value={cell.value}\n                        row={rowIndex}\n                        cell={cellIndex}\n                        onSelectCell={this.onSelectCell}\n                        selected={\n                          rowIndex === this.state.selected.row &&\n                          cellIndex === this.state.selected.cell\n                        }\n                        isTableBlockSelected={this.props.selected}\n                        onAddBlock={this.props.onAddBlock}\n                        onSelectBlock={this.props.onSelectBlock}\n                        onChange={this.onChangeCell}\n                        index={this.props.index}\n                        disableNewBlocks={this.props.data?.disableNewBlocks}\n                      />\n                    </Table.Cell>\n                  ))}\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        )}\n        {this.props.selected && this.state.isClient && (\n          <Portal node={document.getElementById('sidebar-properties')}>\n            <Form\n              method=\"post\"\n              onSubmit={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n              }}\n            >\n              <Segment secondary attached>\n                <FormattedMessage id=\"Table\" defaultMessage=\"Table\" />\n              </Segment>\n              <Segment attached>\n                <Field\n                  id=\"fixed\"\n                  title={this.props.intl.formatMessage(messages.fixed)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.fixed}\n                  onChange={() => this.toggleFixed()}\n                />\n                <Field\n                  id=\"celled\"\n                  title={this.props.intl.formatMessage(messages.celled)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.celled}\n                  onChange={this.toggleCelled}\n                />\n                <Field\n                  id=\"striped\"\n                  title={this.props.intl.formatMessage(messages.striped)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.striped}\n                  onChange={this.toggleStriped}\n                />\n                <Field\n                  id=\"compact\"\n                  title={this.props.intl.formatMessage(messages.compact)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.compact}\n                  onChange={() => this.toggleCompact()}\n                />\n                <Field\n                  id=\"basic\"\n                  title={this.props.intl.formatMessage(messages.basic)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.basic}\n                  onChange={this.toggleBasic}\n                />\n              </Segment>\n              <Segment secondary attached>\n                <FormattedMessage id=\"Cell\" defaultMessage=\"Cell\" />\n              </Segment>\n              <Segment attached>\n                <Field\n                  id=\"celltype\"\n                  title={this.props.intl.formatMessage(messages.headerCell)}\n                  type=\"boolean\"\n                  value={\n                    this.props.data.table &&\n                    this.props.data.table.rows[this.state.selected.row].cells[\n                      this.state.selected.cell\n                    ].type === 'header'\n                  }\n                  onChange={this.toggleCellType}\n                />\n              </Segment>\n            </Form>\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(injectLazyLibs(['draftJs']), injectIntl)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Insert row before","defaultMessage":"Insert row before"},{"id":"Insert row after","defaultMessage":"Insert row after"},{"id":"Delete row","defaultMessage":"Delete row"},{"id":"Insert col before","defaultMessage":"Insert col before"},{"id":"Insert col after","defaultMessage":"Insert col after"},{"id":"Delete col","defaultMessage":"Delete col"},{"id":"Fixed width table cells","defaultMessage":"Fixed width columns"},{"id":"Make the table compact","defaultMessage":"Reduce cell padding"},{"id":"Reduce complexity","defaultMessage":"Minimalistic table design"},{"id":"Divide each row into separate cells","defaultMessage":"Add border to inner columns"},{"id":"Stripe alternate rows with color","defaultMessage":"Alternate row background color"},{"id":"Header cell","defaultMessage":"Header cell"},{"id":"Table","defaultMessage":"Table"},{"id":"Cell","defaultMessage":"Cell"}]}},"sourceType":"module"}