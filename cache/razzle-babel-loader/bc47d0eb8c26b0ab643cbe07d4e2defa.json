{"ast":null,"code":"import { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  Maps: {\n    \"id\": \"Maps\",\n    \"defaultMessage\": \"Maps\"\n  },\n  AltText: {\n    \"id\": \"Alt text\",\n    \"defaultMessage\": \"Alt text\"\n  },\n  MapsURL: {\n    \"id\": \"Maps URL\",\n    \"defaultMessage\": \"Maps URL\"\n  },\n  Alignment: {\n    \"id\": \"Alignment\",\n    \"defaultMessage\": \"Alignment\"\n  }\n});\nexport const MapsSchema = props => ({\n  title: props.intl.formatMessage(messages.Maps),\n  block: 'Maps',\n  fieldsets: [{\n    id: 'default',\n    title: 'Default',\n    fields: ['url', 'title', 'align']\n  }],\n  properties: {\n    url: {\n      title: props.intl.formatMessage(messages.MapsURL),\n      widget: 'url'\n    },\n    title: {\n      title: props.intl.formatMessage(messages.AltText)\n    },\n    align: {\n      title: props.intl.formatMessage(messages.Alignment),\n      widget: 'align'\n    }\n  },\n  required: []\n});\n_c = MapsSchema;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapsSchema\");","map":{"version":3,"names":["defineMessages","messages","Maps","AltText","MapsURL","Alignment","MapsSchema","props","title","intl","formatMessage","block","fieldsets","id","fields","properties","url","widget","align","required"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Maps/schema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  Maps: {\n    id: 'Maps',\n    defaultMessage: 'Maps',\n  },\n  AltText: {\n    id: 'Alt text',\n    defaultMessage: 'Alt text',\n  },\n  MapsURL: {\n    id: 'Maps URL',\n    defaultMessage: 'Maps URL',\n  },\n  Alignment: {\n    id: 'Alignment',\n    defaultMessage: 'Alignment',\n  },\n});\nexport const MapsSchema = (props) => ({\n  title: props.intl.formatMessage(messages.Maps),\n  block: 'Maps',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['url', 'title', 'align'],\n    },\n  ],\n\n  properties: {\n    url: {\n      title: props.intl.formatMessage(messages.MapsURL),\n      widget: 'url',\n    },\n    title: {\n      title: props.intl.formatMessage(messages.AltText),\n    },\n    align: {\n      title: props.intl.formatMessage(messages.Alignment),\n      widget: 'align',\n    },\n  },\n  required: [],\n});\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,YAA/B;AAEA,MAAMC,QAAQ,GAAGD,cAAc,CAAC;EAC9BE,IAAI;IAAA;IAAA;EAAA,CAD0B;EAK9BC,OAAO;IAAA;IAAA;EAAA,CALuB;EAS9BC,OAAO;IAAA;IAAA;EAAA,CATuB;EAa9BC,SAAS;IAAA;IAAA;EAAA;AAbqB,CAAD,CAA/B;AAkBA,OAAO,MAAMC,UAAU,GAAIC,KAAD,KAAY;EACpCC,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyBT,QAAQ,CAACC,IAAlC,CAD6B;EAEpCS,KAAK,EAAE,MAF6B;EAGpCC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,SADN;IAEEL,KAAK,EAAE,SAFT;IAGEM,MAAM,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,OAAjB;EAHV,CADS,CAHyB;EAWpCC,UAAU,EAAE;IACVC,GAAG,EAAE;MACHR,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyBT,QAAQ,CAACG,OAAlC,CADJ;MAEHa,MAAM,EAAE;IAFL,CADK;IAKVT,KAAK,EAAE;MACLA,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyBT,QAAQ,CAACE,OAAlC;IADF,CALG;IAQVe,KAAK,EAAE;MACLV,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyBT,QAAQ,CAACI,SAAlC,CADF;MAELY,MAAM,EAAE;IAFH;EARG,CAXwB;EAwBpCE,QAAQ,EAAE;AAxB0B,CAAZ,CAAnB;KAAMb,U"},"metadata":{"react-intl":{"messages":[{"id":"Maps","defaultMessage":"Maps"},{"id":"Alt text","defaultMessage":"Alt text"},{"id":"Maps URL","defaultMessage":"Maps URL"},{"id":"Alignment","defaultMessage":"Alignment"}]}},"sourceType":"module"}