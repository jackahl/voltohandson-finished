{"ast":null,"code":"import _pull from \"lodash/pull\";\nimport _mapValues from \"lodash/mapValues\";\nimport _map from \"lodash/map\";\nimport _keys from \"lodash/keys\";\nimport _indexOf from \"lodash/indexOf\";\nimport _find from \"lodash/find\";\nimport _filter from \"lodash/filter\";\nimport _concat from \"lodash/concat\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Contents/Contents.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Contents component.\n * @module components/manage/Contents/Contents\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Link } from 'react-router-dom';\nimport { Button, Confirm, Container, Divider, Dropdown, Menu, Input, Segment, Table, Loader, Dimmer } from 'semantic-ui-react';\nimport move from 'lodash-move';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { searchContent, cut, copy, copyContent, deleteContent, listActions, moveContent, orderContent, sortContent, updateColumnsContent, getContent } from '@plone/volto/actions';\nimport Indexes, { defaultIndexes } from '@plone/volto/constants/Indexes';\nimport { ContentsBreadcrumbs, ContentsIndexHeader, ContentsItem, ContentsRenameModal, ContentsUploadModal, ContentsWorkflowModal, ContentsTagsModal, ContentsPropertiesModal, Pagination, Popup, Toolbar, Toast, Icon, Unauthorized } from '@plone/volto/components';\nimport { Helmet, getBaseUrl } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport tagSVG from '@plone/volto/icons/tag.svg';\nimport renameSVG from '@plone/volto/icons/rename.svg';\nimport semaphoreSVG from '@plone/volto/icons/semaphore.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nimport propertiesSVG from '@plone/volto/icons/properties.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport checkboxIndeterminateSVG from '@plone/volto/icons/checkbox-indeterminate.svg';\nimport configurationSVG from '@plone/volto/icons/configuration-app.svg';\nimport sortDownSVG from '@plone/volto/icons/sort-down.svg';\nimport sortUpSVG from '@plone/volto/icons/sort-up.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  contents: {\n    \"id\": \"Contents\",\n    \"defaultMessage\": \"Contents\"\n  },\n  copy: {\n    \"id\": \"Copy\",\n    \"defaultMessage\": \"Copy\"\n  },\n  cut: {\n    \"id\": \"Cut\",\n    \"defaultMessage\": \"Cut\"\n  },\n  error: {\n    \"id\": \"You can't paste this content here\",\n    \"defaultMessage\": \"You can't paste this content here\"\n  },\n  delete: {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  deleteConfirm: {\n    \"id\": \"Do you really want to delete the following items?\",\n    \"defaultMessage\": \"Do you really want to delete the following items?\"\n  },\n  deleteError: {\n    \"id\": \"The item could not be deleted.\",\n    \"defaultMessage\": \"The item could not be deleted.\"\n  },\n  loading: {\n    \"id\": \"loading\",\n    \"defaultMessage\": \"Loading\"\n  },\n  home: {\n    \"id\": \"Home\",\n    \"defaultMessage\": \"Home\"\n  },\n  filter: {\n    \"id\": \"Filter\\u2026\",\n    \"defaultMessage\": \"Filter\\u2026\"\n  },\n  messageCopied: {\n    \"id\": \"Item(s) copied.\",\n    \"defaultMessage\": \"Item(s) copied.\"\n  },\n  messageCut: {\n    \"id\": \"Item(s) cut.\",\n    \"defaultMessage\": \"Item(s) cut.\"\n  },\n  messageUpdate: {\n    \"id\": \"Item(s) has been updated.\",\n    \"defaultMessage\": \"Item(s) has been updated.\"\n  },\n  messageReorder: {\n    \"id\": \"Item succesfully moved.\",\n    \"defaultMessage\": \"Item succesfully moved.\"\n  },\n  messagePasted: {\n    \"id\": \"Item(s) pasted.\",\n    \"defaultMessage\": \"Item(s) pasted.\"\n  },\n  messageWorkflowUpdate: {\n    \"id\": \"Item(s) state has been updated.\",\n    \"defaultMessage\": \"Item(s) state has been updated.\"\n  },\n  paste: {\n    \"id\": \"Paste\",\n    \"defaultMessage\": \"Paste\"\n  },\n  properties: {\n    \"id\": \"Properties\",\n    \"defaultMessage\": \"Properties\"\n  },\n  rearrangeBy: {\n    \"id\": \"Rearrange items by\\u2026\",\n    \"defaultMessage\": \"Rearrange items by\\u2026\"\n  },\n  rename: {\n    \"id\": \"Rename\",\n    \"defaultMessage\": \"Rename\"\n  },\n  select: {\n    \"id\": \"Select\\u2026\",\n    \"defaultMessage\": \"Select\\u2026\"\n  },\n  selected: {\n    \"id\": \"{count} selected\",\n    \"defaultMessage\": \"{count} selected\"\n  },\n  selectColumns: {\n    \"id\": \"Select columns to show\",\n    \"defaultMessage\": \"Select columns to show\"\n  },\n  sort: {\n    \"id\": \"sort\",\n    \"defaultMessage\": \"sort\"\n  },\n  state: {\n    \"id\": \"State\",\n    \"defaultMessage\": \"State\"\n  },\n  tags: {\n    \"id\": \"Tags\",\n    \"defaultMessage\": \"Tags\"\n  },\n  upload: {\n    \"id\": \"Upload\",\n    \"defaultMessage\": \"Upload\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  publicationDate: {\n    \"id\": \"Publication date\",\n    \"defaultMessage\": \"Publication date\"\n  },\n  createdOn: {\n    \"id\": \"Created on\",\n    \"defaultMessage\": \"Created on\"\n  },\n  expirationDate: {\n    \"id\": \"Expiration date\",\n    \"defaultMessage\": \"Expiration date\"\n  },\n  id: {\n    \"id\": \"ID\",\n    \"defaultMessage\": \"ID\"\n  },\n  uid: {\n    \"id\": \"UID\",\n    \"defaultMessage\": \"UID\"\n  },\n  reviewState: {\n    \"id\": \"Review state\",\n    \"defaultMessage\": \"Review state\"\n  },\n  folder: {\n    \"id\": \"Folder\",\n    \"defaultMessage\": \"Folder\"\n  },\n  excludedFromNavigation: {\n    \"id\": \"Excluded from navigation\",\n    \"defaultMessage\": \"Excluded from navigation\"\n  },\n  objectSize: {\n    \"id\": \"Object Size\",\n    \"defaultMessage\": \"Object Size\"\n  },\n  lastCommentedDate: {\n    \"id\": \"Last comment date\",\n    \"defaultMessage\": \"Last comment date\"\n  },\n  totalComments: {\n    \"id\": \"Total comments\",\n    \"defaultMessage\": \"Total comments\"\n  },\n  creator: {\n    \"id\": \"Creator\",\n    \"defaultMessage\": \"Creator\"\n  },\n  endDate: {\n    \"id\": \"End Date\",\n    \"defaultMessage\": \"End Date\"\n  },\n  startDate: {\n    \"id\": \"Start Date\",\n    \"defaultMessage\": \"Start Date\"\n  },\n  all: {\n    \"id\": \"All\",\n    \"defaultMessage\": \"All\"\n  }\n});\n/**\n * Contents class.\n * @class Contents\n * @extends Component\n */\n\nclass Contents extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsComponent\n   */\n  constructor(props) {\n    var _this$props$sort, _this$props$sort2;\n\n    super(props);\n    this.onDeselect = this.onDeselect.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onSelectAll = this.onSelectAll.bind(this);\n    this.onSelectIndex = this.onSelectIndex.bind(this);\n    this.onSelectNone = this.onSelectNone.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onUploadOk = this.onUploadOk.bind(this);\n    this.onUploadCancel = this.onUploadCancel.bind(this);\n    this.onRenameOk = this.onRenameOk.bind(this);\n    this.onRenameCancel = this.onRenameCancel.bind(this);\n    this.onTagsOk = this.onTagsOk.bind(this);\n    this.onTagsCancel = this.onTagsCancel.bind(this);\n    this.onPropertiesOk = this.onPropertiesOk.bind(this);\n    this.onPropertiesCancel = this.onPropertiesCancel.bind(this);\n    this.onWorkflowOk = this.onWorkflowOk.bind(this);\n    this.onWorkflowCancel = this.onWorkflowCancel.bind(this);\n    this.onChangeFilter = this.onChangeFilter.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangePageSize = this.onChangePageSize.bind(this);\n    this.onOrderIndex = this.onOrderIndex.bind(this);\n    this.onOrderItem = this.onOrderItem.bind(this);\n    this.onSortItems = this.onSortItems.bind(this);\n    this.onMoveToTop = this.onMoveToTop.bind(this);\n    this.onChangeSelected = this.onChangeSelected.bind(this);\n    this.onMoveToBottom = this.onMoveToBottom.bind(this);\n    this.cut = this.cut.bind(this);\n    this.copy = this.copy.bind(this);\n    this.delete = this.delete.bind(this);\n    this.upload = this.upload.bind(this);\n    this.rename = this.rename.bind(this);\n    this.tags = this.tags.bind(this);\n    this.properties = this.properties.bind(this);\n    this.workflow = this.workflow.bind(this);\n    this.paste = this.paste.bind(this);\n    this.fetchContents = this.fetchContents.bind(this);\n    this.orderTimeout = null;\n    this.state = {\n      selected: [],\n      showDelete: false,\n      showUpload: false,\n      showRename: false,\n      showTags: false,\n      showProperties: false,\n      showWorkflow: false,\n      itemsToDelete: [],\n      items: this.props.items,\n      filter: '',\n      currentPage: 0,\n      pageSize: 50,\n      index: this.props.index || {\n        order: _keys(Indexes),\n        values: _mapValues(Indexes, (value, key) => _objectSpread(_objectSpread({}, value), {}, {\n          selected: _indexOf(defaultIndexes, key) !== -1\n        })),\n        selectedCount: defaultIndexes.length + 1\n      },\n      sort_on: ((_this$props$sort = this.props.sort) === null || _this$props$sort === void 0 ? void 0 : _this$props$sort.on) || 'getObjPositionInParent',\n      sort_order: ((_this$props$sort2 = this.props.sort) === null || _this$props$sort2 === void 0 ? void 0 : _this$props$sort2.order) || 'ascending',\n      isClient: false\n    };\n    this.filterTimeout = null;\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.fetchContents();\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.clipboardRequest.loading && nextProps.clipboardRequest.loaded || this.props.deleteRequest.loading && nextProps.deleteRequest.loaded || this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.fetchContents(nextProps.pathname);\n    }\n\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.toastify.toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messageUpdate),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (this.props.pathname !== nextProps.pathname) {\n      // Refetching content to sync the current object in the toolbar\n      this.props.getContent(getBaseUrl(nextProps.pathname));\n      this.setState({\n        currentPage: 0\n      }, () => this.setState({\n        filter: ''\n      }, () => this.fetchContents(nextProps.pathname)));\n    }\n\n    if (this.props.searchRequest.loading && nextProps.searchRequest.loaded) {\n      this.setState({\n        items: nextProps.items\n      });\n    }\n\n    if (this.props.clipboardRequest.loading && nextProps.clipboardRequest.error) {\n      this.props.toastify.toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: this.props.intl.formatMessage(messages.error),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (this.props.clipboardRequest.loading && nextProps.clipboardRequest.loaded) {\n      this.props.toastify.toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messagePasted),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.error) {\n      this.props.toastify.toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.deleteError),\n        content: this.props.intl.formatMessage(messages.deleteError),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (this.props.orderRequest.loading && nextProps.orderRequest.loaded) {\n      this.props.toastify.toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messageReorder),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n  /**\n   * On deselect handler\n   * @method onDeselect\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n\n\n  onDeselect(event, {\n    value\n  }) {\n    this.setState({\n      selected: _pull(this.state.selected, value)\n    });\n  }\n  /**\n   * On select handler\n   * @method onSelect\n   * @param {object} event Event object\n   * @returns {undefined}\n   */\n\n\n  onSelect(event, id) {\n    if (_indexOf(this.state.selected, id) === -1) {\n      this.setState({\n        selected: _concat(this.state.selected, id)\n      });\n    } else {\n      this.setState({\n        selected: _pull(this.state.selected, id)\n      });\n    }\n  }\n  /**\n   * On select all handler\n   * @method onSelectAll\n   * @returns {undefined}\n   */\n\n\n  onSelectAll() {\n    this.setState({\n      selected: _map(this.state.items, item => item['@id'])\n    });\n  }\n  /**\n   * On select none handler\n   * @method onSelectNone\n   * @returns {undefined}\n   */\n\n\n  onSelectNone() {\n    this.setState({\n      selected: []\n    });\n  }\n  /**\n   * On select index\n   * @method onSelectIndex\n   * @param {object} event Event object.\n   * @param {string} value Index value.\n   * @returns {undefined}\n   */\n\n\n  onSelectIndex(event, {\n    value\n  }) {\n    let newIndex = _objectSpread(_objectSpread({}, this.state.index), {}, {\n      selectedCount: this.state.index.selectedCount + (this.state.index.values[value].selected ? -1 : 1),\n      values: _mapValues(this.state.index.values, (indexValue, indexKey) => _objectSpread(_objectSpread({}, indexValue), {}, {\n        selected: indexKey === value ? !indexValue.selected : indexValue.selected\n      }))\n    });\n\n    this.setState({\n      index: newIndex\n    });\n    this.props.updateColumnsContent(getBaseUrl(this.props.pathname), newIndex);\n  }\n  /**\n   * On change filter\n   * @method onChangeFilter\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n\n\n  onChangeFilter(event, {\n    value\n  }) {\n    const self = this;\n    clearTimeout(self.filterTimeout);\n    this.setState({\n      filter: value\n    }, () => {\n      self.filterTimeout = setTimeout(() => {\n        self.fetchContents();\n      }, 200);\n    });\n  }\n  /**\n   * On change selected values (Filter)\n   * @method onChangeSelected\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n\n\n  onChangeSelected(event, {\n    value\n  }) {\n    event.stopPropagation();\n    const {\n      items,\n      selected\n    } = this.state;\n\n    const filteredItems = _filter(selected, selectedItem => _find(items, item => item['@id'] === selectedItem).title.toLowerCase().includes(value.toLowerCase()));\n\n    this.setState({\n      filteredItems,\n      selectedMenuFilter: value\n    });\n  }\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n\n\n  onChangePage(event, {\n    value\n  }) {\n    this.setState({\n      currentPage: value\n    }, () => this.fetchContents());\n  }\n  /**\n   * On change page size\n   * @method onChangePageSize\n   * @param {object} event Event object.\n   * @param {string} value Page size value.\n   * @returns {undefined}\n   */\n\n\n  onChangePageSize(event, {\n    value\n  }) {\n    this.setState({\n      pageSize: value,\n      currentPage: 0\n    }, () => this.fetchContents());\n  }\n  /**\n   * On order index\n   * @method onOrderIndex\n   * @param {number} index Index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n\n\n  onOrderIndex(index, delta) {\n    this.setState({\n      index: _objectSpread(_objectSpread({}, this.state.index), {}, {\n        order: move(this.state.index.order, index, index + delta)\n      })\n    });\n    this.props.updateColumnsContent(getBaseUrl(this.props.pathname), this.state.index);\n  }\n  /**\n   * On order item\n   * @method onOrderItem\n   * @param {string} id Item id\n   * @param {number} itemIndex Item index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n\n\n  onOrderItem(id, itemIndex, delta, backend) {\n    if (backend) {\n      this.props.orderContent(getBaseUrl(this.props.pathname), id.replace(/^.*\\//, ''), delta);\n    } else {\n      this.setState({\n        items: move(this.state.items, itemIndex, itemIndex + delta)\n      });\n    }\n  }\n  /**\n   * On sort items\n   * @method onSortItems\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n\n\n  onSortItems(event, {\n    value\n  }) {\n    const values = value.split('|');\n    this.setState({\n      sort_on: values[0],\n      sort_order: values[1]\n    });\n    this.props.sortContent(getBaseUrl(this.props.pathname), values[0], values[1]);\n  }\n  /**\n   * On move to top\n   * @method onMoveToTop\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n\n\n  onMoveToTop(event, {\n    value\n  }) {\n    const id = this.state.items[value]['@id'];\n    value = this.state.currentPage * this.state.pageSize + value;\n    this.props.orderContent(getBaseUrl(this.props.pathname), id.replace(/^.*\\//, ''), -value);\n    this.setState({\n      currentPage: 0\n    }, () => this.fetchContents());\n  }\n  /**\n   * On move to bottom\n   * @method onMoveToBottom\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n\n\n  onMoveToBottom(event, {\n    value\n  }) {\n    this.onOrderItem(this.state.items[value]['@id'], value, this.state.items.length - 1 - value, false);\n    this.onOrderItem(this.state.items[value]['@id'], value, this.state.items.length - 1 - value, true);\n  }\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n\n\n  onDeleteOk() {\n    this.props.deleteContent(this.state.itemsToDelete);\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n      selected: []\n    });\n  }\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n\n\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: []\n    });\n  }\n  /**\n   * On upload ok\n   * @method onUploadOk\n   * @returns {undefined}\n   */\n\n\n  onUploadOk() {\n    this.fetchContents();\n    this.setState({\n      showUpload: false\n    });\n  }\n  /**\n   * On upload cancel\n   * @method onUploadCancel\n   * @returns {undefined}\n   */\n\n\n  onUploadCancel() {\n    this.setState({\n      showUpload: false\n    });\n  }\n  /**\n   * On rename ok\n   * @method onRenameOk\n   * @returns {undefined}\n   */\n\n\n  onRenameOk() {\n    this.setState({\n      showRename: false,\n      selected: []\n    });\n  }\n  /**\n   * On rename cancel\n   * @method onRenameCancel\n   * @returns {undefined}\n   */\n\n\n  onRenameCancel() {\n    this.setState({\n      showRename: false\n    });\n  }\n  /**\n   * On tags ok\n   * @method onTagsOk\n   * @returns {undefined}\n   */\n\n\n  onTagsOk() {\n    this.setState({\n      showTags: false,\n      selected: []\n    });\n  }\n  /**\n   * On tags cancel\n   * @method onTagsCancel\n   * @returns {undefined}\n   */\n\n\n  onTagsCancel() {\n    this.setState({\n      showTags: false\n    });\n  }\n  /**\n   * On properties ok\n   * @method onPropertiesOk\n   * @returns {undefined}\n   */\n\n\n  onPropertiesOk() {\n    this.setState({\n      showProperties: false,\n      selected: []\n    });\n  }\n  /**\n   * On properties cancel\n   * @method onPropertiesCancel\n   * @returns {undefined}\n   */\n\n\n  onPropertiesCancel() {\n    this.setState({\n      showProperties: false\n    });\n  }\n  /**\n   * On workflow ok\n   * @method onWorkflowOk\n   * @returns {undefined}\n   */\n\n\n  onWorkflowOk() {\n    this.fetchContents();\n    this.setState({\n      showWorkflow: false,\n      selected: []\n    });\n    this.props.toastify.toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.messageWorkflowUpdate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 7\n      }\n    }));\n  }\n  /**\n   * On workflow cancel\n   * @method onWorkflowCancel\n   * @returns {undefined}\n   */\n\n\n  onWorkflowCancel() {\n    this.setState({\n      showWorkflow: false\n    });\n  }\n  /**\n   * Get field by id\n   * @method getFieldById\n   * @param {string} id Id of object\n   * @param {string} field Field of object\n   * @returns {string} Field of object\n   */\n\n\n  getFieldById(id, field) {\n    const item = _find(this.state.items, {\n      '@id': id\n    });\n\n    return item ? item[field] : '';\n  }\n  /**\n   * Fetch contents handler\n   * @method fetchContents\n   * @param {string} pathname Pathname to fetch contents.\n   * @returns {undefined}\n   */\n\n\n  fetchContents(pathname) {\n    if (this.state.pageSize === this.props.intl.formatMessage(messages.all)) {\n      //'All'\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), _objectSpread({\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        b_size: 100000000\n      }, this.state.filter && {\n        SearchableText: `${this.state.filter}*`\n      }));\n    } else {\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), _objectSpread(_objectSpread({\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all'\n      }, this.state.filter && {\n        SearchableText: `${this.state.filter}*`\n      }), {}, {\n        b_size: this.state.pageSize,\n        b_start: this.state.currentPage * this.state.pageSize\n      }));\n    }\n  }\n  /**\n   * Cut handler\n   * @method cut\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n\n\n  cut(event, {\n    value\n  }) {\n    this.props.cut(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.messageCut),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 7\n      }\n    }));\n  }\n  /**\n   * Copy handler\n   * @method copy\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n\n\n  copy(event, {\n    value\n  }) {\n    this.props.copy(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.messageCopied),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 7\n      }\n    }));\n  }\n  /**\n   * Delete handler\n   * @method delete\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n\n\n  delete(event, {\n    value\n  }) {\n    this.setState({\n      showDelete: true,\n      itemsToDelete: value ? [value] : this.state.selected\n    });\n  }\n  /**\n   * Upload handler\n   * @method upload\n   * @returns {undefined}\n   */\n\n\n  upload() {\n    this.setState({\n      showUpload: true\n    });\n  }\n  /**\n   * Rename handler\n   * @method rename\n   * @returns {undefined}\n   */\n\n\n  rename() {\n    this.setState({\n      showRename: true\n    });\n  }\n  /**\n   * Tags handler\n   * @method tags\n   * @returns {undefined}\n   */\n\n\n  tags() {\n    this.setState({\n      showTags: true\n    });\n  }\n  /**\n   * Properties handler\n   * @method properties\n   * @returns {undefined}\n   */\n\n\n  properties() {\n    this.setState({\n      showProperties: true\n    });\n  }\n  /**\n   * Workflow handler\n   * @method workflow\n   * @returns {undefined}\n   */\n\n\n  workflow() {\n    this.setState({\n      showWorkflow: true\n    });\n  }\n  /**\n   * Paste handler\n   * @method paste\n   * @returns {undefined}\n   */\n\n\n  paste() {\n    if (this.props.action === 'copy') {\n      this.props.copyContent(this.props.source, getBaseUrl(this.props.pathname));\n    }\n\n    if (this.props.action === 'cut') {\n      this.props.moveContent(this.props.source, getBaseUrl(this.props.pathname));\n    }\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    var _this$props$clipboard, _this$props$clipboard2, _this$props$deleteReq, _this$props$deleteReq2, _this$props$updateReq, _this$props$updateReq2, _this$props$orderRequ, _this$props$orderRequ2, _this$props$searchReq, _this$props$searchReq2, _this$props$objectAct;\n\n    const selected = this.state.selected.length > 0;\n    const filteredItems = this.state.filteredItems || this.state.selected;\n    const path = getBaseUrl(this.props.pathname);\n\n    const folderContentsAction = _find(this.props.objectActions, {\n      id: 'folderContents'\n    });\n\n    const loading = ((_this$props$clipboard = this.props.clipboardRequest) === null || _this$props$clipboard === void 0 ? void 0 : _this$props$clipboard.loading) && !((_this$props$clipboard2 = this.props.clipboardRequest) !== null && _this$props$clipboard2 !== void 0 && _this$props$clipboard2.error) || ((_this$props$deleteReq = this.props.deleteRequest) === null || _this$props$deleteReq === void 0 ? void 0 : _this$props$deleteReq.loading) && !((_this$props$deleteReq2 = this.props.deleteRequest) !== null && _this$props$deleteReq2 !== void 0 && _this$props$deleteReq2.error) || ((_this$props$updateReq = this.props.updateRequest) === null || _this$props$updateReq === void 0 ? void 0 : _this$props$updateReq.loading) && !((_this$props$updateReq2 = this.props.updateRequest) !== null && _this$props$updateReq2 !== void 0 && _this$props$updateReq2.error) || ((_this$props$orderRequ = this.props.orderRequest) === null || _this$props$orderRequ === void 0 ? void 0 : _this$props$orderRequ.loading) && !((_this$props$orderRequ2 = this.props.orderRequest) !== null && _this$props$orderRequ2 !== void 0 && _this$props$orderRequ2.error) || ((_this$props$searchReq = this.props.searchRequest) === null || _this$props$searchReq === void 0 ? void 0 : _this$props$searchReq.loading) && !((_this$props$searchReq2 = this.props.searchRequest) !== null && _this$props$searchReq2 !== void 0 && _this$props$searchReq2.error);\n    return this.props.token && ((_this$props$objectAct = this.props.objectActions) === null || _this$props$objectAct === void 0 ? void 0 : _this$props$objectAct.length) > 0 ? __jsx(React.Fragment, null, folderContentsAction ? __jsx(Container, {\n      id: \"page-contents\",\n      className: \"folder-contents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 11\n      }\n    }, __jsx(Dimmer.Dimmable, {\n      as: \"div\",\n      blurring: true,\n      dimmed: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 13\n      }\n    }, __jsx(Dimmer, {\n      active: loading,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 15\n      }\n    }, __jsx(Loader, {\n      indeterminate: true,\n      size: \"massive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 17\n      }\n    }, this.props.intl.formatMessage(messages.loading))), __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.contents),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 15\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 17\n      }\n    }, __jsx(Confirm, {\n      open: this.state.showDelete,\n      header: this.props.intl.formatMessage(messages.deleteConfirm),\n      content: __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 23\n        }\n      }, __jsx(\"ul\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 25\n        }\n      }, _map(this.state.itemsToDelete, item => __jsx(\"li\", {\n        key: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146,\n          columnNumber: 29\n        }\n      }, this.getFieldById(item, 'title'))))),\n      onCancel: this.onDeleteCancel,\n      onConfirm: this.onDeleteOk,\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 19\n      }\n    }), __jsx(ContentsUploadModal, {\n      open: this.state.showUpload,\n      onCancel: this.onUploadCancel,\n      onOk: this.onUploadOk,\n      pathname: getBaseUrl(this.props.pathname),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 19\n      }\n    }), __jsx(ContentsRenameModal, {\n      open: this.state.showRename,\n      onCancel: this.onRenameCancel,\n      onOk: this.onRenameOk,\n      items: _map(this.state.selected, item => ({\n        url: item,\n        title: this.getFieldById(item, 'title'),\n        id: this.getFieldById(item, 'id')\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 19\n      }\n    }), __jsx(ContentsTagsModal, {\n      open: this.state.showTags,\n      onCancel: this.onTagsCancel,\n      onOk: this.onTagsOk,\n      items: _map(this.state.selected, item => ({\n        url: item,\n        subjects: this.getFieldById(item, 'Subject')\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 19\n      }\n    }), __jsx(ContentsPropertiesModal, {\n      open: this.state.showProperties,\n      onCancel: this.onPropertiesCancel,\n      onOk: this.onPropertiesOk,\n      items: this.state.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1182,\n        columnNumber: 19\n      }\n    }), this.state.showWorkflow && __jsx(ContentsWorkflowModal, {\n      open: this.state.showWorkflow,\n      onCancel: this.onWorkflowCancel,\n      onOk: this.onWorkflowOk,\n      items: this.state.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 21\n      }\n    }), __jsx(\"section\", {\n      id: \"content-core\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 19\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1197,\n        columnNumber: 21\n      }\n    }, __jsx(Menu, {\n      secondary: true,\n      attached: true,\n      className: \"top-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 23\n      }\n    }, __jsx(Menu.Menu, {\n      className: \"top-menu-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1199,\n        columnNumber: 25\n      }\n    }, __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.upload,\n        className: \"upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: uploadSVG,\n        color: \"#007eb1\",\n        size: \"24px\",\n        className: \"upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.upload),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1200,\n        columnNumber: 27\n      }\n    })), __jsx(Menu.Menu, {\n      className: \"top-menu-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 25\n      }\n    }, __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.rename,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: renameSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"rename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.rename),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1224,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.workflow,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: semaphoreSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"semaphore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.state),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.tags,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: tagSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.tags),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1268,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.properties,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: propertiesSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"properties\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1299,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.properties),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 27\n      }\n    })), __jsx(Menu.Menu, {\n      className: \"top-menu-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 25\n      }\n    }, __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.cut,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1317,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: cutSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"cut\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.cut),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1315,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.copy,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: copySVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"copy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.copy),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.paste,\n        disabled: !this.props.action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1362,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: pasteSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"paste\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.paste),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1360,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.delete,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: deleteSVG,\n        color: selected ? '#e40166' : 'grey',\n        size: \"24px\",\n        className: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.delete),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1383,\n        columnNumber: 27\n      }\n    })), __jsx(Menu.Menu, {\n      position: \"right\",\n      className: \"top-menu-searchbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1406,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"ui right aligned category search item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1410,\n        columnNumber: 27\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      transparent: true,\n      placeholder: this.props.intl.formatMessage(messages.filter),\n      size: \"small\",\n      value: this.state.filter,\n      onChange: this.onChangeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1411,\n        columnNumber: 29\n      }\n    }), __jsx(Icon, {\n      name: zoomSVG,\n      size: \"30px\",\n      color: \"#007eb1\",\n      className: \"zoom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1421,\n        columnNumber: 29\n      }\n    }), __jsx(\"div\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1427,\n        columnNumber: 29\n      }\n    })))), __jsx(Segment, {\n      secondary: true,\n      attached: true,\n      className: \"contents-breadcrumbs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 23\n      }\n    }, __jsx(ContentsBreadcrumbs, {\n      items: this.props.breadcrumbs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1436,\n        columnNumber: 25\n      }\n    }), __jsx(Dropdown, {\n      item: true,\n      upward: false,\n      icon: __jsx(Icon, {\n        name: moreSVG,\n        size: \"24px\",\n        color: \"#826a6a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 29\n        }\n      }),\n      className: \"right floating selectIndex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1437,\n        columnNumber: 25\n      }\n    }, __jsx(Dropdown.Menu, {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1445,\n        columnNumber: 27\n      }\n    }, __jsx(Dropdown.Header, {\n      content: this.props.intl.formatMessage(messages.selectColumns),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1446,\n        columnNumber: 29\n      }\n    }), __jsx(Dropdown.Menu, {\n      scrolling: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1451,\n        columnNumber: 29\n      }\n    }, _map(_filter(this.state.index.order, index => index !== 'sortable_title'), index => __jsx(Dropdown.Item, {\n      key: index,\n      value: index,\n      onClick: this.onSelectIndex,\n      className: \"iconAlign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 35\n      }\n    }, this.state.index.values[index].selected ? __jsx(Icon, {\n      name: checkboxCheckedSVG,\n      size: \"24px\",\n      color: \"#007eb1\",\n      className: this.state.index.values[index].label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 39\n      }\n    }) : __jsx(Icon, {\n      name: checkboxUncheckedSVG,\n      className: this.state.index.values[index].label,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1474,\n        columnNumber: 39\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1482,\n        columnNumber: 37\n      }\n    }, ' ', this.props.intl.formatMessage({\n      id: this.state.index.values[index].label,\n      defaultMessage: this.state.index.values[index].label\n    })))))))), __jsx(\"div\", {\n      className: \"contents-table-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1499,\n        columnNumber: 23\n      }\n    }, __jsx(Table, {\n      selectable: true,\n      compact: true,\n      singleLine: true,\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1500,\n        columnNumber: 25\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1501,\n        columnNumber: 27\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1502,\n        columnNumber: 29\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1503,\n        columnNumber: 31\n      }\n    }, __jsx(Popup, {\n      menu: true,\n      position: \"bottom left\",\n      flowing: true,\n      basic: true,\n      on: \"click\",\n      popper: {\n        className: 'dropdown-popup'\n      },\n      trigger: __jsx(Icon, {\n        name: configurationSVG,\n        size: \"24px\",\n        color: \"#826a6a\",\n        className: \"dropdown-popup-trigger configuration-svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1514,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1504,\n        columnNumber: 33\n      }\n    }, __jsx(Menu, {\n      vertical: true,\n      borderless: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1522,\n        columnNumber: 35\n      }\n    }, __jsx(Menu.Header, {\n      content: this.props.intl.formatMessage(messages.rearrangeBy),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1523,\n        columnNumber: 37\n      }\n    }), _map(['id', 'sortable_title', 'EffectiveDate', 'CreationDate', 'ModificationDate', 'portal_type'], index => __jsx(Dropdown, {\n      key: index,\n      item: true,\n      simple: true,\n      className: `sort_${index} icon-align`,\n      icon: __jsx(Icon, {\n        name: downKeySVG,\n        size: \"24px\",\n        className: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1544,\n          columnNumber: 45\n        }\n      }),\n      text: this.props.intl.formatMessage({\n        id: Indexes[index].label\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1538,\n        columnNumber: 41\n      }\n    }, __jsx(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1554,\n        columnNumber: 43\n      }\n    }, __jsx(Dropdown.Item, {\n      onClick: this.onSortItems,\n      value: `${Indexes[index].sort_on}|ascending`,\n      className: `sort_${Indexes[index].sort_on}_ascending icon-align`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1555,\n        columnNumber: 45\n      }\n    }, __jsx(Icon, {\n      name: sortDownSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 47\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"Ascending\",\n      defaultMessage: \"Ascending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1564,\n        columnNumber: 47\n      }\n    })), __jsx(Dropdown.Item, {\n      onClick: this.onSortItems,\n      value: `${Indexes[index].sort_on}|descending`,\n      className: `sort_${Indexes[index].sort_on}_descending icon-align`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 45\n      }\n    }, __jsx(Icon, {\n      name: sortUpSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1574,\n        columnNumber: 47\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"Descending\",\n      defaultMessage: \"Descending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1578,\n        columnNumber: 47\n      }\n    })))))))), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 31\n      }\n    }, __jsx(Popup, {\n      menu: true,\n      position: \"bottom left\",\n      flowing: true,\n      basic: true,\n      on: \"click\",\n      popper: {\n        className: 'dropdown-popup'\n      },\n      trigger: __jsx(Icon, {\n        name: this.state.selected.length === 0 ? checkboxUncheckedSVG : this.state.selected.length === this.state.items.length ? checkboxCheckedSVG : checkboxIndeterminateSVG,\n        color: this.state.selected.length > 0 ? '#007eb1' : '#826a6a',\n        className: \"dropdown-popup-trigger\",\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1601,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1591,\n        columnNumber: 33\n      }\n    }, __jsx(Menu, {\n      vertical: true,\n      borderless: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1620,\n        columnNumber: 35\n      }\n    }, __jsx(Menu.Header, {\n      content: this.props.intl.formatMessage(messages.select),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1621,\n        columnNumber: 37\n      }\n    }), __jsx(Menu.Item, {\n      onClick: this.onSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1626,\n        columnNumber: 37\n      }\n    }, __jsx(Icon, {\n      name: checkboxCheckedSVG,\n      color: \"#007eb1\",\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1627,\n        columnNumber: 39\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"All\",\n      defaultMessage: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 39\n      }\n    })), __jsx(Menu.Item, {\n      onClick: this.onSelectNone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1637,\n        columnNumber: 37\n      }\n    }, __jsx(Icon, {\n      name: checkboxUncheckedSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1638,\n        columnNumber: 39\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"None\",\n      defaultMessage: \"None\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1642,\n        columnNumber: 39\n      }\n    })), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1647,\n        columnNumber: 37\n      }\n    }), __jsx(Menu.Header, {\n      content: this.props.intl.formatMessage(messages.selected, {\n        count: this.state.selected.length\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1648,\n        columnNumber: 37\n      }\n    }), __jsx(Input, {\n      icon: __jsx(Icon, {\n        name: zoomSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1655,\n          columnNumber: 45\n        }\n      }),\n      iconPosition: \"left\",\n      className: \"item search\",\n      placeholder: this.props.intl.formatMessage(messages.filter),\n      value: this.state.selectedMenuFilter || '',\n      onChange: this.onChangeSelected,\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1654,\n        columnNumber: 37\n      }\n    }), __jsx(Menu.Menu, {\n      scrolling: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1670,\n        columnNumber: 37\n      }\n    }, _map(filteredItems, item => __jsx(Menu.Item, {\n      key: item,\n      value: item,\n      onClick: this.onDeselect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1672,\n        columnNumber: 41\n      }\n    }, __jsx(Icon, {\n      name: deleteSVG,\n      color: \"#e40166\",\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1677,\n        columnNumber: 43\n      }\n    }), ' ', this.getFieldById(item, 'title'))))))), __jsx(Table.HeaderCell, {\n      width: Math.ceil(16 / this.state.index.selectedCount),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1689,\n        columnNumber: 31\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Title\",\n      defaultMessage: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1694,\n        columnNumber: 33\n      }\n    })), _map(this.state.index.order, (index, order) => this.state.index.values[index].selected && __jsx(ContentsIndexHeader, {\n      key: index,\n      width: Math.ceil(16 / this.state.index.selectedCount),\n      label: this.state.index.values[index].label,\n      order: order,\n      onOrderIndex: this.onOrderIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1703,\n        columnNumber: 37\n      }\n    })), __jsx(Table.HeaderCell, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1716,\n        columnNumber: 31\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Actions\",\n      defaultMessage: \"Actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1717,\n        columnNumber: 33\n      }\n    })))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1724,\n        columnNumber: 27\n      }\n    }, this.state.items.map((item, order) => __jsx(ContentsItem, {\n      key: item['@id'],\n      item: item,\n      order: order,\n      selected: _indexOf(this.state.selected, item['@id']) !== -1,\n      onClick: this.onSelect,\n      indexes: _filter(_map(this.state.index.order, index => ({\n        id: index,\n        type: this.state.index.values[index].type\n      })), index => this.state.index.values[index.id].selected),\n      onCut: this.cut,\n      onCopy: this.copy,\n      onDelete: this.delete,\n      onOrderItem: this.onOrderItem,\n      onMoveToTop: this.onMoveToTop,\n      onMoveToBottom: this.onMoveToBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1726,\n        columnNumber: 31\n      }\n    }))))), __jsx(\"div\", {\n      className: \"contents-pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1755,\n        columnNumber: 23\n      }\n    }, __jsx(Pagination, {\n      current: this.state.currentPage,\n      total: Math.ceil(this.props.total / this.state.pageSize),\n      pageSize: this.state.pageSize,\n      pageSizes: [50, this.props.intl.formatMessage(messages.all)],\n      onChangePage: this.onChangePage,\n      onChangePageSize: this.onChangePageSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1756,\n        columnNumber: 25\n      }\n    })))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1775,\n        columnNumber: 17\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      inner: __jsx(Link, {\n        to: `${path}`,\n        \"aria-label\": this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1779,\n          columnNumber: 23\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1785,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1776,\n        columnNumber: 19\n      }\n    })))) : __jsx(Unauthorized, {\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1799,\n        columnNumber: 11\n      }\n    })) : __jsx(Unauthorized, {\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1803,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\n_defineProperty(Contents, \"propTypes\", {\n  action: PropTypes.string,\n  source: PropTypes.arrayOf(PropTypes.string),\n  searchContent: PropTypes.func.isRequired,\n  cut: PropTypes.func.isRequired,\n  copy: PropTypes.func.isRequired,\n  copyContent: PropTypes.func.isRequired,\n  deleteContent: PropTypes.func.isRequired,\n  moveContent: PropTypes.func.isRequired,\n  orderContent: PropTypes.func.isRequired,\n  sortContent: PropTypes.func.isRequired,\n  updateColumnsContent: PropTypes.func.isRequired,\n  clipboardRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  deleteRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  searchRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    '@type': PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string\n  })),\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    url: PropTypes.string\n  })).isRequired,\n  total: PropTypes.number.isRequired,\n  pathname: PropTypes.string.isRequired\n});\n\n_defineProperty(Contents, \"defaultProps\", {\n  items: [],\n  action: null,\n  source: null,\n  index: {\n    order: _keys(Indexes),\n    values: _mapValues(Indexes, (value, key) => _objectSpread(_objectSpread({}, value), {}, {\n      selected: _indexOf(defaultIndexes, key) !== -1\n    })),\n    selectedCount: defaultIndexes.length + 1\n  }\n});\n\nlet dndContext;\n\nconst DragDropConnector = props => {\n  const {\n    DragDropContext\n  } = props.reactDnd;\n  const HTML5Backend = props.reactDndHtml5Backend.default;\n  const DndConnectedContents = React.useMemo(() => {\n    if (!dndContext) {\n      dndContext = DragDropContext(HTML5Backend);\n    }\n\n    return dndContext(Contents);\n  }, [DragDropContext, HTML5Backend]);\n  return __jsx(DndConnectedContents, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1821,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport const __test__ = compose(injectIntl, injectLazyLibs(['toastify', 'reactDnd']), connect((store, props) => {\n  return {\n    token: store.userSession.token,\n    items: store.search.items,\n    sort: store.content.update.sort,\n    index: store.content.updatecolumns.idx,\n    breadcrumbs: store.breadcrumbs.items,\n    total: store.search.total,\n    searchRequest: {\n      loading: store.search.loading,\n      loaded: store.search.loaded\n    },\n    pathname: props.location.pathname,\n    action: store.clipboard.action,\n    source: store.clipboard.source,\n    clipboardRequest: store.clipboard.request,\n    deleteRequest: store.content.delete,\n    updateRequest: store.content.update,\n    objectActions: store.actions.actions.object,\n    orderRequest: store.content.order\n  };\n}, {\n  searchContent,\n  cut,\n  copy,\n  copyContent,\n  deleteContent,\n  listActions,\n  moveContent,\n  orderContent,\n  sortContent,\n  updateColumnsContent,\n  getContent\n}))(Contents);\nexport default compose(injectIntl, connect((store, props) => {\n  return {\n    token: store.userSession.token,\n    items: store.search.items,\n    sort: store.content.update.sort,\n    index: store.content.updatecolumns.idx,\n    breadcrumbs: store.breadcrumbs.items,\n    total: store.search.total,\n    searchRequest: {\n      loading: store.search.loading,\n      loaded: store.search.loaded\n    },\n    pathname: props.location.pathname,\n    action: store.clipboard.action,\n    source: store.clipboard.source,\n    clipboardRequest: store.clipboard.request,\n    deleteRequest: store.content.delete,\n    updateRequest: store.content.update,\n    objectActions: store.actions.actions.object,\n    orderRequest: store.content.order\n  };\n}, {\n  searchContent,\n  cut,\n  copy,\n  copyContent,\n  deleteContent,\n  listActions,\n  moveContent,\n  orderContent,\n  sortContent,\n  updateColumnsContent,\n  getContent\n}), asyncConnect([{\n  key: 'actions',\n  // Dispatch async/await to make the operation syncronous, otherwise it returns\n  // before the promise is resolved\n  promise: async ({\n    location,\n    store: {\n      dispatch\n    }\n  }) => await dispatch(listActions(getBaseUrl(location.pathname)))\n}]), injectLazyLibs(['toastify', 'reactDnd', 'reactDndHtml5Backend']))(DragDropConnector);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Portal","Link","Button","Confirm","Container","Divider","Dropdown","Menu","Input","Segment","Table","Loader","Dimmer","move","FormattedMessage","defineMessages","injectIntl","asyncConnect","searchContent","cut","copy","copyContent","deleteContent","listActions","moveContent","orderContent","sortContent","updateColumnsContent","getContent","Indexes","defaultIndexes","ContentsBreadcrumbs","ContentsIndexHeader","ContentsItem","ContentsRenameModal","ContentsUploadModal","ContentsWorkflowModal","ContentsTagsModal","ContentsPropertiesModal","Pagination","Popup","Toolbar","Toast","Icon","Unauthorized","Helmet","getBaseUrl","injectLazyLibs","backSVG","cutSVG","deleteSVG","copySVG","tagSVG","renameSVG","semaphoreSVG","uploadSVG","propertiesSVG","pasteSVG","zoomSVG","checkboxUncheckedSVG","checkboxCheckedSVG","checkboxIndeterminateSVG","configurationSVG","sortDownSVG","sortUpSVG","downKeySVG","moreSVG","messages","back","contents","error","delete","deleteConfirm","deleteError","loading","home","filter","messageCopied","messageCut","messageUpdate","messageReorder","messagePasted","messageWorkflowUpdate","paste","properties","rearrangeBy","rename","select","selected","selectColumns","sort","state","tags","upload","success","publicationDate","createdOn","expirationDate","id","uid","reviewState","folder","excludedFromNavigation","objectSize","lastCommentedDate","totalComments","creator","endDate","startDate","all","Contents","constructor","props","onDeselect","bind","onSelect","onSelectAll","onSelectIndex","onSelectNone","onDeleteOk","onDeleteCancel","onUploadOk","onUploadCancel","onRenameOk","onRenameCancel","onTagsOk","onTagsCancel","onPropertiesOk","onPropertiesCancel","onWorkflowOk","onWorkflowCancel","onChangeFilter","onChangePage","onChangePageSize","onOrderIndex","onOrderItem","onSortItems","onMoveToTop","onChangeSelected","onMoveToBottom","workflow","fetchContents","orderTimeout","showDelete","showUpload","showRename","showTags","showProperties","showWorkflow","itemsToDelete","items","currentPage","pageSize","index","order","values","value","key","selectedCount","length","sort_on","on","sort_order","isClient","filterTimeout","componentDidMount","setState","UNSAFE_componentWillReceiveProps","nextProps","clipboardRequest","loaded","deleteRequest","updateRequest","pathname","toastify","toast","intl","formatMessage","searchRequest","orderRequest","event","item","newIndex","indexValue","indexKey","self","clearTimeout","setTimeout","stopPropagation","filteredItems","selectedItem","title","toLowerCase","includes","selectedMenuFilter","delta","itemIndex","backend","replace","split","getFieldById","field","metadata_fields","b_size","SearchableText","b_start","action","source","render","path","folderContentsAction","objectActions","token","url","subjects","breadcrumbs","label","defaultMessage","className","count","e","preventDefault","Math","ceil","map","type","total","document","getElementById","staticContext","string","arrayOf","func","isRequired","shape","bool","description","number","dndContext","DragDropConnector","DragDropContext","reactDnd","HTML5Backend","reactDndHtml5Backend","default","DndConnectedContents","useMemo","__test__","store","userSession","search","content","update","updatecolumns","idx","location","clipboard","request","actions","object","promise","dispatch"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Contents/Contents.jsx"],"sourcesContent":["/**\n * Contents component.\n * @module components/manage/Contents/Contents\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Confirm,\n  Container,\n  Divider,\n  Dropdown,\n  Menu,\n  Input,\n  Segment,\n  Table,\n  Loader,\n  Dimmer,\n} from 'semantic-ui-react';\nimport {\n  concat,\n  filter,\n  find,\n  indexOf,\n  keys,\n  map,\n  mapValues,\n  pull,\n} from 'lodash';\nimport move from 'lodash-move';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\n\nimport {\n  searchContent,\n  cut,\n  copy,\n  copyContent,\n  deleteContent,\n  listActions,\n  moveContent,\n  orderContent,\n  sortContent,\n  updateColumnsContent,\n  getContent,\n} from '@plone/volto/actions';\nimport Indexes, { defaultIndexes } from '@plone/volto/constants/Indexes';\nimport {\n  ContentsBreadcrumbs,\n  ContentsIndexHeader,\n  ContentsItem,\n  ContentsRenameModal,\n  ContentsUploadModal,\n  ContentsWorkflowModal,\n  ContentsTagsModal,\n  ContentsPropertiesModal,\n  Pagination,\n  Popup,\n  Toolbar,\n  Toast,\n  Icon,\n  Unauthorized,\n} from '@plone/volto/components';\n\nimport { Helmet, getBaseUrl } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport tagSVG from '@plone/volto/icons/tag.svg';\nimport renameSVG from '@plone/volto/icons/rename.svg';\nimport semaphoreSVG from '@plone/volto/icons/semaphore.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nimport propertiesSVG from '@plone/volto/icons/properties.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport checkboxIndeterminateSVG from '@plone/volto/icons/checkbox-indeterminate.svg';\nimport configurationSVG from '@plone/volto/icons/configuration-app.svg';\nimport sortDownSVG from '@plone/volto/icons/sort-down.svg';\nimport sortUpSVG from '@plone/volto/icons/sort-up.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  contents: {\n    id: 'Contents',\n    defaultMessage: 'Contents',\n  },\n  copy: {\n    id: 'Copy',\n    defaultMessage: 'Copy',\n  },\n  cut: {\n    id: 'Cut',\n    defaultMessage: 'Cut',\n  },\n  error: {\n    id: \"You can't paste this content here\",\n    defaultMessage: \"You can't paste this content here\",\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  deleteConfirm: {\n    id: 'Do you really want to delete the following items?',\n    defaultMessage: 'Do you really want to delete the following items?',\n  },\n  deleteError: {\n    id: 'The item could not be deleted.',\n    defaultMessage: 'The item could not be deleted.',\n  },\n  loading: {\n    id: 'loading',\n    defaultMessage: 'Loading',\n  },\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  filter: {\n    id: 'Filter…',\n    defaultMessage: 'Filter…',\n  },\n  messageCopied: {\n    id: 'Item(s) copied.',\n    defaultMessage: 'Item(s) copied.',\n  },\n  messageCut: {\n    id: 'Item(s) cut.',\n    defaultMessage: 'Item(s) cut.',\n  },\n  messageUpdate: {\n    id: 'Item(s) has been updated.',\n    defaultMessage: 'Item(s) has been updated.',\n  },\n  messageReorder: {\n    id: 'Item succesfully moved.',\n    defaultMessage: 'Item succesfully moved.',\n  },\n  messagePasted: {\n    id: 'Item(s) pasted.',\n    defaultMessage: 'Item(s) pasted.',\n  },\n  messageWorkflowUpdate: {\n    id: 'Item(s) state has been updated.',\n    defaultMessage: 'Item(s) state has been updated.',\n  },\n  paste: {\n    id: 'Paste',\n    defaultMessage: 'Paste',\n  },\n  properties: {\n    id: 'Properties',\n    defaultMessage: 'Properties',\n  },\n  rearrangeBy: {\n    id: 'Rearrange items by…',\n    defaultMessage: 'Rearrange items by…',\n  },\n  rename: {\n    id: 'Rename',\n    defaultMessage: 'Rename',\n  },\n  select: {\n    id: 'Select…',\n    defaultMessage: 'Select…',\n  },\n  selected: {\n    id: '{count} selected',\n    defaultMessage: '{count} selected',\n  },\n  selectColumns: {\n    id: 'Select columns to show',\n    defaultMessage: 'Select columns to show',\n  },\n  sort: {\n    id: 'sort',\n    defaultMessage: 'sort',\n  },\n  state: {\n    id: 'State',\n    defaultMessage: 'State',\n  },\n  tags: {\n    id: 'Tags',\n    defaultMessage: 'Tags',\n  },\n  upload: {\n    id: 'Upload',\n    defaultMessage: 'Upload',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  publicationDate: {\n    id: 'Publication date',\n    defaultMessage: 'Publication date',\n  },\n  createdOn: {\n    id: 'Created on',\n    defaultMessage: 'Created on',\n  },\n  expirationDate: {\n    id: 'Expiration date',\n    defaultMessage: 'Expiration date',\n  },\n  id: {\n    id: 'ID',\n    defaultMessage: 'ID',\n  },\n  uid: {\n    id: 'UID',\n    defaultMessage: 'UID',\n  },\n  reviewState: {\n    id: 'Review state',\n    defaultMessage: 'Review state',\n  },\n  folder: {\n    id: 'Folder',\n    defaultMessage: 'Folder',\n  },\n  excludedFromNavigation: {\n    id: 'Excluded from navigation',\n    defaultMessage: 'Excluded from navigation',\n  },\n  objectSize: {\n    id: 'Object Size',\n    defaultMessage: 'Object Size',\n  },\n  lastCommentedDate: {\n    id: 'Last comment date',\n    defaultMessage: 'Last comment date',\n  },\n  totalComments: {\n    id: 'Total comments',\n    defaultMessage: 'Total comments',\n  },\n  creator: {\n    id: 'Creator',\n    defaultMessage: 'Creator',\n  },\n  endDate: {\n    id: 'End Date',\n    defaultMessage: 'End Date',\n  },\n  startDate: {\n    id: 'Start Date',\n    defaultMessage: 'Start Date',\n  },\n  all: {\n    id: 'All',\n    defaultMessage: 'All',\n  },\n});\n\n/**\n * Contents class.\n * @class Contents\n * @extends Component\n */\nclass Contents extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    action: PropTypes.string,\n    source: PropTypes.arrayOf(PropTypes.string),\n    searchContent: PropTypes.func.isRequired,\n    cut: PropTypes.func.isRequired,\n    copy: PropTypes.func.isRequired,\n    copyContent: PropTypes.func.isRequired,\n    deleteContent: PropTypes.func.isRequired,\n    moveContent: PropTypes.func.isRequired,\n    orderContent: PropTypes.func.isRequired,\n    sortContent: PropTypes.func.isRequired,\n    updateColumnsContent: PropTypes.func.isRequired,\n    clipboardRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    searchRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        title: PropTypes.string,\n        description: PropTypes.string,\n      }),\n    ),\n    breadcrumbs: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    total: PropTypes.number.isRequired,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    items: [],\n    action: null,\n    source: null,\n    index: {\n      order: keys(Indexes),\n      values: mapValues(Indexes, (value, key) => ({\n        ...value,\n        selected: indexOf(defaultIndexes, key) !== -1,\n      })),\n      selectedCount: defaultIndexes.length + 1,\n    },\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onDeselect = this.onDeselect.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onSelectAll = this.onSelectAll.bind(this);\n    this.onSelectIndex = this.onSelectIndex.bind(this);\n    this.onSelectNone = this.onSelectNone.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onUploadOk = this.onUploadOk.bind(this);\n    this.onUploadCancel = this.onUploadCancel.bind(this);\n    this.onRenameOk = this.onRenameOk.bind(this);\n    this.onRenameCancel = this.onRenameCancel.bind(this);\n    this.onTagsOk = this.onTagsOk.bind(this);\n    this.onTagsCancel = this.onTagsCancel.bind(this);\n    this.onPropertiesOk = this.onPropertiesOk.bind(this);\n    this.onPropertiesCancel = this.onPropertiesCancel.bind(this);\n    this.onWorkflowOk = this.onWorkflowOk.bind(this);\n    this.onWorkflowCancel = this.onWorkflowCancel.bind(this);\n    this.onChangeFilter = this.onChangeFilter.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangePageSize = this.onChangePageSize.bind(this);\n    this.onOrderIndex = this.onOrderIndex.bind(this);\n    this.onOrderItem = this.onOrderItem.bind(this);\n    this.onSortItems = this.onSortItems.bind(this);\n    this.onMoveToTop = this.onMoveToTop.bind(this);\n    this.onChangeSelected = this.onChangeSelected.bind(this);\n    this.onMoveToBottom = this.onMoveToBottom.bind(this);\n    this.cut = this.cut.bind(this);\n    this.copy = this.copy.bind(this);\n    this.delete = this.delete.bind(this);\n    this.upload = this.upload.bind(this);\n    this.rename = this.rename.bind(this);\n    this.tags = this.tags.bind(this);\n    this.properties = this.properties.bind(this);\n    this.workflow = this.workflow.bind(this);\n    this.paste = this.paste.bind(this);\n    this.fetchContents = this.fetchContents.bind(this);\n    this.orderTimeout = null;\n    this.state = {\n      selected: [],\n      showDelete: false,\n      showUpload: false,\n      showRename: false,\n      showTags: false,\n      showProperties: false,\n      showWorkflow: false,\n      itemsToDelete: [],\n      items: this.props.items,\n      filter: '',\n      currentPage: 0,\n      pageSize: 50,\n      index: this.props.index || {\n        order: keys(Indexes),\n        values: mapValues(Indexes, (value, key) => ({\n          ...value,\n          selected: indexOf(defaultIndexes, key) !== -1,\n        })),\n        selectedCount: defaultIndexes.length + 1,\n      },\n      sort_on: this.props.sort?.on || 'getObjPositionInParent',\n      sort_order: this.props.sort?.order || 'ascending',\n      isClient: false,\n    };\n    this.filterTimeout = null;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.fetchContents();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      (this.props.clipboardRequest.loading &&\n        nextProps.clipboardRequest.loaded) ||\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) ||\n      (this.props.updateRequest.loading && nextProps.updateRequest.loaded)\n    ) {\n      this.fetchContents(nextProps.pathname);\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageUpdate)}\n        />,\n      );\n    }\n    if (this.props.pathname !== nextProps.pathname) {\n      // Refetching content to sync the current object in the toolbar\n      this.props.getContent(getBaseUrl(nextProps.pathname));\n      this.setState(\n        {\n          currentPage: 0,\n        },\n        () =>\n          this.setState({ filter: '' }, () =>\n            this.fetchContents(nextProps.pathname),\n          ),\n      );\n    }\n    if (this.props.searchRequest.loading && nextProps.searchRequest.loaded) {\n      this.setState({\n        items: nextProps.items,\n      });\n    }\n    if (\n      this.props.clipboardRequest.loading &&\n      nextProps.clipboardRequest.error\n    ) {\n      this.props.toastify.toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={this.props.intl.formatMessage(messages.error)}\n        />,\n      );\n    }\n\n    if (\n      this.props.clipboardRequest.loading &&\n      nextProps.clipboardRequest.loaded\n    ) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messagePasted)}\n        />,\n      );\n    }\n\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.error) {\n      this.props.toastify.toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.deleteError)}\n          content={this.props.intl.formatMessage(messages.deleteError)}\n        />,\n      );\n    }\n\n    if (this.props.orderRequest.loading && nextProps.orderRequest.loaded) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageReorder)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * On deselect handler\n   * @method onDeselect\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onDeselect(event, { value }) {\n    this.setState({\n      selected: pull(this.state.selected, value),\n    });\n  }\n\n  /**\n   * On select handler\n   * @method onSelect\n   * @param {object} event Event object\n   * @returns {undefined}\n   */\n  onSelect(event, id) {\n    if (indexOf(this.state.selected, id) === -1) {\n      this.setState({\n        selected: concat(this.state.selected, id),\n      });\n    } else {\n      this.setState({\n        selected: pull(this.state.selected, id),\n      });\n    }\n  }\n\n  /**\n   * On select all handler\n   * @method onSelectAll\n   * @returns {undefined}\n   */\n  onSelectAll() {\n    this.setState({\n      selected: map(this.state.items, (item) => item['@id']),\n    });\n  }\n\n  /**\n   * On select none handler\n   * @method onSelectNone\n   * @returns {undefined}\n   */\n  onSelectNone() {\n    this.setState({\n      selected: [],\n    });\n  }\n\n  /**\n   * On select index\n   * @method onSelectIndex\n   * @param {object} event Event object.\n   * @param {string} value Index value.\n   * @returns {undefined}\n   */\n  onSelectIndex(event, { value }) {\n    let newIndex = {\n      ...this.state.index,\n      selectedCount:\n        this.state.index.selectedCount +\n        (this.state.index.values[value].selected ? -1 : 1),\n      values: mapValues(this.state.index.values, (indexValue, indexKey) => ({\n        ...indexValue,\n        selected:\n          indexKey === value ? !indexValue.selected : indexValue.selected,\n      })),\n    };\n    this.setState({\n      index: newIndex,\n    });\n    this.props.updateColumnsContent(getBaseUrl(this.props.pathname), newIndex);\n  }\n\n  /**\n   * On change filter\n   * @method onChangeFilter\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeFilter(event, { value }) {\n    const self = this;\n    clearTimeout(self.filterTimeout);\n    this.setState(\n      {\n        filter: value,\n      },\n      () => {\n        self.filterTimeout = setTimeout(() => {\n          self.fetchContents();\n        }, 200);\n      },\n    );\n  }\n\n  /**\n   * On change selected values (Filter)\n   * @method onChangeSelected\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeSelected(event, { value }) {\n    event.stopPropagation();\n    const { items, selected } = this.state;\n\n    const filteredItems = filter(selected, (selectedItem) =>\n      find(items, (item) => item['@id'] === selectedItem)\n        .title.toLowerCase()\n        .includes(value.toLowerCase()),\n    );\n\n    this.setState({\n      filteredItems,\n      selectedMenuFilter: value,\n    });\n  }\n\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n  onChangePage(event, { value }) {\n    this.setState(\n      {\n        currentPage: value,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On change page size\n   * @method onChangePageSize\n   * @param {object} event Event object.\n   * @param {string} value Page size value.\n   * @returns {undefined}\n   */\n  onChangePageSize(event, { value }) {\n    this.setState(\n      {\n        pageSize: value,\n        currentPage: 0,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On order index\n   * @method onOrderIndex\n   * @param {number} index Index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderIndex(index, delta) {\n    this.setState({\n      index: {\n        ...this.state.index,\n        order: move(this.state.index.order, index, index + delta),\n      },\n    });\n    this.props.updateColumnsContent(\n      getBaseUrl(this.props.pathname),\n      this.state.index,\n    );\n  }\n\n  /**\n   * On order item\n   * @method onOrderItem\n   * @param {string} id Item id\n   * @param {number} itemIndex Item index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderItem(id, itemIndex, delta, backend) {\n    if (backend) {\n      this.props.orderContent(\n        getBaseUrl(this.props.pathname),\n        id.replace(/^.*\\//, ''),\n        delta,\n      );\n    } else {\n      this.setState({\n        items: move(this.state.items, itemIndex, itemIndex + delta),\n      });\n    }\n  }\n\n  /**\n   * On sort items\n   * @method onSortItems\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onSortItems(event, { value }) {\n    const values = value.split('|');\n    this.setState({\n      sort_on: values[0],\n      sort_order: values[1],\n    });\n    this.props.sortContent(\n      getBaseUrl(this.props.pathname),\n      values[0],\n      values[1],\n    );\n  }\n\n  /**\n   * On move to top\n   * @method onMoveToTop\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToTop(event, { value }) {\n    const id = this.state.items[value]['@id'];\n    value = this.state.currentPage * this.state.pageSize + value;\n    this.props.orderContent(\n      getBaseUrl(this.props.pathname),\n      id.replace(/^.*\\//, ''),\n      -value,\n    );\n    this.setState(\n      {\n        currentPage: 0,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On move to bottom\n   * @method onMoveToBottom\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToBottom(event, { value }) {\n    this.onOrderItem(\n      this.state.items[value]['@id'],\n      value,\n      this.state.items.length - 1 - value,\n      false,\n    );\n    this.onOrderItem(\n      this.state.items[value]['@id'],\n      value,\n      this.state.items.length - 1 - value,\n      true,\n    );\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    this.props.deleteContent(this.state.itemsToDelete);\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n      selected: [],\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n    });\n  }\n\n  /**\n   * On upload ok\n   * @method onUploadOk\n   * @returns {undefined}\n   */\n  onUploadOk() {\n    this.fetchContents();\n    this.setState({\n      showUpload: false,\n    });\n  }\n\n  /**\n   * On upload cancel\n   * @method onUploadCancel\n   * @returns {undefined}\n   */\n  onUploadCancel() {\n    this.setState({\n      showUpload: false,\n    });\n  }\n\n  /**\n   * On rename ok\n   * @method onRenameOk\n   * @returns {undefined}\n   */\n  onRenameOk() {\n    this.setState({\n      showRename: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On rename cancel\n   * @method onRenameCancel\n   * @returns {undefined}\n   */\n  onRenameCancel() {\n    this.setState({\n      showRename: false,\n    });\n  }\n\n  /**\n   * On tags ok\n   * @method onTagsOk\n   * @returns {undefined}\n   */\n  onTagsOk() {\n    this.setState({\n      showTags: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On tags cancel\n   * @method onTagsCancel\n   * @returns {undefined}\n   */\n  onTagsCancel() {\n    this.setState({\n      showTags: false,\n    });\n  }\n\n  /**\n   * On properties ok\n   * @method onPropertiesOk\n   * @returns {undefined}\n   */\n  onPropertiesOk() {\n    this.setState({\n      showProperties: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On properties cancel\n   * @method onPropertiesCancel\n   * @returns {undefined}\n   */\n  onPropertiesCancel() {\n    this.setState({\n      showProperties: false,\n    });\n  }\n\n  /**\n   * On workflow ok\n   * @method onWorkflowOk\n   * @returns {undefined}\n   */\n  onWorkflowOk() {\n    this.fetchContents();\n    this.setState({\n      showWorkflow: false,\n      selected: [],\n    });\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageWorkflowUpdate)}\n      />,\n    );\n  }\n\n  /**\n   * On workflow cancel\n   * @method onWorkflowCancel\n   * @returns {undefined}\n   */\n  onWorkflowCancel() {\n    this.setState({\n      showWorkflow: false,\n    });\n  }\n\n  /**\n   * Get field by id\n   * @method getFieldById\n   * @param {string} id Id of object\n   * @param {string} field Field of object\n   * @returns {string} Field of object\n   */\n  getFieldById(id, field) {\n    const item = find(this.state.items, { '@id': id });\n    return item ? item[field] : '';\n  }\n\n  /**\n   * Fetch contents handler\n   * @method fetchContents\n   * @param {string} pathname Pathname to fetch contents.\n   * @returns {undefined}\n   */\n  fetchContents(pathname) {\n    if (this.state.pageSize === this.props.intl.formatMessage(messages.all)) {\n      //'All'\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), {\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        b_size: 100000000,\n        ...(this.state.filter && { SearchableText: `${this.state.filter}*` }),\n      });\n    } else {\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), {\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        ...(this.state.filter && { SearchableText: `${this.state.filter}*` }),\n        b_size: this.state.pageSize,\n        b_start: this.state.currentPage * this.state.pageSize,\n      });\n    }\n  }\n\n  /**\n   * Cut handler\n   * @method cut\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  cut(event, { value }) {\n    this.props.cut(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCut)}\n      />,\n    );\n  }\n\n  /**\n   * Copy handler\n   * @method copy\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  copy(event, { value }) {\n    this.props.copy(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCopied)}\n      />,\n    );\n  }\n\n  /**\n   * Delete handler\n   * @method delete\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  delete(event, { value }) {\n    this.setState({\n      showDelete: true,\n      itemsToDelete: value ? [value] : this.state.selected,\n    });\n  }\n\n  /**\n   * Upload handler\n   * @method upload\n   * @returns {undefined}\n   */\n  upload() {\n    this.setState({\n      showUpload: true,\n    });\n  }\n\n  /**\n   * Rename handler\n   * @method rename\n   * @returns {undefined}\n   */\n  rename() {\n    this.setState({\n      showRename: true,\n    });\n  }\n\n  /**\n   * Tags handler\n   * @method tags\n   * @returns {undefined}\n   */\n  tags() {\n    this.setState({\n      showTags: true,\n    });\n  }\n\n  /**\n   * Properties handler\n   * @method properties\n   * @returns {undefined}\n   */\n  properties() {\n    this.setState({\n      showProperties: true,\n    });\n  }\n\n  /**\n   * Workflow handler\n   * @method workflow\n   * @returns {undefined}\n   */\n  workflow() {\n    this.setState({\n      showWorkflow: true,\n    });\n  }\n\n  /**\n   * Paste handler\n   * @method paste\n   * @returns {undefined}\n   */\n  paste() {\n    if (this.props.action === 'copy') {\n      this.props.copyContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    if (this.props.action === 'cut') {\n      this.props.moveContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const selected = this.state.selected.length > 0;\n    const filteredItems = this.state.filteredItems || this.state.selected;\n    const path = getBaseUrl(this.props.pathname);\n    const folderContentsAction = find(this.props.objectActions, {\n      id: 'folderContents',\n    });\n    const loading =\n      (this.props.clipboardRequest?.loading &&\n        !this.props.clipboardRequest?.error) ||\n      (this.props.deleteRequest?.loading && !this.props.deleteRequest?.error) ||\n      (this.props.updateRequest?.loading && !this.props.updateRequest?.error) ||\n      (this.props.orderRequest?.loading && !this.props.orderRequest?.error) ||\n      (this.props.searchRequest?.loading && !this.props.searchRequest?.error);\n\n    return this.props.token && this.props.objectActions?.length > 0 ? (\n      <>\n        {folderContentsAction ? (\n          <Container id=\"page-contents\" className=\"folder-contents\">\n            <Dimmer.Dimmable as=\"div\" blurring dimmed={loading}>\n              <Dimmer active={loading} inverted>\n                <Loader indeterminate size=\"massive\">\n                  {this.props.intl.formatMessage(messages.loading)}\n                </Loader>\n              </Dimmer>\n\n              <Helmet\n                title={this.props.intl.formatMessage(messages.contents)}\n              />\n              <div className=\"container\">\n                <article id=\"content\">\n                  <Confirm\n                    open={this.state.showDelete}\n                    header={this.props.intl.formatMessage(\n                      messages.deleteConfirm,\n                    )}\n                    content={\n                      <div className=\"content\">\n                        <ul className=\"content\">\n                          {map(this.state.itemsToDelete, (item) => (\n                            <li key={item}>\n                              {this.getFieldById(item, 'title')}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    }\n                    onCancel={this.onDeleteCancel}\n                    onConfirm={this.onDeleteOk}\n                    size=\"mini\"\n                  />\n                  <ContentsUploadModal\n                    open={this.state.showUpload}\n                    onCancel={this.onUploadCancel}\n                    onOk={this.onUploadOk}\n                    pathname={getBaseUrl(this.props.pathname)}\n                  />\n                  <ContentsRenameModal\n                    open={this.state.showRename}\n                    onCancel={this.onRenameCancel}\n                    onOk={this.onRenameOk}\n                    items={map(this.state.selected, (item) => ({\n                      url: item,\n                      title: this.getFieldById(item, 'title'),\n                      id: this.getFieldById(item, 'id'),\n                    }))}\n                  />\n                  <ContentsTagsModal\n                    open={this.state.showTags}\n                    onCancel={this.onTagsCancel}\n                    onOk={this.onTagsOk}\n                    items={map(this.state.selected, (item) => ({\n                      url: item,\n                      subjects: this.getFieldById(item, 'Subject'),\n                    }))}\n                  />\n                  <ContentsPropertiesModal\n                    open={this.state.showProperties}\n                    onCancel={this.onPropertiesCancel}\n                    onOk={this.onPropertiesOk}\n                    items={this.state.selected}\n                  />\n                  {this.state.showWorkflow && (\n                    <ContentsWorkflowModal\n                      open={this.state.showWorkflow}\n                      onCancel={this.onWorkflowCancel}\n                      onOk={this.onWorkflowOk}\n                      items={this.state.selected}\n                    />\n                  )}\n                  <section id=\"content-core\">\n                    <Segment.Group raised>\n                      <Menu secondary attached className=\"top-menu\">\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.upload}\n                                className=\"upload\"\n                              >\n                                <Icon\n                                  name={uploadSVG}\n                                  color=\"#007eb1\"\n                                  size=\"24px\"\n                                  className=\"upload\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.upload,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.rename}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={renameSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"rename\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.rename,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.workflow}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={semaphoreSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"semaphore\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.state,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.tags}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={tagSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"tag\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.tags,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.properties}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={propertiesSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"properties\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.properties,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.cut}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={cutSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"cut\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.cut,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.copy}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={copySVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"copy\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.copy,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.paste}\n                                disabled={!this.props.action}\n                              >\n                                <Icon\n                                  name={pasteSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"paste\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.paste,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.delete}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={deleteSVG}\n                                  color={selected ? '#e40166' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"delete\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.delete,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu\n                          position=\"right\"\n                          className=\"top-menu-searchbox\"\n                        >\n                          <div className=\"ui right aligned category search item\">\n                            <Input\n                              type=\"text\"\n                              transparent\n                              placeholder={this.props.intl.formatMessage(\n                                messages.filter,\n                              )}\n                              size=\"small\"\n                              value={this.state.filter}\n                              onChange={this.onChangeFilter}\n                            />\n                            <Icon\n                              name={zoomSVG}\n                              size=\"30px\"\n                              color=\"#007eb1\"\n                              className=\"zoom\"\n                            />\n                            <div className=\"results\" />\n                          </div>\n                        </Menu.Menu>\n                      </Menu>\n                      <Segment\n                        secondary\n                        attached\n                        className=\"contents-breadcrumbs\"\n                      >\n                        <ContentsBreadcrumbs items={this.props.breadcrumbs} />\n                        <Dropdown\n                          item\n                          upward={false}\n                          icon={\n                            <Icon name={moreSVG} size=\"24px\" color=\"#826a6a\" />\n                          }\n                          className=\"right floating selectIndex\"\n                        >\n                          <Dropdown.Menu className=\"left\">\n                            <Dropdown.Header\n                              content={this.props.intl.formatMessage(\n                                messages.selectColumns,\n                              )}\n                            />\n                            <Dropdown.Menu scrolling>\n                              {map(\n                                filter(\n                                  this.state.index.order,\n                                  (index) => index !== 'sortable_title',\n                                ),\n                                (index) => (\n                                  <Dropdown.Item\n                                    key={index}\n                                    value={index}\n                                    onClick={this.onSelectIndex}\n                                    className=\"iconAlign\"\n                                  >\n                                    {this.state.index.values[index].selected ? (\n                                      <Icon\n                                        name={checkboxCheckedSVG}\n                                        size=\"24px\"\n                                        color=\"#007eb1\"\n                                        className={\n                                          this.state.index.values[index].label\n                                        }\n                                      />\n                                    ) : (\n                                      <Icon\n                                        name={checkboxUncheckedSVG}\n                                        className={\n                                          this.state.index.values[index].label\n                                        }\n                                        size=\"24px\"\n                                      />\n                                    )}\n                                    <span>\n                                      {' '}\n                                      {this.props.intl.formatMessage({\n                                        id: this.state.index.values[index]\n                                          .label,\n                                        defaultMessage: this.state.index.values[\n                                          index\n                                        ].label,\n                                      })}\n                                    </span>\n                                  </Dropdown.Item>\n                                ),\n                              )}\n                            </Dropdown.Menu>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </Segment>\n                      <div className=\"contents-table-wrapper\">\n                        <Table selectable compact singleLine attached>\n                          <Table.Header>\n                            <Table.Row>\n                              <Table.HeaderCell>\n                                <Popup\n                                  menu={true}\n                                  position=\"bottom left\"\n                                  flowing={true}\n                                  basic={true}\n                                  on=\"click\"\n                                  popper={{\n                                    className: 'dropdown-popup',\n                                  }}\n                                  trigger={\n                                    <Icon\n                                      name={configurationSVG}\n                                      size=\"24px\"\n                                      color=\"#826a6a\"\n                                      className=\"dropdown-popup-trigger configuration-svg\"\n                                    />\n                                  }\n                                >\n                                  <Menu vertical borderless fluid>\n                                    <Menu.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.rearrangeBy,\n                                      )}\n                                    />\n                                    {map(\n                                      [\n                                        'id',\n                                        'sortable_title',\n                                        'EffectiveDate',\n                                        'CreationDate',\n                                        'ModificationDate',\n                                        'portal_type',\n                                      ],\n                                      (index) => (\n                                        <Dropdown\n                                          key={index}\n                                          item\n                                          simple\n                                          className={`sort_${index} icon-align`}\n                                          icon={\n                                            <Icon\n                                              name={downKeySVG}\n                                              size=\"24px\"\n                                              className=\"left\"\n                                            />\n                                          }\n                                          text={this.props.intl.formatMessage({\n                                            id: Indexes[index].label,\n                                          })}\n                                        >\n                                          <Dropdown.Menu>\n                                            <Dropdown.Item\n                                              onClick={this.onSortItems}\n                                              value={`${Indexes[index].sort_on}|ascending`}\n                                              className={`sort_${Indexes[index].sort_on}_ascending icon-align`}\n                                            >\n                                              <Icon\n                                                name={sortDownSVG}\n                                                size=\"24px\"\n                                              />{' '}\n                                              <FormattedMessage\n                                                id=\"Ascending\"\n                                                defaultMessage=\"Ascending\"\n                                              />\n                                            </Dropdown.Item>\n                                            <Dropdown.Item\n                                              onClick={this.onSortItems}\n                                              value={`${Indexes[index].sort_on}|descending`}\n                                              className={`sort_${Indexes[index].sort_on}_descending icon-align`}\n                                            >\n                                              <Icon\n                                                name={sortUpSVG}\n                                                size=\"24px\"\n                                              />{' '}\n                                              <FormattedMessage\n                                                id=\"Descending\"\n                                                defaultMessage=\"Descending\"\n                                              />\n                                            </Dropdown.Item>\n                                          </Dropdown.Menu>\n                                        </Dropdown>\n                                      ),\n                                    )}\n                                  </Menu>\n                                </Popup>\n                              </Table.HeaderCell>\n                              <Table.HeaderCell>\n                                <Popup\n                                  menu={true}\n                                  position=\"bottom left\"\n                                  flowing={true}\n                                  basic={true}\n                                  on=\"click\"\n                                  popper={{\n                                    className: 'dropdown-popup',\n                                  }}\n                                  trigger={\n                                    <Icon\n                                      name={\n                                        this.state.selected.length === 0\n                                          ? checkboxUncheckedSVG\n                                          : this.state.selected.length ===\n                                            this.state.items.length\n                                          ? checkboxCheckedSVG\n                                          : checkboxIndeterminateSVG\n                                      }\n                                      color={\n                                        this.state.selected.length > 0\n                                          ? '#007eb1'\n                                          : '#826a6a'\n                                      }\n                                      className=\"dropdown-popup-trigger\"\n                                      size=\"24px\"\n                                    />\n                                  }\n                                >\n                                  <Menu vertical borderless fluid>\n                                    <Menu.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.select,\n                                      )}\n                                    />\n                                    <Menu.Item onClick={this.onSelectAll}>\n                                      <Icon\n                                        name={checkboxCheckedSVG}\n                                        color=\"#007eb1\"\n                                        size=\"24px\"\n                                      />{' '}\n                                      <FormattedMessage\n                                        id=\"All\"\n                                        defaultMessage=\"All\"\n                                      />\n                                    </Menu.Item>\n                                    <Menu.Item onClick={this.onSelectNone}>\n                                      <Icon\n                                        name={checkboxUncheckedSVG}\n                                        size=\"24px\"\n                                      />{' '}\n                                      <FormattedMessage\n                                        id=\"None\"\n                                        defaultMessage=\"None\"\n                                      />\n                                    </Menu.Item>\n                                    <Divider />\n                                    <Menu.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.selected,\n                                        { count: this.state.selected.length },\n                                      )}\n                                    />\n                                    <Input\n                                      icon={<Icon name={zoomSVG} size=\"24px\" />}\n                                      iconPosition=\"left\"\n                                      className=\"item search\"\n                                      placeholder={this.props.intl.formatMessage(\n                                        messages.filter,\n                                      )}\n                                      value={\n                                        this.state.selectedMenuFilter || ''\n                                      }\n                                      onChange={this.onChangeSelected}\n                                      onClick={(e) => {\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                      }}\n                                    />\n                                    <Menu.Menu scrolling>\n                                      {map(filteredItems, (item) => (\n                                        <Menu.Item\n                                          key={item}\n                                          value={item}\n                                          onClick={this.onDeselect}\n                                        >\n                                          <Icon\n                                            name={deleteSVG}\n                                            color=\"#e40166\"\n                                            size=\"24px\"\n                                          />{' '}\n                                          {this.getFieldById(item, 'title')}\n                                        </Menu.Item>\n                                      ))}\n                                    </Menu.Menu>\n                                  </Menu>\n                                </Popup>\n                              </Table.HeaderCell>\n                              <Table.HeaderCell\n                                width={Math.ceil(\n                                  16 / this.state.index.selectedCount,\n                                )}\n                              >\n                                <FormattedMessage\n                                  id=\"Title\"\n                                  defaultMessage=\"Title\"\n                                />\n                              </Table.HeaderCell>\n                              {map(\n                                this.state.index.order,\n                                (index, order) =>\n                                  this.state.index.values[index].selected && (\n                                    <ContentsIndexHeader\n                                      key={index}\n                                      width={Math.ceil(\n                                        16 / this.state.index.selectedCount,\n                                      )}\n                                      label={\n                                        this.state.index.values[index].label\n                                      }\n                                      order={order}\n                                      onOrderIndex={this.onOrderIndex}\n                                    />\n                                  ),\n                              )}\n                              <Table.HeaderCell textAlign=\"right\">\n                                <FormattedMessage\n                                  id=\"Actions\"\n                                  defaultMessage=\"Actions\"\n                                />\n                              </Table.HeaderCell>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                            {this.state.items.map((item, order) => (\n                              <ContentsItem\n                                key={item['@id']}\n                                item={item}\n                                order={order}\n                                selected={\n                                  indexOf(this.state.selected, item['@id']) !==\n                                  -1\n                                }\n                                onClick={this.onSelect}\n                                indexes={filter(\n                                  map(this.state.index.order, (index) => ({\n                                    id: index,\n                                    type: this.state.index.values[index].type,\n                                  })),\n                                  (index) =>\n                                    this.state.index.values[index.id].selected,\n                                )}\n                                onCut={this.cut}\n                                onCopy={this.copy}\n                                onDelete={this.delete}\n                                onOrderItem={this.onOrderItem}\n                                onMoveToTop={this.onMoveToTop}\n                                onMoveToBottom={this.onMoveToBottom}\n                              />\n                            ))}\n                          </Table.Body>\n                        </Table>\n                      </div>\n\n                      <div className=\"contents-pagination\">\n                        <Pagination\n                          current={this.state.currentPage}\n                          total={Math.ceil(\n                            this.props.total / this.state.pageSize,\n                          )}\n                          pageSize={this.state.pageSize}\n                          pageSizes={[\n                            50,\n                            this.props.intl.formatMessage(messages.all),\n                          ]}\n                          onChangePage={this.onChangePage}\n                          onChangePageSize={this.onChangePageSize}\n                        />\n                      </div>\n                    </Segment.Group>\n                  </section>\n                </article>\n              </div>\n              {this.state.isClient && (\n                <Portal node={document.getElementById('toolbar')}>\n                  <Toolbar\n                    pathname={this.props.pathname}\n                    inner={\n                      <Link\n                        to={`${path}`}\n                        aria-label={this.props.intl.formatMessage(\n                          messages.back,\n                        )}\n                      >\n                        <Icon\n                          name={backSVG}\n                          className=\"contents circled\"\n                          size=\"30px\"\n                          title={this.props.intl.formatMessage(messages.back)}\n                        />\n                      </Link>\n                    }\n                  />\n                </Portal>\n              )}\n            </Dimmer.Dimmable>\n          </Container>\n        ) : (\n          <Unauthorized staticContext={this.props.staticContext} />\n        )}\n      </>\n    ) : (\n      <Unauthorized staticContext={this.props.staticContext} />\n    );\n  }\n}\n\nlet dndContext;\n\nconst DragDropConnector = (props) => {\n  const { DragDropContext } = props.reactDnd;\n  const HTML5Backend = props.reactDndHtml5Backend.default;\n\n  const DndConnectedContents = React.useMemo(() => {\n    if (!dndContext) {\n      dndContext = DragDropContext(HTML5Backend);\n    }\n    return dndContext(Contents);\n  }, [DragDropContext, HTML5Backend]);\n\n  return <DndConnectedContents {...props} />;\n};\n\nexport const __test__ = compose(\n  injectIntl,\n  injectLazyLibs(['toastify', 'reactDnd']),\n  connect(\n    (store, props) => {\n      return {\n        token: store.userSession.token,\n        items: store.search.items,\n        sort: store.content.update.sort,\n        index: store.content.updatecolumns.idx,\n        breadcrumbs: store.breadcrumbs.items,\n        total: store.search.total,\n        searchRequest: {\n          loading: store.search.loading,\n          loaded: store.search.loaded,\n        },\n        pathname: props.location.pathname,\n        action: store.clipboard.action,\n        source: store.clipboard.source,\n        clipboardRequest: store.clipboard.request,\n        deleteRequest: store.content.delete,\n        updateRequest: store.content.update,\n        objectActions: store.actions.actions.object,\n        orderRequest: store.content.order,\n      };\n    },\n    {\n      searchContent,\n      cut,\n      copy,\n      copyContent,\n      deleteContent,\n      listActions,\n      moveContent,\n      orderContent,\n      sortContent,\n      updateColumnsContent,\n      getContent,\n    },\n  ),\n)(Contents);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (store, props) => {\n      return {\n        token: store.userSession.token,\n        items: store.search.items,\n        sort: store.content.update.sort,\n        index: store.content.updatecolumns.idx,\n        breadcrumbs: store.breadcrumbs.items,\n        total: store.search.total,\n        searchRequest: {\n          loading: store.search.loading,\n          loaded: store.search.loaded,\n        },\n        pathname: props.location.pathname,\n        action: store.clipboard.action,\n        source: store.clipboard.source,\n        clipboardRequest: store.clipboard.request,\n        deleteRequest: store.content.delete,\n        updateRequest: store.content.update,\n        objectActions: store.actions.actions.object,\n        orderRequest: store.content.order,\n      };\n    },\n    {\n      searchContent,\n      cut,\n      copy,\n      copyContent,\n      deleteContent,\n      listActions,\n      moveContent,\n      orderContent,\n      sortContent,\n      updateColumnsContent,\n      getContent,\n    },\n  ),\n  asyncConnect([\n    {\n      key: 'actions',\n      // Dispatch async/await to make the operation syncronous, otherwise it returns\n      // before the promise is resolved\n      promise: async ({ location, store: { dispatch } }) =>\n        await dispatch(listActions(getBaseUrl(location.pathname))),\n    },\n  ]),\n  injectLazyLibs(['toastify', 'reactDnd', 'reactDndHtml5Backend']),\n)(DragDropConnector);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Contents","defaultMessage":"Contents"},{"id":"Copy","defaultMessage":"Copy"},{"id":"Cut","defaultMessage":"Cut"},{"id":"You can't paste this content here","defaultMessage":"You can't paste this content here"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Do you really want to delete the following items?","defaultMessage":"Do you really want to delete the following items?"},{"id":"The item could not be deleted.","defaultMessage":"The item could not be deleted."},{"id":"loading","defaultMessage":"Loading"},{"id":"Home","defaultMessage":"Home"},{"id":"Filter…","defaultMessage":"Filter…"},{"id":"Item(s) copied.","defaultMessage":"Item(s) copied."},{"id":"Item(s) cut.","defaultMessage":"Item(s) cut."},{"id":"Item(s) has been updated.","defaultMessage":"Item(s) has been updated."},{"id":"Item succesfully moved.","defaultMessage":"Item succesfully moved."},{"id":"Item(s) pasted.","defaultMessage":"Item(s) pasted."},{"id":"Item(s) state has been updated.","defaultMessage":"Item(s) state has been updated."},{"id":"Paste","defaultMessage":"Paste"},{"id":"Properties","defaultMessage":"Properties"},{"id":"Rearrange items by…","defaultMessage":"Rearrange items by…"},{"id":"Rename","defaultMessage":"Rename"},{"id":"Select…","defaultMessage":"Select…"},{"id":"{count} selected","defaultMessage":"{count} selected"},{"id":"Select columns to show","defaultMessage":"Select columns to show"},{"id":"sort","defaultMessage":"sort"},{"id":"State","defaultMessage":"State"},{"id":"Tags","defaultMessage":"Tags"},{"id":"Upload","defaultMessage":"Upload"},{"id":"Success","defaultMessage":"Success"},{"id":"Publication date","defaultMessage":"Publication date"},{"id":"Created on","defaultMessage":"Created on"},{"id":"Expiration date","defaultMessage":"Expiration date"},{"id":"ID","defaultMessage":"ID"},{"id":"UID","defaultMessage":"UID"},{"id":"Review state","defaultMessage":"Review state"},{"id":"Folder","defaultMessage":"Folder"},{"id":"Excluded from navigation","defaultMessage":"Excluded from navigation"},{"id":"Object Size","defaultMessage":"Object Size"},{"id":"Last comment date","defaultMessage":"Last comment date"},{"id":"Total comments","defaultMessage":"Total comments"},{"id":"Creator","defaultMessage":"Creator"},{"id":"End Date","defaultMessage":"End Date"},{"id":"Start Date","defaultMessage":"Start Date"},{"id":"All","defaultMessage":"All"},{"id":"Ascending","defaultMessage":"Ascending"},{"id":"Descending","defaultMessage":"Descending"},{"id":"None","defaultMessage":"None"},{"id":"Title","defaultMessage":"Title"},{"id":"Actions","defaultMessage":"Actions"}]}},"sourceType":"module"}