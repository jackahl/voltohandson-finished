{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/FilterList.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Accordion, Button, Icon } from 'semantic-ui-react';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions/withBlockExtensions';\nimport config from '@plone/volto/registry';\nconst messages = defineMessages({\n  currentFilters: {\n    \"id\": \"Current filters applied\",\n    \"defaultMessage\": \"Current filters applied\"\n  },\n  clearFilters: {\n    \"id\": \"Clear filters\",\n    \"defaultMessage\": \"Clear filters\"\n  }\n});\n/**\n * A list of active filtered values and controls to clear those filters.\n *\n */\n\nconst FilterList = props => {\n  _s();\n\n  var _data$facets;\n\n  const {\n    data = {},\n    facets = {},\n    setFacets,\n    isEditMode\n  } = props;\n  const definedFacets = data.facets || [];\n  const [isOpened, setIsOpened] = React.useState(false);\n  const totalFilters = definedFacets.filter(_ref => {\n    let {\n      field\n    } = _ref;\n    return field && Object.keys(facets).includes(field.value) && facets[field.value];\n  }).length;\n  const {\n    types: facetWidgetTypes\n  } = config.blocks.blocksConfig.search.extensions.facetWidgets;\n  const intl = useIntl();\n  return totalFilters ? __jsx(Accordion, {\n    className: \"filter-listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Accordion.Title, {\n    className: \"filter-list-header\",\n    active: isOpened,\n    onClick: () => setIsOpened(!isOpened),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(VoltoIcon, {\n    name: downSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), intl.formatMessage(messages.currentFilters), \": \", totalFilters), __jsx(Button, {\n    icon: true,\n    basic: true,\n    compact: true,\n    size: \"small\",\n    onClick: e => {\n      e.stopPropagation();\n      !isEditMode && setFacets({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), intl.formatMessage(messages.clearFilters))), __jsx(Accordion.Content, {\n    className: \"filter-list-content\",\n    active: isOpened,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, (_data$facets = data.facets) === null || _data$facets === void 0 ? void 0 : _data$facets.map((facetSettings, i) => {\n    var _facetSettings$field, _facetSettings$title, _facetSettings$field2;\n\n    const {\n      filterListComponent: FilterListComponent\n    } = resolveExtension('type', facetWidgetTypes, facetSettings);\n    const facet = facetSettings === null || facetSettings === void 0 ? void 0 : (_facetSettings$field = facetSettings.field) === null || _facetSettings$field === void 0 ? void 0 : _facetSettings$field.value;\n    if (!facet) return null;\n    return __jsx(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, Object.keys(facets).includes(facet) && !!facets[facet] && __jsx(\"div\", {\n      className: \"filter-list-group\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      className: \"label-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, (_facetSettings$title = facetSettings.title) !== null && _facetSettings$title !== void 0 ? _facetSettings$title : facetSettings === null || facetSettings === void 0 ? void 0 : (_facetSettings$field2 = facetSettings.field) === null || _facetSettings$field2 === void 0 ? void 0 : _facetSettings$field2.label), __jsx(FilterListComponent, _extends({}, props, {\n      facet: facet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }))));\n  })))) : null;\n};\n\n_s(FilterList, \"HUJlnfvEZ6Ex6fllSX2KJBOm6Fw=\", false, function () {\n  return [useIntl];\n});\n\n_c = FilterList;\nexport default FilterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterList\");","map":{"version":3,"names":["React","Accordion","Button","Icon","VoltoIcon","downSVG","defineMessages","useIntl","resolveExtension","config","messages","currentFilters","clearFilters","FilterList","props","data","facets","setFacets","isEditMode","definedFacets","isOpened","setIsOpened","useState","totalFilters","filter","field","Object","keys","includes","value","length","types","facetWidgetTypes","blocks","blocksConfig","search","extensions","facetWidgets","intl","formatMessage","e","stopPropagation","map","facetSettings","i","filterListComponent","FilterListComponent","facet","title","label"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/FilterList.jsx"],"sourcesContent":["import React from 'react';\nimport { Accordion, Button, Icon } from 'semantic-ui-react';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions/withBlockExtensions';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  currentFilters: {\n    id: 'Current filters applied',\n    defaultMessage: 'Current filters applied',\n  },\n  clearFilters: {\n    id: 'Clear filters',\n    defaultMessage: 'Clear filters',\n  },\n});\n\n/**\n * A list of active filtered values and controls to clear those filters.\n *\n */\nconst FilterList = (props) => {\n  const { data = {}, facets = {}, setFacets, isEditMode } = props;\n  const definedFacets = data.facets || [];\n  const [isOpened, setIsOpened] = React.useState(false);\n\n  const totalFilters = definedFacets.filter(\n    ({ field }) =>\n      field && Object.keys(facets).includes(field.value) && facets[field.value],\n  ).length;\n\n  const {\n    types: facetWidgetTypes,\n  } = config.blocks.blocksConfig.search.extensions.facetWidgets;\n\n  const intl = useIntl();\n\n  return totalFilters ? (\n    <Accordion className=\"filter-listing\">\n      <Accordion.Title\n        className=\"filter-list-header\"\n        active={isOpened}\n        onClick={() => setIsOpened(!isOpened)}\n      >\n        <div className=\"filter-list-title\">\n          <VoltoIcon name={downSVG} size=\"18px\" />\n          {intl.formatMessage(messages.currentFilters)}: {totalFilters}\n        </div>\n        <Button\n          icon\n          basic\n          compact\n          size=\"small\"\n          onClick={(e) => {\n            e.stopPropagation();\n            !isEditMode && setFacets({});\n          }}\n        >\n          <Icon name=\"trash\" />\n          {intl.formatMessage(messages.clearFilters)}\n        </Button>\n      </Accordion.Title>\n      <Accordion.Content className=\"filter-list-content\" active={isOpened}>\n        <div className=\"filter-list\">\n          {data.facets?.map((facetSettings, i) => {\n            const {\n              filterListComponent: FilterListComponent,\n            } = resolveExtension('type', facetWidgetTypes, facetSettings);\n            const facet = facetSettings?.field?.value;\n            if (!facet) return null;\n\n            return (\n              <div key={i}>\n                {Object.keys(facets).includes(facet) && !!facets[facet] && (\n                  <div className=\"filter-list-group\" key={i}>\n                    <span className=\"label-title\">\n                      {facetSettings.title ?? facetSettings?.field?.label}\n                    </span>\n                    <FilterListComponent {...props} facet={facet} />\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </Accordion.Content>\n    </Accordion>\n  ) : null;\n};\n\nexport default FilterList;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Current filters applied","defaultMessage":"Current filters applied"},{"id":"Clear filters","defaultMessage":"Clear filters"}]}},"sourceType":"module"}