{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/CheckboxWidget.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Active\",\n *  type: 'boolean',\n * }\n * ```\n */\n\nconst CheckboxWidget = props => {\n  const {\n    id,\n    title,\n    value,\n    onChange,\n    isDisabled\n  } = props;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    columns: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox, {\n    name: `field-${id}`,\n    checked: value || false,\n    disabled: isDisabled,\n    onChange: (event, {\n      checked\n    }) => {\n      onChange(id, checked);\n    },\n    label: __jsx(\"label\", {\n      htmlFor: `field-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }\n    }, title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool\n};\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\n\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null\n};\nexport default injectIntl(CheckboxWidget);","map":{"version":3,"names":["React","PropTypes","Checkbox","injectIntl","FormFieldWrapper","CheckboxWidget","props","id","title","value","onChange","isDisabled","event","checked","propTypes","string","isRequired","description","required","bool","error","arrayOf","func","onEdit","onDelete","wrapped","defaultProps"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/CheckboxWidget.jsx"],"sourcesContent":["/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Active\",\n *  type: 'boolean',\n * }\n * ```\n */\nconst CheckboxWidget = (props) => {\n  const { id, title, value, onChange, isDisabled } = props;\n\n  return (\n    <FormFieldWrapper {...props} columns={1}>\n      <div className=\"wrapper\">\n        <Checkbox\n          name={`field-${id}`}\n          checked={value || false}\n          disabled={isDisabled}\n          onChange={(event, { checked }) => {\n            onChange(id, checked);\n          }}\n          label={<label htmlFor={`field-${id}`}>{title}</label>}\n        />\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default injectIntl(CheckboxWidget);\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAChC,MAAM;IAAEC,EAAF;IAAMC,KAAN;IAAaC,KAAb;IAAoBC,QAApB;IAA8BC;EAA9B,IAA6CL,KAAnD;EAEA,OACE,MAAC,gBAAD,eAAsBA,KAAtB;IAA6B,OAAO,EAAE,CAAtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACE;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,QAAD;IACE,IAAI,EAAG,SAAQC,EAAG,EADpB;IAEE,OAAO,EAAEE,KAAK,IAAI,KAFpB;IAGE,QAAQ,EAAEE,UAHZ;IAIE,QAAQ,EAAE,CAACC,KAAD,EAAQ;MAAEC;IAAF,CAAR,KAAwB;MAChCH,QAAQ,CAACH,EAAD,EAAKM,OAAL,CAAR;IACD,CANH;IAOE,KAAK,EAAE;MAAO,OAAO,EAAG,SAAQN,EAAG,EAA5B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAgCC,KAAhC,CAPT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,CADF;AAeD,CAlBD;AAoBA;AACA;AACA;AACA;AACA;;;AACAH,cAAc,CAACS,SAAf,GAA2B;EACzBP,EAAE,EAAEN,SAAS,CAACc,MAAV,CAAiBC,UADI;EAEzBR,KAAK,EAAEP,SAAS,CAACc,MAAV,CAAiBC,UAFC;EAGzBC,WAAW,EAAEhB,SAAS,CAACc,MAHE;EAIzBG,QAAQ,EAAEjB,SAAS,CAACkB,IAJK;EAKzBC,KAAK,EAAEnB,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACc,MAA5B,CALkB;EAMzBN,KAAK,EAAER,SAAS,CAACkB,IANQ;EAOzBT,QAAQ,EAAET,SAAS,CAACqB,IAPK;EAQzBC,MAAM,EAAEtB,SAAS,CAACqB,IARO;EASzBE,QAAQ,EAAEvB,SAAS,CAACqB,IATK;EAUzBG,OAAO,EAAExB,SAAS,CAACkB;AAVM,CAA3B;AAaA;AACA;AACA;AACA;AACA;;AACAd,cAAc,CAACqB,YAAf,GAA8B;EAC5BT,WAAW,EAAE,IADe;EAE5BC,QAAQ,EAAE,KAFkB;EAG5BE,KAAK,EAAE,EAHqB;EAI5BX,KAAK,EAAE,IAJqB;EAK5BC,QAAQ,EAAE,IALkB;EAM5Ba,MAAM,EAAE,IANoB;EAO5BC,QAAQ,EAAE;AAPkB,CAA9B;AAUA,eAAerB,UAAU,CAACE,cAAD,CAAzB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}