{"ast":null,"code":"import _map from \"lodash/map\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Table/View.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * View table block.\n * @module components/manage/Blocks/Table/View\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport redraft from 'redraft';\nimport config from '@plone/volto/registry';\n/**\n * View table block class.\n * @class View\n * @extends Component\n */\n\nconst View = _ref => {\n  let {\n    data\n  } = _ref;\n  return data && data.table && __jsx(Table, {\n    fixed: data.table.fixed,\n    compact: data.table.compact,\n    basic: data.table.basic ? 'very' : false,\n    celled: data.table.celled,\n    inverted: data.table.inverted,\n    striped: data.table.striped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, _map(data.table.rows, row => __jsx(Table.Row, {\n    key: row.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, _map(row.cells, cell => __jsx(Table.Cell, {\n    key: cell.key,\n    as: cell.type === 'header' ? 'th' : 'td',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, cell.value && cell.value.blocks && cell.value.blocks[0].text ? redraft(cell.value, config.settings.richtextViewSettings.ToHTMLRenderers, config.settings.richtextViewSettings.ToHTMLOptions) : '\\u00A0'))))));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\n_c = View;\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["React","PropTypes","Table","redraft","config","View","data","table","fixed","compact","basic","celled","inverted","striped","rows","row","key","cells","cell","type","value","blocks","text","settings","richtextViewSettings","ToHTMLRenderers","ToHTMLOptions","propTypes","objectOf","any","isRequired"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Table/View.jsx"],"sourcesContent":["/**\n * View table block.\n * @module components/manage/Blocks/Table/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport redraft from 'redraft';\nimport config from '@plone/volto/registry';\n\n/**\n * View table block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data }) =>\n  data &&\n  data.table && (\n    <Table\n      fixed={data.table.fixed}\n      compact={data.table.compact}\n      basic={data.table.basic ? 'very' : false}\n      celled={data.table.celled}\n      inverted={data.table.inverted}\n      striped={data.table.striped}\n    >\n      <Table.Body>\n        {map(data.table.rows, (row) => (\n          <Table.Row key={row.key}>\n            {map(row.cells, (cell) => (\n              <Table.Cell\n                key={cell.key}\n                as={cell.type === 'header' ? 'th' : 'td'}\n              >\n                {cell.value && cell.value.blocks && cell.value.blocks[0].text\n                  ? redraft(\n                      cell.value,\n                      config.settings.richtextViewSettings.ToHTMLRenderers,\n                      config.settings.richtextViewSettings.ToHTMLOptions,\n                    )\n                  : '\\u00A0'}\n              </Table.Cell>\n            ))}\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OACXA,IAAI,IACJA,IAAI,CAACC,KADL,IAEE,MAAC,KAAD;IACE,KAAK,EAAED,IAAI,CAACC,KAAL,CAAWC,KADpB;IAEE,OAAO,EAAEF,IAAI,CAACC,KAAL,CAAWE,OAFtB;IAGE,KAAK,EAAEH,IAAI,CAACC,KAAL,CAAWG,KAAX,GAAmB,MAAnB,GAA4B,KAHrC;IAIE,MAAM,EAAEJ,IAAI,CAACC,KAAL,CAAWI,MAJrB;IAKE,QAAQ,EAAEL,IAAI,CAACC,KAAL,CAAWK,QALvB;IAME,OAAO,EAAEN,IAAI,CAACC,KAAL,CAAWM,OANtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAQE,MAAC,KAAD,CAAO,IAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,KAAIP,IAAI,CAACC,KAAL,CAAWO,IAAf,EAAsBC,GAAD,IACpB,MAAC,KAAD,CAAO,GAAP;IAAW,GAAG,EAAEA,GAAG,CAACC,GAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,KAAID,GAAG,CAACE,KAAR,EAAgBC,IAAD,IACd,MAAC,KAAD,CAAO,IAAP;IACE,GAAG,EAAEA,IAAI,CAACF,GADZ;IAEE,EAAE,EAAEE,IAAI,CAACC,IAAL,KAAc,QAAd,GAAyB,IAAzB,GAAgC,IAFtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAIGD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACE,KAAL,CAAWC,MAAzB,IAAmCH,IAAI,CAACE,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,IAAxD,GACGnB,OAAO,CACLe,IAAI,CAACE,KADA,EAELhB,MAAM,CAACmB,QAAP,CAAgBC,oBAAhB,CAAqCC,eAFhC,EAGLrB,MAAM,CAACmB,QAAP,CAAgBC,oBAAhB,CAAqCE,aAHhC,CADV,GAMG,QAVN,CADD,CADH,CADD,CADH,CARF,CAHS;AAAA,CAAb;AAkCA;AACA;AACA;AACA;AACA;;;KAtCMrB,I;AAuCNA,IAAI,CAACsB,SAAL,GAAiB;EACfrB,IAAI,EAAEL,SAAS,CAAC2B,QAAV,CAAmB3B,SAAS,CAAC4B,GAA7B,EAAkCC;AADzB,CAAjB;AAIA,eAAezB,IAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}