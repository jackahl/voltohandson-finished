{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/blocks/Text/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport redraft from 'redraft';\nimport TextBlockView from './TextBlockView';\nimport TextBlockEdit from './TextBlockEdit';\nimport TextBlockSchema from './TextBlockSchema';\nimport { goDown, goUp, backspaceInList, indentListItems, joinWithNextBlock, joinWithPreviousBlock, softBreak, moveListItemDown, moveListItemUp, traverseBlocks, unwrapEmptyString, slashMenu, cancelEsc } from './keyboard';\nimport { withDeleteSelectionOnEnter } from '@plone/volto-slate/editor/extensions';\nimport { breakList, withDeserializers, withLists, withSplitBlocksOnBreak, withIsSelected } from './extensions';\nimport { extractImages } from '@plone/volto-slate/editor/plugins/Image/deconstruct';\nimport { extractTables } from '@plone/volto-slate/blocks/Table/deconstruct';\nimport textSVG from '@plone/volto/icons/subtext.svg';\nexport { TextBlockView, TextBlockEdit, TextBlockSchema };\nexport default (config => {\n  config.settings.slate = _objectSpread({\n    // TODO: should we inverse order? First here gets executed last\n    textblockExtensions: [withLists, withSplitBlocksOnBreak, // TODO: do we still need this one?\n    withDeleteSelectionOnEnter, withDeserializers, withIsSelected, breakList],\n    // Pluggable handlers for the onKeyDown event of <Editable />\n    // Order matters here. A handler can return `true` to stop executing any\n    // following handler\n    textblockKeyboardHandlers: {\n      Backspace: [unwrapEmptyString, backspaceInList, // Backspace in list item lifts node and breaks Volto blocks\n      joinWithPreviousBlock // Backspace at beginning of block joins with previous block\n      ],\n      Delete: [unwrapEmptyString, joinWithNextBlock // Delete at end of block joins with next block\n      ],\n      Enter: [slashMenu, unwrapEmptyString, softBreak // Handles shift+Enter as a newline (<br/>)\n      ],\n      ArrowUp: [slashMenu, moveListItemUp, // Move up a list with with Ctrl+up\n      goUp // Select previous block\n      ],\n      ArrowDown: [slashMenu, moveListItemDown, // Move down a list item with Ctrl+down\n      goDown // Select next block\n      ],\n      Tab: [indentListItems, // <tab> and <c-tab> behaviour for list items\n      traverseBlocks],\n      Escape: [cancelEsc]\n    },\n    textblockDetachedKeyboardHandlers: {\n      Enter: [softBreak // Handles shift+Enter as a newline (<br/>)\n      ]\n    },\n    // Used by deconstructToVoltoBlocks to transform tags such as <img> to a Volto image block\n    // These emiters receive (editor, pathRef), emit [blockid, blockoptions] and\n    // are allowed to change the editor contents (for the given path)\n    voltoBlockEmiters: [...(config.settings.slate.voltoBlockEmiters || []), extractImages, extractTables],\n    // These elements will get an id, to make them targets in TOC\n    topLevelTargetElements: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n  }, config.settings.slate);\n  config.settings.integratesBlockStyles = [...(config.settings.integratesBlockStyles || []), 'slate'];\n  const slateBlockConfig = {\n    id: 'slate',\n    title: 'Text',\n    icon: textSVG,\n    group: 'text',\n    view: TextBlockView,\n    edit: TextBlockEdit,\n    schema: TextBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: []\n    },\n    blockHasValue: data => {\n      var _data$plaintext;\n\n      // TODO: this should be handled better\n      return data && !!((_data$plaintext = data.plaintext) !== null && _data$plaintext !== void 0 && _data$plaintext.trim());\n    },\n    tocEntry: (block = {}) => {\n      var _value$;\n\n      const {\n        value,\n        override_toc,\n        entry_text,\n        level,\n        plaintext\n      } = block;\n      const type = value === null || value === void 0 ? void 0 : (_value$ = value[0]) === null || _value$ === void 0 ? void 0 : _value$.type;\n      return override_toc && level ? [parseInt(level.slice(1)), entry_text] : config.settings.slate.topLevelTargetElements.includes(type) ? [parseInt(type.slice(1)), plaintext] : null;\n    }\n  }; // Make draft js compatible with ToC\n\n  config.blocks.blocksConfig.text = _objectSpread(_objectSpread({}, config.blocks.blocksConfig.text), {}, {\n    restricted: true,\n    tocEntry: (block = {}) => {\n      var _draft$, _draft$$;\n\n      const draft = redraft(block.text, config.settings.richtextViewSettings.ToHTMLRenderers, config.settings.richtextViewSettings.ToHTMLOptions);\n      const type = draft === null || draft === void 0 ? void 0 : (_draft$ = draft[0]) === null || _draft$ === void 0 ? void 0 : (_draft$$ = _draft$[0]) === null || _draft$$ === void 0 ? void 0 : _draft$$.type;\n      return config.settings.slate.topLevelTargetElements.includes(type) ? [parseInt(type.slice(1)), block.text.blocks[0].text] : null;\n    }\n  });\n  config.blocks.blocksConfig.slate = slateBlockConfig;\n  config.blocks.blocksConfig.detachedSlate = _objectSpread(_objectSpread({}, config.blocks.blocksConfig.slate), {}, {\n    id: 'detachedSlate',\n    title: 'Detached Slate',\n    edit: props => __jsx(TextBlockEdit, _extends({}, props, {\n      detached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 22\n      }\n    })),\n    restricted: true\n  });\n  return config;\n});","map":{"version":3,"names":["React","redraft","TextBlockView","TextBlockEdit","TextBlockSchema","goDown","goUp","backspaceInList","indentListItems","joinWithNextBlock","joinWithPreviousBlock","softBreak","moveListItemDown","moveListItemUp","traverseBlocks","unwrapEmptyString","slashMenu","cancelEsc","withDeleteSelectionOnEnter","breakList","withDeserializers","withLists","withSplitBlocksOnBreak","withIsSelected","extractImages","extractTables","textSVG","config","settings","slate","textblockExtensions","textblockKeyboardHandlers","Backspace","Delete","Enter","ArrowUp","ArrowDown","Tab","Escape","textblockDetachedKeyboardHandlers","voltoBlockEmiters","topLevelTargetElements","integratesBlockStyles","slateBlockConfig","id","title","icon","group","view","edit","schema","restricted","mostUsed","blockHasOwnFocusManagement","sidebarTab","security","addPermission","blockHasValue","data","plaintext","trim","tocEntry","block","value","override_toc","entry_text","level","type","parseInt","slice","includes","blocks","blocksConfig","text","draft","richtextViewSettings","ToHTMLRenderers","ToHTMLOptions","detachedSlate","props"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/blocks/Text/index.js"],"sourcesContent":["import React from 'react';\nimport redraft from 'redraft';\nimport TextBlockView from './TextBlockView';\nimport TextBlockEdit from './TextBlockEdit';\nimport TextBlockSchema from './TextBlockSchema';\n\nimport {\n  goDown,\n  goUp,\n  backspaceInList,\n  indentListItems,\n  joinWithNextBlock,\n  joinWithPreviousBlock,\n  softBreak,\n  moveListItemDown,\n  moveListItemUp,\n  traverseBlocks,\n  unwrapEmptyString,\n  slashMenu,\n  cancelEsc,\n} from './keyboard';\nimport { withDeleteSelectionOnEnter } from '@plone/volto-slate/editor/extensions';\nimport {\n  breakList,\n  withDeserializers,\n  withLists,\n  withSplitBlocksOnBreak,\n  withIsSelected,\n} from './extensions';\nimport { extractImages } from '@plone/volto-slate/editor/plugins/Image/deconstruct';\nimport { extractTables } from '@plone/volto-slate/blocks/Table/deconstruct';\n\nimport textSVG from '@plone/volto/icons/subtext.svg';\n\nexport { TextBlockView, TextBlockEdit, TextBlockSchema };\n\nexport default (config) => {\n  config.settings.slate = {\n    // TODO: should we inverse order? First here gets executed last\n    textblockExtensions: [\n      withLists,\n      withSplitBlocksOnBreak, // TODO: do we still need this one?\n      withDeleteSelectionOnEnter,\n      withDeserializers,\n      withIsSelected,\n      breakList,\n    ],\n\n    // Pluggable handlers for the onKeyDown event of <Editable />\n    // Order matters here. A handler can return `true` to stop executing any\n    // following handler\n    textblockKeyboardHandlers: {\n      Backspace: [\n        unwrapEmptyString,\n        backspaceInList, // Backspace in list item lifts node and breaks Volto blocks\n        joinWithPreviousBlock, // Backspace at beginning of block joins with previous block\n      ],\n      Delete: [\n        unwrapEmptyString,\n        joinWithNextBlock, // Delete at end of block joins with next block\n      ],\n      Enter: [\n        slashMenu,\n        unwrapEmptyString,\n        softBreak, // Handles shift+Enter as a newline (<br/>)\n      ],\n      ArrowUp: [\n        slashMenu,\n        moveListItemUp, // Move up a list with with Ctrl+up\n        goUp, // Select previous block\n      ],\n      ArrowDown: [\n        slashMenu,\n        moveListItemDown, // Move down a list item with Ctrl+down\n        goDown, // Select next block\n      ],\n      Tab: [\n        indentListItems, // <tab> and <c-tab> behaviour for list items\n        traverseBlocks,\n      ],\n      Escape: [cancelEsc],\n    },\n    textblockDetachedKeyboardHandlers: {\n      Enter: [\n        softBreak, // Handles shift+Enter as a newline (<br/>)\n      ],\n    },\n    // Used by deconstructToVoltoBlocks to transform tags such as <img> to a Volto image block\n    // These emiters receive (editor, pathRef), emit [blockid, blockoptions] and\n    // are allowed to change the editor contents (for the given path)\n    voltoBlockEmiters: [\n      ...(config.settings.slate.voltoBlockEmiters || []),\n      extractImages,\n      extractTables,\n    ],\n\n    // These elements will get an id, to make them targets in TOC\n    topLevelTargetElements: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n    ...config.settings.slate, // TODO: is this correct for volto-slate addons?\n  };\n\n  config.settings.integratesBlockStyles = [\n    ...(config.settings.integratesBlockStyles || []),\n    'slate',\n  ];\n\n  const slateBlockConfig = {\n    id: 'slate',\n    title: 'Text',\n    icon: textSVG,\n    group: 'text',\n    view: TextBlockView,\n    edit: TextBlockEdit,\n    schema: TextBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    blockHasValue: (data) => {\n      // TODO: this should be handled better\n      return data && !!data.plaintext?.trim();\n    },\n    tocEntry: (block = {}) => {\n      const { value, override_toc, entry_text, level, plaintext } = block;\n      const type = value?.[0]?.type;\n      return override_toc && level\n        ? [parseInt(level.slice(1)), entry_text]\n        : config.settings.slate.topLevelTargetElements.includes(type)\n        ? [parseInt(type.slice(1)), plaintext]\n        : null;\n    },\n  };\n\n  // Make draft js compatible with ToC\n  config.blocks.blocksConfig.text = {\n    ...config.blocks.blocksConfig.text,\n    restricted: true,\n    tocEntry: (block = {}) => {\n      const draft = redraft(\n        block.text,\n        config.settings.richtextViewSettings.ToHTMLRenderers,\n        config.settings.richtextViewSettings.ToHTMLOptions,\n      );\n      const type = draft?.[0]?.[0]?.type;\n\n      return config.settings.slate.topLevelTargetElements.includes(type)\n        ? [parseInt(type.slice(1)), block.text.blocks[0].text]\n        : null;\n    },\n  };\n\n  config.blocks.blocksConfig.slate = slateBlockConfig;\n  config.blocks.blocksConfig.detachedSlate = {\n    ...config.blocks.blocksConfig.slate,\n    id: 'detachedSlate',\n    title: 'Detached Slate',\n    edit: (props) => <TextBlockEdit {...props} detached />,\n    restricted: true,\n  };\n  return config;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}