{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Listing/withQuerystringResults.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { getContent, getQueryStringResults } from '@plone/volto/actions';\nimport { usePagination, getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport default function withQuerystringResults(WrappedComponent) {\n  function WithQuerystringResults(props) {\n    var _querystring$query, _querystringResults$b, _querystring$query2, _querystringResults$b2, _querystringResults$b3, _content$batching, _querystringResults$b4, _content$batching2, _querystringResults$b5, _querystringResults$b6;\n\n    const {\n      data = {},\n      properties: content,\n      path,\n      variation\n    } = props;\n    const {\n      settings\n    } = config;\n    const querystring = data.querystring || data; // For backwards compat with data saved before Blocks schema. Note, this is also how the Search block passes data to ListingBody\n\n    const {\n      block\n    } = data;\n    const {\n      b_size = settings.defaultPageSize\n    } = querystring; // batchsize\n    // save the path so it won't trigger dispatch on eager router location change\n\n    const [initialPath] = React.useState(getBaseUrl(path));\n    const copyFields = ['limit', 'query', 'sort_on', 'sort_order', 'depth'];\n    const adaptedQuery = Object.assign(variation !== null && variation !== void 0 && variation.fullobjects ? {\n      fullobjects: 1\n    } : {\n      metadata_fields: '_all'\n    }, {\n      b_size: b_size\n    }, ...copyFields.map(name => Object.keys(querystring).includes(name) ? {\n      [name]: querystring[name]\n    } : {}));\n    const {\n      currentPage,\n      setCurrentPage\n    } = usePagination(querystring, 1);\n    const querystringResults = useSelector(state => state.querystringsearch.subrequests);\n    const dispatch = useDispatch();\n    const folderItems = content !== null && content !== void 0 && content.is_folderish ? content.items : [];\n    const hasQuery = (querystring === null || querystring === void 0 ? void 0 : (_querystring$query = querystring.query) === null || _querystring$query === void 0 ? void 0 : _querystring$query.length) > 0;\n    const hasLoaded = hasQuery ? !(querystringResults !== null && querystringResults !== void 0 && (_querystringResults$b = querystringResults[block]) !== null && _querystringResults$b !== void 0 && _querystringResults$b.loading) : true;\n    const listingItems = (querystring === null || querystring === void 0 ? void 0 : (_querystring$query2 = querystring.query) === null || _querystring$query2 === void 0 ? void 0 : _querystring$query2.length) > 0 && querystringResults !== null && querystringResults !== void 0 && querystringResults[block] ? (querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$b2 = querystringResults[block]) === null || _querystringResults$b2 === void 0 ? void 0 : _querystringResults$b2.items) || [] : folderItems;\n    const showAsFolderListing = !hasQuery && (content === null || content === void 0 ? void 0 : content.items_total) > b_size;\n    const showAsQueryListing = hasQuery && (querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$b3 = querystringResults[block]) === null || _querystringResults$b3 === void 0 ? void 0 : _querystringResults$b3.total) > b_size;\n    const totalPages = showAsFolderListing ? Math.ceil(content.items_total / b_size) : showAsQueryListing ? Math.ceil(querystringResults[block].total / b_size) : 0;\n    const prevBatch = showAsFolderListing ? (_content$batching = content.batching) === null || _content$batching === void 0 ? void 0 : _content$batching.prev : showAsQueryListing ? (_querystringResults$b4 = querystringResults[block].batching) === null || _querystringResults$b4 === void 0 ? void 0 : _querystringResults$b4.prev : null;\n    const nextBatch = showAsFolderListing ? (_content$batching2 = content.batching) === null || _content$batching2 === void 0 ? void 0 : _content$batching2.next : showAsQueryListing ? (_querystringResults$b5 = querystringResults[block].batching) === null || _querystringResults$b5 === void 0 ? void 0 : _querystringResults$b5.next : null;\n    const isImageGallery = !data.variation && data.template === 'imageGallery' || data.variation === 'imageGallery';\n    useDeepCompareEffect(() => {\n      if (hasQuery) {\n        dispatch(getQueryStringResults(initialPath, adaptedQuery, block, currentPage));\n      } else if (isImageGallery && !hasQuery) {\n        // when used as image gallery, it doesn't need a query to list children\n        dispatch(getQueryStringResults(initialPath, _objectSpread(_objectSpread({}, adaptedQuery), {}, {\n          b_size: 10000000000,\n          query: [{\n            i: 'path',\n            o: 'plone.app.querystring.operation.string.relativePath',\n            v: ''\n          }]\n        }), block));\n      } else {\n        dispatch(getContent(initialPath, null, null, currentPage));\n      }\n    }, [block, isImageGallery, adaptedQuery, hasQuery, initialPath, dispatch, currentPage]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      onPaginationChange: (e, {\n        activePage\n      }) => setCurrentPage(activePage),\n      total: querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$b6 = querystringResults[block]) === null || _querystringResults$b6 === void 0 ? void 0 : _querystringResults$b6.total,\n      batch_size: b_size,\n      currentPage: currentPage,\n      totalPages: totalPages,\n      prevBatch: prevBatch,\n      nextBatch: nextBatch,\n      listingItems: listingItems,\n      hasLoaded: hasLoaded,\n      isFolderContentsListing: showAsFolderListing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  WithQuerystringResults.displayName = `WithQuerystringResults(${getDisplayName(WrappedComponent)})`;\n  return hoistNonReactStatics(WithQuerystringResults, WrappedComponent);\n}","map":{"version":3,"names":["React","useDispatch","useSelector","hoistNonReactStatics","useDeepCompareEffect","getContent","getQueryStringResults","usePagination","getBaseUrl","config","getDisplayName","WrappedComponent","displayName","name","withQuerystringResults","WithQuerystringResults","props","data","properties","content","path","variation","settings","querystring","block","b_size","defaultPageSize","initialPath","useState","copyFields","adaptedQuery","Object","assign","fullobjects","metadata_fields","map","keys","includes","currentPage","setCurrentPage","querystringResults","state","querystringsearch","subrequests","dispatch","folderItems","is_folderish","items","hasQuery","query","length","hasLoaded","loading","listingItems","showAsFolderListing","items_total","showAsQueryListing","total","totalPages","Math","ceil","prevBatch","batching","prev","nextBatch","next","isImageGallery","template","i","o","v","e","activePage"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Listing/withQuerystringResults.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nimport { getContent, getQueryStringResults } from '@plone/volto/actions';\nimport { usePagination, getBaseUrl } from '@plone/volto/helpers';\n\nimport config from '@plone/volto/registry';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport default function withQuerystringResults(WrappedComponent) {\n  function WithQuerystringResults(props) {\n    const { data = {}, properties: content, path, variation } = props;\n    const { settings } = config;\n    const querystring = data.querystring || data; // For backwards compat with data saved before Blocks schema. Note, this is also how the Search block passes data to ListingBody\n\n    const { block } = data;\n    const { b_size = settings.defaultPageSize } = querystring; // batchsize\n\n    // save the path so it won't trigger dispatch on eager router location change\n    const [initialPath] = React.useState(getBaseUrl(path));\n\n    const copyFields = ['limit', 'query', 'sort_on', 'sort_order', 'depth'];\n\n    const adaptedQuery = Object.assign(\n      variation?.fullobjects ? { fullobjects: 1 } : { metadata_fields: '_all' },\n      {\n        b_size: b_size,\n      },\n      ...copyFields.map((name) =>\n        Object.keys(querystring).includes(name)\n          ? { [name]: querystring[name] }\n          : {},\n      ),\n    );\n    const { currentPage, setCurrentPage } = usePagination(querystring, 1);\n    const querystringResults = useSelector(\n      (state) => state.querystringsearch.subrequests,\n    );\n    const dispatch = useDispatch();\n\n    const folderItems = content?.is_folderish ? content.items : [];\n    const hasQuery = querystring?.query?.length > 0;\n    const hasLoaded = hasQuery ? !querystringResults?.[block]?.loading : true;\n\n    const listingItems =\n      querystring?.query?.length > 0 && querystringResults?.[block]\n        ? querystringResults?.[block]?.items || []\n        : folderItems;\n\n    const showAsFolderListing = !hasQuery && content?.items_total > b_size;\n    const showAsQueryListing =\n      hasQuery && querystringResults?.[block]?.total > b_size;\n\n    const totalPages = showAsFolderListing\n      ? Math.ceil(content.items_total / b_size)\n      : showAsQueryListing\n      ? Math.ceil(querystringResults[block].total / b_size)\n      : 0;\n\n    const prevBatch = showAsFolderListing\n      ? content.batching?.prev\n      : showAsQueryListing\n      ? querystringResults[block].batching?.prev\n      : null;\n    const nextBatch = showAsFolderListing\n      ? content.batching?.next\n      : showAsQueryListing\n      ? querystringResults[block].batching?.next\n      : null;\n\n    const isImageGallery =\n      (!data.variation && data.template === 'imageGallery') ||\n      data.variation === 'imageGallery';\n\n    useDeepCompareEffect(() => {\n      if (hasQuery) {\n        dispatch(\n          getQueryStringResults(initialPath, adaptedQuery, block, currentPage),\n        );\n      } else if (isImageGallery && !hasQuery) {\n        // when used as image gallery, it doesn't need a query to list children\n        dispatch(\n          getQueryStringResults(\n            initialPath,\n            {\n              ...adaptedQuery,\n              b_size: 10000000000,\n              query: [\n                {\n                  i: 'path',\n                  o: 'plone.app.querystring.operation.string.relativePath',\n                  v: '',\n                },\n              ],\n            },\n            block,\n          ),\n        );\n      } else {\n        dispatch(getContent(initialPath, null, null, currentPage));\n      }\n    }, [\n      block,\n      isImageGallery,\n      adaptedQuery,\n      hasQuery,\n      initialPath,\n      dispatch,\n      currentPage,\n    ]);\n\n    return (\n      <WrappedComponent\n        {...props}\n        onPaginationChange={(e, { activePage }) => setCurrentPage(activePage)}\n        total={querystringResults?.[block]?.total}\n        batch_size={b_size}\n        currentPage={currentPage}\n        totalPages={totalPages}\n        prevBatch={prevBatch}\n        nextBatch={nextBatch}\n        listingItems={listingItems}\n        hasLoaded={hasLoaded}\n        isFolderContentsListing={showAsFolderListing}\n      />\n    );\n  }\n\n  WithQuerystringResults.displayName = `WithQuerystringResults(${getDisplayName(\n    WrappedComponent,\n  )})`;\n\n  return hoistNonReactStatics(WithQuerystringResults, WrappedComponent);\n}\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AAEA,SAASC,UAAT,EAAqBC,qBAArB,QAAkD,sBAAlD;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,sBAA1C;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;EACxC,OAAOA,gBAAgB,CAACC,WAAjB,IAAgCD,gBAAgB,CAACE,IAAjD,IAAyD,WAAhE;AACD;;AAED,eAAe,SAASC,sBAAT,CAAgCH,gBAAhC,EAAkD;EAC/D,SAASI,sBAAT,CAAgCC,KAAhC,EAAuC;IAAA;;IACrC,MAAM;MAAEC,IAAI,GAAG,EAAT;MAAaC,UAAU,EAAEC,OAAzB;MAAkCC,IAAlC;MAAwCC;IAAxC,IAAsDL,KAA5D;IACA,MAAM;MAAEM;IAAF,IAAeb,MAArB;IACA,MAAMc,WAAW,GAAGN,IAAI,CAACM,WAAL,IAAoBN,IAAxC,CAHqC,CAGS;;IAE9C,MAAM;MAAEO;IAAF,IAAYP,IAAlB;IACA,MAAM;MAAEQ,MAAM,GAAGH,QAAQ,CAACI;IAApB,IAAwCH,WAA9C,CANqC,CAMsB;IAE3D;;IACA,MAAM,CAACI,WAAD,IAAgB3B,KAAK,CAAC4B,QAAN,CAAepB,UAAU,CAACY,IAAD,CAAzB,CAAtB;IAEA,MAAMS,UAAU,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,YAA9B,EAA4C,OAA5C,CAAnB;IAEA,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CACnBX,SAAS,SAAT,IAAAA,SAAS,WAAT,IAAAA,SAAS,CAAEY,WAAX,GAAyB;MAAEA,WAAW,EAAE;IAAf,CAAzB,GAA8C;MAAEC,eAAe,EAAE;IAAnB,CAD3B,EAEnB;MACET,MAAM,EAAEA;IADV,CAFmB,EAKnB,GAAGI,UAAU,CAACM,GAAX,CAAgBtB,IAAD,IAChBkB,MAAM,CAACK,IAAP,CAAYb,WAAZ,EAAyBc,QAAzB,CAAkCxB,IAAlC,IACI;MAAE,CAACA,IAAD,GAAQU,WAAW,CAACV,IAAD;IAArB,CADJ,GAEI,EAHH,CALgB,CAArB;IAWA,MAAM;MAAEyB,WAAF;MAAeC;IAAf,IAAkChC,aAAa,CAACgB,WAAD,EAAc,CAAd,CAArD;IACA,MAAMiB,kBAAkB,GAAGtC,WAAW,CACnCuC,KAAD,IAAWA,KAAK,CAACC,iBAAN,CAAwBC,WADC,CAAtC;IAGA,MAAMC,QAAQ,GAAG3C,WAAW,EAA5B;IAEA,MAAM4C,WAAW,GAAG1B,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAE2B,YAAT,GAAwB3B,OAAO,CAAC4B,KAAhC,GAAwC,EAA5D;IACA,MAAMC,QAAQ,GAAG,CAAAzB,WAAW,SAAX,IAAAA,WAAW,WAAX,kCAAAA,WAAW,CAAE0B,KAAb,0EAAoBC,MAApB,IAA6B,CAA9C;IACA,MAAMC,SAAS,GAAGH,QAAQ,GAAG,EAACR,kBAAD,aAACA,kBAAD,wCAACA,kBAAkB,CAAGhB,KAAH,CAAnB,kDAAC,sBAA6B4B,OAA9B,CAAH,GAA2C,IAArE;IAEA,MAAMC,YAAY,GAChB,CAAA9B,WAAW,SAAX,IAAAA,WAAW,WAAX,mCAAAA,WAAW,CAAE0B,KAAb,4EAAoBC,MAApB,IAA6B,CAA7B,IAAkCV,kBAAlC,aAAkCA,kBAAlC,eAAkCA,kBAAkB,CAAGhB,KAAH,CAApD,GACI,CAAAgB,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,sCAAAA,kBAAkB,CAAGhB,KAAH,CAAlB,kFAA6BuB,KAA7B,KAAsC,EAD1C,GAEIF,WAHN;IAKA,MAAMS,mBAAmB,GAAG,CAACN,QAAD,IAAa,CAAA7B,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEoC,WAAT,IAAuB9B,MAAhE;IACA,MAAM+B,kBAAkB,GACtBR,QAAQ,IAAI,CAAAR,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,sCAAAA,kBAAkB,CAAGhB,KAAH,CAAlB,kFAA6BiC,KAA7B,IAAqChC,MADnD;IAGA,MAAMiC,UAAU,GAAGJ,mBAAmB,GAClCK,IAAI,CAACC,IAAL,CAAUzC,OAAO,CAACoC,WAAR,GAAsB9B,MAAhC,CADkC,GAElC+B,kBAAkB,GAClBG,IAAI,CAACC,IAAL,CAAUpB,kBAAkB,CAAChB,KAAD,CAAlB,CAA0BiC,KAA1B,GAAkChC,MAA5C,CADkB,GAElB,CAJJ;IAMA,MAAMoC,SAAS,GAAGP,mBAAmB,wBACjCnC,OAAO,CAAC2C,QADyB,sDACjC,kBAAkBC,IADe,GAEjCP,kBAAkB,6BAClBhB,kBAAkB,CAAChB,KAAD,CAAlB,CAA0BsC,QADR,2DAClB,uBAAoCC,IADlB,GAElB,IAJJ;IAKA,MAAMC,SAAS,GAAGV,mBAAmB,yBACjCnC,OAAO,CAAC2C,QADyB,uDACjC,mBAAkBG,IADe,GAEjCT,kBAAkB,6BAClBhB,kBAAkB,CAAChB,KAAD,CAAlB,CAA0BsC,QADR,2DAClB,uBAAoCG,IADlB,GAElB,IAJJ;IAMA,MAAMC,cAAc,GACjB,CAACjD,IAAI,CAACI,SAAN,IAAmBJ,IAAI,CAACkD,QAAL,KAAkB,cAAtC,IACAlD,IAAI,CAACI,SAAL,KAAmB,cAFrB;IAIAjB,oBAAoB,CAAC,MAAM;MACzB,IAAI4C,QAAJ,EAAc;QACZJ,QAAQ,CACNtC,qBAAqB,CAACqB,WAAD,EAAcG,YAAd,EAA4BN,KAA5B,EAAmCc,WAAnC,CADf,CAAR;MAGD,CAJD,MAIO,IAAI4B,cAAc,IAAI,CAAClB,QAAvB,EAAiC;QACtC;QACAJ,QAAQ,CACNtC,qBAAqB,CACnBqB,WADmB,kCAGdG,YAHc;UAIjBL,MAAM,EAAE,WAJS;UAKjBwB,KAAK,EAAE,CACL;YACEmB,CAAC,EAAE,MADL;YAEEC,CAAC,EAAE,qDAFL;YAGEC,CAAC,EAAE;UAHL,CADK;QALU,IAanB9C,KAbmB,CADf,CAAR;MAiBD,CAnBM,MAmBA;QACLoB,QAAQ,CAACvC,UAAU,CAACsB,WAAD,EAAc,IAAd,EAAoB,IAApB,EAA0BW,WAA1B,CAAX,CAAR;MACD;IACF,CA3BmB,EA2BjB,CACDd,KADC,EAED0C,cAFC,EAGDpC,YAHC,EAIDkB,QAJC,EAKDrB,WALC,EAMDiB,QANC,EAODN,WAPC,CA3BiB,CAApB;IAqCA,OACE,MAAC,gBAAD,eACMtB,KADN;MAEE,kBAAkB,EAAE,CAACuD,CAAD,EAAI;QAAEC;MAAF,CAAJ,KAAuBjC,cAAc,CAACiC,UAAD,CAF3D;MAGE,KAAK,EAAEhC,kBAAF,aAAEA,kBAAF,iDAAEA,kBAAkB,CAAGhB,KAAH,CAApB,2DAAE,uBAA6BiC,KAHtC;MAIE,UAAU,EAAEhC,MAJd;MAKE,WAAW,EAAEa,WALf;MAME,UAAU,EAAEoB,UANd;MAOE,SAAS,EAAEG,SAPb;MAQE,SAAS,EAAEG,SARb;MASE,YAAY,EAAEX,YAThB;MAUE,SAAS,EAAEF,SAVb;MAWE,uBAAuB,EAAEG,mBAX3B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GADF;EAeD;;EAEDvC,sBAAsB,CAACH,WAAvB,GAAsC,0BAAyBF,cAAc,CAC3EC,gBAD2E,CAE3E,GAFF;EAIA,OAAOR,oBAAoB,CAACY,sBAAD,EAAyBJ,gBAAzB,CAA3B;AACD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}