{"ast":null,"code":"import _map from \"lodash/map\";\n\n/**\n * Sitemap helper.\n * @module helpers/Sitemap\n */\nimport superagent from 'superagent';\nimport zlib from 'zlib';\nimport { toPublicURL } from '@plone/volto/helpers';\nimport { addHeadersFactory } from '@plone/volto/helpers/Proxy/Proxy';\nimport config from '@plone/volto/registry';\n/**\n * Generate sitemap\n * @function generateSitemap\n * @param {Object} _req Request object\n * @return {string} Generated sitemap\n */\n\nexport const generateSitemap = _req => new Promise(resolve => {\n  var _settings$internalApi;\n\n  const {\n    settings\n  } = config;\n  const APISUFIX = settings.legacyTraverse ? '' : '/++api++';\n  const apiPath = (_settings$internalApi = settings.internalApiPath) !== null && _settings$internalApi !== void 0 ? _settings$internalApi : settings.apiPath;\n  const request = superagent.get(`${apiPath}${APISUFIX}/@search?metadata_fields=modified&b_size=100000000&use_site_search_settings=1`);\n  request.set('Accept', 'application/json');\n  request.use(addHeadersFactory(_req));\n\n  const authToken = _req.universalCookies.get('auth_token');\n\n  if (authToken) {\n    request.set('Authorization', `Bearer ${authToken}`);\n  }\n\n  request.end((error, {\n    body\n  } = {}) => {\n    if (error) {\n      resolve(body || error);\n    } else {\n      const items = _map(body.items, item => `  <url>\\n    <loc>${toPublicURL(item['@id'])}</loc>\\n\n            <lastmod>${item.modified}</lastmod>\\n  </url>`);\n\n      const result = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">\\n${items.join('\\n')}\\n</urlset>`;\n      zlib.gzip(Buffer.from(result, 'utf8'), (_err, buffer) => {\n        resolve(buffer);\n      });\n    }\n  });\n});","map":{"version":3,"names":["superagent","zlib","toPublicURL","addHeadersFactory","config","generateSitemap","_req","Promise","resolve","settings","APISUFIX","legacyTraverse","apiPath","internalApiPath","request","get","set","use","authToken","universalCookies","end","error","body","items","item","modified","result","join","gzip","Buffer","from","_err","buffer"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/helpers/Sitemap/Sitemap.js"],"sourcesContent":["/**\n * Sitemap helper.\n * @module helpers/Sitemap\n */\n\nimport superagent from 'superagent';\nimport { map } from 'lodash';\nimport zlib from 'zlib';\nimport { toPublicURL } from '@plone/volto/helpers';\nimport { addHeadersFactory } from '@plone/volto/helpers/Proxy/Proxy';\n\nimport config from '@plone/volto/registry';\n\n/**\n * Generate sitemap\n * @function generateSitemap\n * @param {Object} _req Request object\n * @return {string} Generated sitemap\n */\nexport const generateSitemap = (_req) =>\n  new Promise((resolve) => {\n    const { settings } = config;\n    const APISUFIX = settings.legacyTraverse ? '' : '/++api++';\n    const apiPath = settings.internalApiPath ?? settings.apiPath;\n    const request = superagent.get(\n      `${apiPath}${APISUFIX}/@search?metadata_fields=modified&b_size=100000000&use_site_search_settings=1`,\n    );\n    request.set('Accept', 'application/json');\n    request.use(addHeadersFactory(_req));\n    const authToken = _req.universalCookies.get('auth_token');\n    if (authToken) {\n      request.set('Authorization', `Bearer ${authToken}`);\n    }\n    request.end((error, { body } = {}) => {\n      if (error) {\n        resolve(body || error);\n      } else {\n        const items = map(\n          body.items,\n          (item) =>\n            `  <url>\\n    <loc>${toPublicURL(item['@id'])}</loc>\\n\n            <lastmod>${item.modified}</lastmod>\\n  </url>`,\n        );\n        const result = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">\\n${items.join(\n          '\\n',\n        )}\\n</urlset>`;\n        zlib.gzip(Buffer.from(result, 'utf8'), (_err, buffer) => {\n          resolve(buffer);\n        });\n      }\n    });\n  });\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAC7B,IAAIC,OAAJ,CAAaC,OAAD,IAAa;EAAA;;EACvB,MAAM;IAAEC;EAAF,IAAeL,MAArB;EACA,MAAMM,QAAQ,GAAGD,QAAQ,CAACE,cAAT,GAA0B,EAA1B,GAA+B,UAAhD;EACA,MAAMC,OAAO,4BAAGH,QAAQ,CAACI,eAAZ,yEAA+BJ,QAAQ,CAACG,OAArD;EACA,MAAME,OAAO,GAAGd,UAAU,CAACe,GAAX,CACb,GAAEH,OAAQ,GAAEF,QAAS,+EADR,CAAhB;EAGAI,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsB,kBAAtB;EACAF,OAAO,CAACG,GAAR,CAAYd,iBAAiB,CAACG,IAAD,CAA7B;;EACA,MAAMY,SAAS,GAAGZ,IAAI,CAACa,gBAAL,CAAsBJ,GAAtB,CAA0B,YAA1B,CAAlB;;EACA,IAAIG,SAAJ,EAAe;IACbJ,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA8B,UAASE,SAAU,EAAjD;EACD;;EACDJ,OAAO,CAACM,GAAR,CAAY,CAACC,KAAD,EAAQ;IAAEC;EAAF,IAAW,EAAnB,KAA0B;IACpC,IAAID,KAAJ,EAAW;MACTb,OAAO,CAACc,IAAI,IAAID,KAAT,CAAP;IACD,CAFD,MAEO;MACL,MAAME,KAAK,GAAG,KACZD,IAAI,CAACC,KADO,EAEXC,IAAD,IACG,qBAAoBtB,WAAW,CAACsB,IAAI,CAAC,KAAD,CAAL,CAAc;AAC1D,uBAAuBA,IAAI,CAACC,QAAS,sBAJf,CAAd;;MAMA,MAAMC,MAAM,GAAI,wRAAuRH,KAAK,CAACI,IAAN,CACrS,IADqS,CAErS,aAFF;MAGA1B,IAAI,CAAC2B,IAAL,CAAUC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoB,MAApB,CAAV,EAAuC,CAACK,IAAD,EAAOC,MAAP,KAAkB;QACvDxB,OAAO,CAACwB,MAAD,CAAP;MACD,CAFD;IAGD;EACF,CAjBD;AAkBD,CA/BD,CADK"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}