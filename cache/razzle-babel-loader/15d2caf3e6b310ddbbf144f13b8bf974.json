{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/DateRangeFacet.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { compose } from 'redux';\nimport { Icon } from '@plone/volto/components';\nimport { connect } from 'react-redux';\nimport leftKey from '@plone/volto/icons/left-key.svg';\nimport rightKey from '@plone/volto/icons/right-key.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nconst messages = defineMessages({\n  startDate: {\n    \"id\": \"Start Date\",\n    \"defaultMessage\": \"Start Date\"\n  },\n  endDate: {\n    \"id\": \"End Date\",\n    \"defaultMessage\": \"End Date\"\n  }\n});\n\nconst PrevIcon = () => __jsx(\"div\", {\n  className: \"prev-icon\",\n  style: {\n    color: '#000',\n    left: '22px',\n    padding: '5px',\n    position: 'absolute',\n    top: '15px'\n  } // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n  ,\n  tabIndex: \"0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}, __jsx(Icon, {\n  name: leftKey,\n  size: \"30px\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }\n}));\n\nconst NextIcon = () => __jsx(\"div\", {\n  className: \"next-icon\",\n  style: {\n    color: '#000',\n    right: '22px',\n    padding: '5px',\n    position: 'absolute',\n    top: '15px'\n  } // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n  ,\n  tabIndex: \"0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, __jsx(Icon, {\n  name: rightKey,\n  size: \"30px\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }\n}));\n\nconst CloseIcon = () => __jsx(Icon, {\n  name: clearSVG,\n  size: \"24px\",\n  className: \"close\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 25\n  }\n});\n\nconst DateRangeFacet = props => {\n  var _facet$title, _facet$field;\n\n  const {\n    facet,\n    isEditMode,\n    onChange,\n    value,\n    reactDates,\n    intl,\n    lang\n  } = props;\n  const moment = props.moment.default;\n  const {\n    DateRangePicker\n  } = reactDates;\n  const {\n    0: focused,\n    1: setFocused\n  } = useState(null);\n  return __jsx(\"div\", {\n    className: \"daterange-facet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    as: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, (_facet$title = facet === null || facet === void 0 ? void 0 : facet.title) !== null && _facet$title !== void 0 ? _facet$title : facet === null || facet === void 0 ? void 0 : (_facet$field = facet.field) === null || _facet$field === void 0 ? void 0 : _facet$field.label), __jsx(\"div\", {\n    className: \"ui form date-time-widget-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"ui input date-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(DateRangePicker, {\n    startDate: value && value[0] ? moment(value[0]) : null,\n    startDateId: `${facet['@id']}-start-date`,\n    startDatePlaceholderText: intl.formatMessage(messages.startDate),\n    endDate: value && value[1] ? moment(value[1]) : null,\n    endDateId: `${facet['@id']}-end-date`,\n    endDatePlaceholderText: intl.formatMessage(messages.endDate),\n    numberOfMonths: 1,\n    disabled: isEditMode,\n    noBorder: true,\n    showClearDates: true,\n    customCloseIcon: __jsx(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }\n    }),\n    displayFormat: moment.localeData(lang).longDateFormat('L'),\n    focusedInput: focused,\n    onFocusChange: focusedInput => setFocused(focusedInput),\n    onDatesChange: ({\n      startDate,\n      endDate\n    }) => {\n      onChange(facet.field.value, [startDate ? startDate.format('YYYY-MM-DD') : null, endDate ? endDate.format('YYYY-MM-DD') : null]);\n    },\n    isOutsideRange: () => false,\n    navPrev: __jsx(PrevIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }\n    }),\n    navNext: __jsx(NextIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))));\n};\n\nDateRangeFacet.stateToValue = ({\n  facetSettings,\n  index,\n  selectedValue\n}) => {\n  return selectedValue || [null, null];\n};\n\nDateRangeFacet.valueToQuery = ({\n  value,\n  facet\n}) => {\n  return value && typeof value[0] === 'string' && typeof value[1] === 'string' ? {\n    i: facet.field.value,\n    o: 'plone.app.querystring.operation.date.between',\n    v: value\n  } : null;\n};\n\nexport default compose(injectLazyLibs(['reactDates', 'moment']), connect(state => ({\n  lang: state.intl.locale\n})), injectIntl)(DateRangeFacet);","map":{"version":3,"names":["React","useState","Header","defineMessages","injectIntl","injectLazyLibs","compose","Icon","connect","leftKey","rightKey","clearSVG","messages","startDate","endDate","PrevIcon","color","left","padding","position","top","NextIcon","right","CloseIcon","DateRangeFacet","props","facet","isEditMode","onChange","value","reactDates","intl","lang","moment","default","DateRangePicker","focused","setFocused","title","field","label","formatMessage","localeData","longDateFormat","focusedInput","format","stateToValue","facetSettings","index","selectedValue","valueToQuery","i","o","v","state","locale"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/DateRangeFacet.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { compose } from 'redux';\nimport { Icon } from '@plone/volto/components';\nimport { connect } from 'react-redux';\n\nimport leftKey from '@plone/volto/icons/left-key.svg';\nimport rightKey from '@plone/volto/icons/right-key.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nconst messages = defineMessages({\n  startDate: {\n    id: 'Start Date',\n    defaultMessage: 'Start Date',\n  },\n  endDate: {\n    id: 'End Date',\n    defaultMessage: 'End Date',\n  },\n});\n\nconst PrevIcon = () => (\n  <div\n    className=\"prev-icon\"\n    style={{\n      color: '#000',\n      left: '22px',\n      padding: '5px',\n      position: 'absolute',\n      top: '15px',\n    }}\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    tabIndex=\"0\"\n  >\n    <Icon name={leftKey} size=\"30px\" />\n  </div>\n);\nconst NextIcon = () => (\n  <div\n    className=\"next-icon\"\n    style={{\n      color: '#000',\n      right: '22px',\n      padding: '5px',\n      position: 'absolute',\n      top: '15px',\n    }}\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n    tabIndex=\"0\"\n  >\n    <Icon name={rightKey} size=\"30px\" />\n  </div>\n);\n\nconst CloseIcon = () => <Icon name={clearSVG} size=\"24px\" className=\"close\" />;\n\nconst DateRangeFacet = (props) => {\n  const { facet, isEditMode, onChange, value, reactDates, intl, lang } = props;\n  const moment = props.moment.default;\n  const { DateRangePicker } = reactDates;\n  const [focused, setFocused] = useState(null);\n\n  return (\n    <div className=\"daterange-facet\">\n      <Header as=\"h4\">{facet?.title ?? facet?.field?.label}</Header>\n      <div className=\"ui form date-time-widget-wrapper\">\n        <div className=\"ui input date-input\">\n          <DateRangePicker\n            startDate={value && value[0] ? moment(value[0]) : null}\n            startDateId={`${facet['@id']}-start-date`}\n            startDatePlaceholderText={intl.formatMessage(messages.startDate)}\n            endDate={value && value[1] ? moment(value[1]) : null}\n            endDateId={`${facet['@id']}-end-date`}\n            endDatePlaceholderText={intl.formatMessage(messages.endDate)}\n            numberOfMonths={1}\n            disabled={isEditMode}\n            noBorder\n            showClearDates\n            customCloseIcon={<CloseIcon />}\n            displayFormat={moment.localeData(lang).longDateFormat('L')}\n            focusedInput={focused}\n            onFocusChange={(focusedInput) => setFocused(focusedInput)}\n            onDatesChange={({ startDate, endDate }) => {\n              onChange(facet.field.value, [\n                startDate ? startDate.format('YYYY-MM-DD') : null,\n                endDate ? endDate.format('YYYY-MM-DD') : null,\n              ]);\n            }}\n            isOutsideRange={() => false}\n            navPrev={<PrevIcon />}\n            navNext={<NextIcon />}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDateRangeFacet.stateToValue = ({ facetSettings, index, selectedValue }) => {\n  return selectedValue || [null, null];\n};\n\nDateRangeFacet.valueToQuery = ({ value, facet }) => {\n  return value && typeof value[0] === 'string' && typeof value[1] === 'string'\n    ? {\n        i: facet.field.value,\n        o: 'plone.app.querystring.operation.date.between',\n        v: value,\n      }\n    : null;\n};\n\nexport default compose(\n  injectLazyLibs(['reactDates', 'moment']),\n  connect((state) => ({\n    lang: state.intl.locale,\n  })),\n  injectIntl,\n)(DateRangeFacet);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Start Date","defaultMessage":"Start Date"},{"id":"End Date","defaultMessage":"End Date"}]}},"sourceType":"module"}