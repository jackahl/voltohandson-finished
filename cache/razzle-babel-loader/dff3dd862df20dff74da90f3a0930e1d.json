{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Form/UndoToolbar.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Plug } from '@plone/volto/components/manage/Pluggable';\nimport { Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport { useUndoManager } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport undoSVG from '@plone/volto/icons/undo.svg';\nimport redoSVG from '@plone/volto/icons/redo.svg';\nconst messages = defineMessages({\n  undo: {\n    \"id\": \"Undo\",\n    \"defaultMessage\": \"Undo\"\n  },\n  redo: {\n    \"id\": \"Redo\",\n    \"defaultMessage\": \"Redo\"\n  }\n});\n\nconst UndoToolbar = _ref => {\n  _s();\n\n  let {\n    state,\n    onUndoRedo,\n    maxUndoLevels,\n    enableHotKeys\n  } = _ref;\n  const intl = useIntl();\n  const undoLevels = maxUndoLevels !== null && maxUndoLevels !== void 0 ? maxUndoLevels : config.settings.maxUndoLevels;\n  const {\n    doUndo,\n    doRedo,\n    canUndo,\n    canRedo\n  } = useUndoManager(state, onUndoRedo, {\n    maxUndoLevels: undoLevels\n  });\n  return __jsx(React.Fragment, null, __jsx(Plug, {\n    pluggable: \"main.toolbar.bottom\",\n    id: \"undo-btn\",\n    dependencies: [canUndo, canRedo],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: \"undo\",\n    onClick: () => doUndo(),\n    \"aria-label\": intl.formatMessage(messages.undo),\n    disabled: !canUndo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: undoSVG,\n    className: \"circled\",\n    size: \"30px\",\n    title: intl.formatMessage(messages.undo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }))), __jsx(Plug, {\n    pluggable: \"main.toolbar.bottom\",\n    id: \"redo-btn\",\n    dependencies: [canUndo, canRedo],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: \"redo\",\n    onClick: () => doRedo(),\n    \"aria-label\": intl.formatMessage(messages.redo),\n    disabled: !canRedo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: redoSVG,\n    className: \"circled\",\n    size: \"30px\",\n    title: intl.formatMessage(messages.redo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(UndoToolbar, \"gELt0PbjpN12SgRGz/4otxK2Tbo=\", false, function () {\n  return [useIntl, useUndoManager];\n});\n\n_c = UndoToolbar;\nexport default UndoToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UndoToolbar\");","map":{"version":3,"names":["React","defineMessages","useIntl","Plug","Icon","Button","useUndoManager","config","undoSVG","redoSVG","messages","undo","redo","UndoToolbar","state","onUndoRedo","maxUndoLevels","enableHotKeys","intl","undoLevels","settings","doUndo","doRedo","canUndo","canRedo","formatMessage"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Form/UndoToolbar.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Plug } from '@plone/volto/components/manage/Pluggable';\nimport { Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport { useUndoManager } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport undoSVG from '@plone/volto/icons/undo.svg';\nimport redoSVG from '@plone/volto/icons/redo.svg';\n\nconst messages = defineMessages({\n  undo: {\n    id: 'Undo',\n    defaultMessage: 'Undo',\n  },\n  redo: {\n    id: 'Redo',\n    defaultMessage: 'Redo',\n  },\n});\n\nconst UndoToolbar = ({ state, onUndoRedo, maxUndoLevels, enableHotKeys }) => {\n  const intl = useIntl();\n  const undoLevels = maxUndoLevels ?? config.settings.maxUndoLevels;\n  const { doUndo, doRedo, canUndo, canRedo } = useUndoManager(\n    state,\n    onUndoRedo,\n    {\n      maxUndoLevels: undoLevels,\n    },\n  );\n\n  return (\n    <>\n      <Plug\n        pluggable=\"main.toolbar.bottom\"\n        id=\"undo-btn\"\n        dependencies={[canUndo, canRedo]}\n      >\n        <Button\n          className=\"undo\"\n          onClick={() => doUndo()}\n          aria-label={intl.formatMessage(messages.undo)}\n          disabled={!canUndo}\n        >\n          <Icon\n            name={undoSVG}\n            className=\"circled\"\n            size=\"30px\"\n            title={intl.formatMessage(messages.undo)}\n          />\n        </Button>\n      </Plug>\n      <Plug\n        pluggable=\"main.toolbar.bottom\"\n        id=\"redo-btn\"\n        dependencies={[canUndo, canRedo]}\n      >\n        <Button\n          className=\"redo\"\n          onClick={() => doRedo()}\n          aria-label={intl.formatMessage(messages.redo)}\n          disabled={!canRedo}\n        >\n          <Icon\n            name={redoSVG}\n            className=\"circled\"\n            size=\"30px\"\n            title={intl.formatMessage(messages.redo)}\n          />\n        </Button>\n      </Plug>\n    </>\n  );\n};\n\nexport default UndoToolbar;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,YAAxC;AACA,SAASC,IAAT,QAAqB,0CAArB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,MAAMC,QAAQ,GAAGT,cAAc,CAAC;EAC9BU,IAAI;IAAA;IAAA;EAAA,CAD0B;EAK9BC,IAAI;IAAA;IAAA;EAAA;AAL0B,CAAD,CAA/B;;AAWA,MAAMC,WAAW,GAAG,QAAyD;EAAA;;EAAA,IAAxD;IAAEC,KAAF;IAASC,UAAT;IAAqBC,aAArB;IAAoCC;EAApC,CAAwD;EAC3E,MAAMC,IAAI,GAAGhB,OAAO,EAApB;EACA,MAAMiB,UAAU,GAAGH,aAAH,aAAGA,aAAH,cAAGA,aAAH,GAAoBT,MAAM,CAACa,QAAP,CAAgBJ,aAApD;EACA,MAAM;IAAEK,MAAF;IAAUC,MAAV;IAAkBC,OAAlB;IAA2BC;EAA3B,IAAuClB,cAAc,CACzDQ,KADyD,EAEzDC,UAFyD,EAGzD;IACEC,aAAa,EAAEG;EADjB,CAHyD,CAA3D;EAQA,OACE,4BACE,MAAC,IAAD;IACE,SAAS,EAAC,qBADZ;IAEE,EAAE,EAAC,UAFL;IAGE,YAAY,EAAE,CAACI,OAAD,EAAUC,OAAV,CAHhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAKE,MAAC,MAAD;IACE,SAAS,EAAC,MADZ;IAEE,OAAO,EAAE,MAAMH,MAAM,EAFvB;IAGE,cAAYH,IAAI,CAACO,aAAL,CAAmBf,QAAQ,CAACC,IAA5B,CAHd;IAIE,QAAQ,EAAE,CAACY,OAJb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAME,MAAC,IAAD;IACE,IAAI,EAAEf,OADR;IAEE,SAAS,EAAC,SAFZ;IAGE,IAAI,EAAC,MAHP;IAIE,KAAK,EAAEU,IAAI,CAACO,aAAL,CAAmBf,QAAQ,CAACC,IAA5B,CAJT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANF,CALF,CADF,EAoBE,MAAC,IAAD;IACE,SAAS,EAAC,qBADZ;IAEE,EAAE,EAAC,UAFL;IAGE,YAAY,EAAE,CAACY,OAAD,EAAUC,OAAV,CAHhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAKE,MAAC,MAAD;IACE,SAAS,EAAC,MADZ;IAEE,OAAO,EAAE,MAAMF,MAAM,EAFvB;IAGE,cAAYJ,IAAI,CAACO,aAAL,CAAmBf,QAAQ,CAACE,IAA5B,CAHd;IAIE,QAAQ,EAAE,CAACY,OAJb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAME,MAAC,IAAD;IACE,IAAI,EAAEf,OADR;IAEE,SAAS,EAAC,SAFZ;IAGE,IAAI,EAAC,MAHP;IAIE,KAAK,EAAES,IAAI,CAACO,aAAL,CAAmBf,QAAQ,CAACE,IAA5B,CAJT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANF,CALF,CApBF,CADF;AA0CD,CArDD;;GAAMC,W;UACSX,O,EAEgCI,c;;;KAHzCO,W;AAuDN,eAAeA,WAAf"},"metadata":{"react-intl":{"messages":[{"id":"Undo","defaultMessage":"Undo"},{"id":"Redo","defaultMessage":"Redo"}]}},"sourceType":"module"}