{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Video/Body.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Body video block.\n * @module components/manage/Blocks/Video/Body\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Embed, Message } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\n/**\n * Body video block class.\n * @class Body\n * @extends Component\n */\n\nconst Body = _ref => {\n  let {\n    data,\n    isEditMode\n  } = _ref;\n  let placeholder = data.preview_image ? isInternalURL(data.preview_image) ? `${flattenToAppURL(data.preview_image)}/@@images/image` : data.preview_image : null;\n  let videoID = null;\n  let listID = null;\n\n  if (data.url) {\n    if (data.url.match('youtu')) {\n      if (data.url.match('list')) {\n        const matches = data.url.match(/^.*\\?list=(.*)|^.*&list=(.*)$/);\n        listID = matches[1] || matches[2];\n      } else {\n        videoID = data.url.match(/.be\\//) ? data.url.match(/^.*\\.be\\/(.*)/)[1] : data.url.match(/^.*\\?v=(.*)$/)[1];\n      }\n\n      if (!placeholder) {\n        //load video preview image from youtube\n        placeholder = 'https://img.youtube.com/vi/' + videoID + '/sddefault.jpg';\n      }\n    } else if (data.url.match('vimeo')) {\n      videoID = data.url.match(/^.*\\.com\\/(.*)/)[1];\n\n      if (!placeholder) {\n        placeholder = 'https://vumbnail.com/' + videoID + '.jpg';\n      }\n    }\n  }\n\n  const ref = /*#__PURE__*/React.createRef();\n\n  const onKeyDown = e => {\n    if (e.nativeEvent.keyCode === 13) {\n      ref.current.handleClick();\n    }\n  };\n\n  const embedSettings = {\n    placeholder: placeholder,\n    icon: 'play',\n    defaultActive: false,\n    autoplay: false,\n    aspectRatio: '16:9',\n    tabIndex: 0,\n    onKeyPress: onKeyDown,\n    ref: ref\n  };\n  return __jsx(React.Fragment, null, data.url && __jsx(\"div\", {\n    className: cx('video-inner', {\n      'full-width': data.align === 'full'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, data.url.match('youtu') ? __jsx(React.Fragment, null, data.url.match('list') ? __jsx(Embed, _extends({\n    url: `https://www.youtube.com/embed/videoseries?list=${listID}`\n  }, embedSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })) : __jsx(Embed, _extends({\n    id: videoID,\n    source: \"youtube\"\n  }, embedSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }))) : __jsx(React.Fragment, null, data.url.match('vimeo') ? __jsx(Embed, _extends({\n    id: videoID,\n    source: \"vimeo\"\n  }, embedSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })) : __jsx(React.Fragment, null, data.url.match('.mp4') ? // eslint-disable-next-line jsx-a11y/media-has-caption\n  __jsx(\"video\", {\n    src: isInternalURL(data.url) ? data.url.includes('@@download') ? data.url : `${flattenToAppURL(data.url)}/@@download/file` : data.url,\n    controls: true,\n    poster: placeholder,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }) : isEditMode ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }\n  }, __jsx(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Please enter a valid URL by deleting the block and adding a new video block.\",\n    defaultMessage: \"Please enter a valid URL by deleting the block and adding a new video block.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 27\n    }\n  })))) : __jsx(\"div\", {\n    className: \"invalidVideoFormat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  })))));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\n_c = Body;\nBody.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","PropTypes","FormattedMessage","Embed","Message","cx","isInternalURL","flattenToAppURL","Body","data","isEditMode","placeholder","preview_image","videoID","listID","url","match","matches","ref","createRef","onKeyDown","e","nativeEvent","keyCode","current","handleClick","embedSettings","icon","defaultActive","autoplay","aspectRatio","tabIndex","onKeyPress","align","includes","propTypes","objectOf","any","isRequired"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Video/Body.jsx"],"sourcesContent":["/**\n * Body video block.\n * @module components/manage/Blocks/Video/Body\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Embed, Message } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\n\n/**\n * Body video block class.\n * @class Body\n * @extends Component\n */\nconst Body = ({ data, isEditMode }) => {\n  let placeholder = data.preview_image\n    ? isInternalURL(data.preview_image)\n      ? `${flattenToAppURL(data.preview_image)}/@@images/image`\n      : data.preview_image\n    : null;\n\n  let videoID = null;\n  let listID = null;\n\n  if (data.url) {\n    if (data.url.match('youtu')) {\n      if (data.url.match('list')) {\n        const matches = data.url.match(/^.*\\?list=(.*)|^.*&list=(.*)$/);\n        listID = matches[1] || matches[2];\n      } else {\n        videoID = data.url.match(/.be\\//)\n          ? data.url.match(/^.*\\.be\\/(.*)/)[1]\n          : data.url.match(/^.*\\?v=(.*)$/)[1];\n      }\n\n      if (!placeholder) {\n        //load video preview image from youtube\n        placeholder =\n          'https://img.youtube.com/vi/' + videoID + '/sddefault.jpg';\n      }\n    } else if (data.url.match('vimeo')) {\n      videoID = data.url.match(/^.*\\.com\\/(.*)/)[1];\n      if (!placeholder) {\n        placeholder = 'https://vumbnail.com/' + videoID + '.jpg';\n      }\n    }\n  }\n\n  const ref = React.createRef();\n  const onKeyDown = (e) => {\n    if (e.nativeEvent.keyCode === 13) {\n      ref.current.handleClick();\n    }\n  };\n\n  const embedSettings = {\n    placeholder: placeholder,\n    icon: 'play',\n    defaultActive: false,\n    autoplay: false,\n    aspectRatio: '16:9',\n    tabIndex: 0,\n    onKeyPress: onKeyDown,\n    ref: ref,\n  };\n\n  return (\n    <>\n      {data.url && (\n        <div\n          className={cx('video-inner', {\n            'full-width': data.align === 'full',\n          })}\n        >\n          {data.url.match('youtu') ? (\n            <>\n              {data.url.match('list') ? (\n                <Embed\n                  url={`https://www.youtube.com/embed/videoseries?list=${listID}`}\n                  {...embedSettings}\n                />\n              ) : (\n                <Embed id={videoID} source=\"youtube\" {...embedSettings} />\n              )}\n            </>\n          ) : (\n            <>\n              {data.url.match('vimeo') ? (\n                <Embed id={videoID} source=\"vimeo\" {...embedSettings} />\n              ) : (\n                <>\n                  {data.url.match('.mp4') ? (\n                    // eslint-disable-next-line jsx-a11y/media-has-caption\n                    <video\n                      src={\n                        isInternalURL(data.url)\n                          ? data.url.includes('@@download')\n                            ? data.url\n                            : `${flattenToAppURL(data.url)}/@@download/file`\n                          : data.url\n                      }\n                      controls\n                      poster={placeholder}\n                      type=\"video/mp4\"\n                    />\n                  ) : isEditMode ? (\n                    <div>\n                      <Message>\n                        <center>\n                          <FormattedMessage\n                            id=\"Please enter a valid URL by deleting the block and adding a new video block.\"\n                            defaultMessage=\"Please enter a valid URL by deleting the block and adding a new video block.\"\n                          />\n                        </center>\n                      </Message>\n                    </div>\n                  ) : (\n                    <div className=\"invalidVideoFormat\" />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nBody.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Body;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Please enter a valid URL by deleting the block and adding a new video block.","defaultMessage":"Please enter a valid URL by deleting the block and adding a new video block."}]}},"sourceType":"module"}