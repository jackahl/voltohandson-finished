{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/ContactForm/ContactForm.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Contact Form container.\n * @module components/theme/ContactForm/ContactForm\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Container, Message, Icon } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Link, withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Form, Toolbar, Toast } from '@plone/volto/components';\nimport { emailNotification } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\nconst messages = defineMessages({\n  send: {\n    \"id\": \"Send\",\n    \"defaultMessage\": \"Send\"\n  },\n  contactForm: {\n    \"id\": \"Contact form\",\n    \"defaultMessage\": \"Contact form\"\n  },\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  name: {\n    \"id\": \"Name\",\n    \"defaultMessage\": \"Name\"\n  },\n  from: {\n    \"id\": \"From\",\n    \"defaultMessage\": \"From\"\n  },\n  subject: {\n    \"id\": \"Subject\",\n    \"defaultMessage\": \"Subject\"\n  },\n  message: {\n    \"id\": \"Message\",\n    \"defaultMessage\": \"Message\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  messageSent: {\n    \"id\": \"Email sent\",\n    \"defaultMessage\": \"Email sent\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  }\n});\n/**\n * ContactForm class.\n * @class ContactForm\n * @extends Component\n */\n\nexport class ContactFormComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.state = {\n      isClient: false\n    };\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.loading && nextProps.loaded) {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messageSent),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * On submit handler\n   * @method onSubmit\n   * @param {Object} data Data object.\n   * @returns {undefined}\n   */\n\n\n  onSubmit(data) {\n    this.props.emailNotification(data.from, data.message, data.name, data.subject);\n  }\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n\n\n  onCancel() {\n    this.props.history.goBack();\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"contact-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, __jsx(Container, {\n      id: \"view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.contactForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }), this.props.error && __jsx(Message, {\n      icon: \"warning\",\n      negative: true,\n      attached: true,\n      header: this.props.intl.formatMessage(messages.error),\n      content: this.props.error.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      formData: {\n        blocksLayoutFieldname: {}\n      },\n      submitLabel: this.props.intl.formatMessage(messages.send),\n      resetAfterSubmit: true,\n      title: this.props.intl.formatMessage(messages.contactForm),\n      loading: this.props.loading,\n      schema: {\n        fieldsets: [{\n          fields: ['name', 'from', 'subject', 'message'],\n          id: 'default',\n          title: this.props.intl.formatMessage(messages.default)\n        }],\n        properties: {\n          name: {\n            title: this.props.intl.formatMessage(messages.name),\n            type: 'string'\n          },\n          from: {\n            title: this.props.intl.formatMessage(messages.from),\n            type: 'email'\n          },\n          subject: {\n            title: this.props.intl.formatMessage(messages.subject),\n            type: 'string'\n          },\n          message: {\n            title: this.props.intl.formatMessage(messages.message),\n            type: 'string',\n            widget: 'textarea'\n          }\n        },\n        required: ['from', 'message']\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        to: `${getBaseUrl(this.props.pathname)}`,\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: \"arrow left\",\n        size: \"big\",\n        color: \"blue\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\n_defineProperty(ContactFormComponent, \"propTypes\", {\n  emailNotification: PropTypes.func.isRequired,\n  error: PropTypes.shape({\n    message: PropTypes.string\n  }),\n  loading: PropTypes.bool,\n  loaded: PropTypes.bool,\n  pathname: PropTypes.string.isRequired\n});\n\n_defineProperty(ContactFormComponent, \"defaultProps\", {\n  error: null,\n  loading: null,\n  loaded: null\n});\n\nexport default compose(withRouter, injectIntl, connect((state, props) => ({\n  loading: state.emailNotification.loading,\n  loaded: state.emailNotification.loaded,\n  error: state.emailNotification.error,\n  pathname: props.location.pathname\n}), {\n  emailNotification\n}))(ContactFormComponent);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","Portal","Container","Message","Icon","defineMessages","injectIntl","Link","withRouter","toast","Form","Toolbar","Toast","emailNotification","getBaseUrl","messages","send","contactForm","default","name","from","subject","message","error","messageSent","back","success","ContactFormComponent","constructor","props","onSubmit","bind","onCancel","state","isClient","UNSAFE_componentWillReceiveProps","nextProps","loading","loaded","intl","formatMessage","componentDidMount","setState","data","history","goBack","render","blocksLayoutFieldname","fieldsets","fields","id","title","properties","type","widget","required","document","getElementById","pathname","func","isRequired","shape","string","bool","location"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/ContactForm/ContactForm.jsx"],"sourcesContent":["/**\n * Contact Form container.\n * @module components/theme/ContactForm/ContactForm\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Container, Message, Icon } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Link, withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { Form, Toolbar, Toast } from '@plone/volto/components';\nimport { emailNotification } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nconst messages = defineMessages({\n  send: {\n    id: 'Send',\n    defaultMessage: 'Send',\n  },\n  contactForm: {\n    id: 'Contact form',\n    defaultMessage: 'Contact form',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  name: {\n    id: 'Name',\n    defaultMessage: 'Name',\n  },\n  from: {\n    id: 'From',\n    defaultMessage: 'From',\n  },\n  subject: {\n    id: 'Subject',\n    defaultMessage: 'Subject',\n  },\n  message: {\n    id: 'Message',\n    defaultMessage: 'Message',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  messageSent: {\n    id: 'Email sent',\n    defaultMessage: 'Email sent',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n});\n\n/**\n * ContactForm class.\n * @class ContactForm\n * @extends Component\n */\nexport class ContactFormComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    emailNotification: PropTypes.func.isRequired,\n    error: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n    loading: null,\n    loaded: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.loading && nextProps.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageSent)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * On submit handler\n   * @method onSubmit\n   * @param {Object} data Data object.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.emailNotification(\n      data.from,\n      data.message,\n      data.name,\n      data.subject,\n    );\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.goBack();\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"contact-form\">\n        <Container id=\"view\">\n          <Helmet title={this.props.intl.formatMessage(messages.contactForm)} />\n          {this.props.error && (\n            <Message\n              icon=\"warning\"\n              negative\n              attached\n              header={this.props.intl.formatMessage(messages.error)}\n              content={this.props.error.message}\n            />\n          )}\n          <Form\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n            formData={{ blocksLayoutFieldname: {} }}\n            submitLabel={this.props.intl.formatMessage(messages.send)}\n            resetAfterSubmit\n            title={this.props.intl.formatMessage(messages.contactForm)}\n            loading={this.props.loading}\n            schema={{\n              fieldsets: [\n                {\n                  fields: ['name', 'from', 'subject', 'message'],\n                  id: 'default',\n                  title: this.props.intl.formatMessage(messages.default),\n                },\n              ],\n              properties: {\n                name: {\n                  title: this.props.intl.formatMessage(messages.name),\n                  type: 'string',\n                },\n                from: {\n                  title: this.props.intl.formatMessage(messages.from),\n                  type: 'email',\n                },\n                subject: {\n                  title: this.props.intl.formatMessage(messages.subject),\n                  type: 'string',\n                },\n                message: {\n                  title: this.props.intl.formatMessage(messages.message),\n                  type: 'string',\n                  widget: 'textarea',\n                },\n              },\n              required: ['from', 'message'],\n            }}\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <Link\n                    to={`${getBaseUrl(this.props.pathname)}`}\n                    className=\"item\"\n                  >\n                    <Icon\n                      name=\"arrow left\"\n                      size=\"big\"\n                      color=\"blue\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                }\n              />\n            </Portal>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      loading: state.emailNotification.loading,\n      loaded: state.emailNotification.loaded,\n      error: state.emailNotification.error,\n      pathname: props.location.pathname,\n    }),\n    { emailNotification },\n  ),\n)(ContactFormComponent);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Send","defaultMessage":"Send"},{"id":"Contact form","defaultMessage":"Contact form"},{"id":"Default","defaultMessage":"Default"},{"id":"Name","defaultMessage":"Name"},{"id":"From","defaultMessage":"From"},{"id":"Subject","defaultMessage":"Subject"},{"id":"Message","defaultMessage":"Message"},{"id":"Error","defaultMessage":"Error"},{"id":"Email sent","defaultMessage":"Email sent"},{"id":"Back","defaultMessage":"Back"},{"id":"Success","defaultMessage":"Success"}]}},"sourceType":"module"}