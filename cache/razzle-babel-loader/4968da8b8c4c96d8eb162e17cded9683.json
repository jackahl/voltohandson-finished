{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/EndField.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * EndField component.\n * @module components/manage/Widgets/RecurrenceWidget/EndField\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Form, Grid, Input, Radio } from 'semantic-ui-react';\nimport DatetimeWidget from '../DatetimeWidget';\nconst messages = defineMessages({\n  recurrenceEnds: {\n    \"id\": \"Recurrence ends\",\n    \"defaultMessage\": \"Ends\"\n  },\n  recurrenceEndsCount: {\n    \"id\": \"Recurrence ends after\",\n    \"defaultMessage\": \"after\"\n  },\n  recurrenceEndsUntil: {\n    \"id\": \"Recurrence ends on\",\n    \"defaultMessage\": \"on\"\n  },\n  occurrences: {\n    \"id\": \"Occurences\",\n    \"defaultMessage\": \"occurrence(s)\"\n  }\n});\n/**\n * EndField component class.\n * @function EndField\n * @returns {string} Markup of the component.\n */\n\nconst EndField = _ref => {\n  let {\n    value,\n    count,\n    until,\n    onChange,\n    intl\n  } = _ref;\n  return __jsx(Form.Field, {\n    inline: true,\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Row, {\n    stretched: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    width: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"recurrenceEnds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, intl.formatMessage(messages.recurrenceEnds)))), __jsx(Grid.Column, {\n    width: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Group, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, __jsx(Radio, {\n    label: \"\",\n    name: \"recurrenceEnds\",\n    id: \"recurrenceEndsCount\",\n    value: \"count\",\n    checked: value === 'count',\n    onChange: (e, _ref2) => {\n      let {\n        value\n      } = _ref2;\n      return onChange('recurrenceEnds', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })), __jsx(Form.Field, {\n    disabled: value !== 'count',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, intl.formatMessage(messages.recurrenceEndsCount)), __jsx(Form.Field, {\n    disabled: value !== 'count',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    id: \"count\",\n    name: \"count\",\n    value: count || '',\n    onChange: _ref3 => {\n      let {\n        target\n      } = _ref3;\n      onChange(target.id, target.value === '' ? undefined : target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), __jsx(Form.Field, {\n    disabled: value !== 'count',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, intl.formatMessage(messages.occurrences))), __jsx(Form.Group, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, __jsx(Radio, {\n    id: \"recurrenceEndsUntil\",\n    label: \"\",\n    name: \"recurrenceEnds\",\n    value: \"until\",\n    checked: value === 'until',\n    onChange: (e, _ref4) => {\n      let {\n        value\n      } = _ref4;\n      return onChange('recurrenceEnds', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), __jsx(Form.Field, {\n    disabled: value !== 'until',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(DatetimeWidget, {\n    id: \"until\",\n    title: intl.formatMessage(messages.recurrenceEndsUntil),\n    dateOnly: true,\n    value: until || '',\n    resettable: false,\n    onChange: (id, value) => {\n      onChange(id, value === '' ? undefined : value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })))))));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n\n\n_c = EndField;\nEndField.propTypes = {\n  value: PropTypes.string,\n  count: PropTypes.any,\n  until: PropTypes.any,\n  onChange: PropTypes.func\n};\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\n\nEndField.defaultProps = {\n  value: null,\n  count: null,\n  until: null,\n  onChange: null\n};\nexport default _c2 = injectIntl(EndField);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EndField\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","defineMessages","injectIntl","Form","Grid","Input","Radio","DatetimeWidget","messages","recurrenceEnds","recurrenceEndsCount","recurrenceEndsUntil","occurrences","EndField","value","count","until","onChange","intl","formatMessage","e","target","id","undefined","propTypes","string","any","func","defaultProps"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/RecurrenceWidget/EndField.jsx"],"sourcesContent":["/**\n * EndField component.\n * @module components/manage/Widgets/RecurrenceWidget/EndField\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Form, Grid, Input, Radio } from 'semantic-ui-react';\nimport DatetimeWidget from '../DatetimeWidget';\n\nconst messages = defineMessages({\n  recurrenceEnds: { id: 'Recurrence ends', defaultMessage: 'Ends' },\n  recurrenceEndsCount: { id: 'Recurrence ends after', defaultMessage: 'after' },\n  recurrenceEndsUntil: { id: 'Recurrence ends on', defaultMessage: 'on' },\n  occurrences: { id: 'Occurences', defaultMessage: 'occurrence(s)' },\n});\n/**\n * EndField component class.\n * @function EndField\n * @returns {string} Markup of the component.\n */\nconst EndField = ({ value, count, until, onChange, intl }) => {\n  return (\n    <Form.Field inline className=\"text\">\n      <Grid>\n        <Grid.Row stretched>\n          <Grid.Column width=\"4\">\n            <div className=\"wrapper\">\n              <label htmlFor=\"recurrenceEnds\">\n                {intl.formatMessage(messages.recurrenceEnds)}\n              </label>\n            </div>\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <Form.Group inline>\n              <Form.Field>\n                <Radio\n                  label=\"\"\n                  name=\"recurrenceEnds\"\n                  id=\"recurrenceEndsCount\"\n                  value=\"count\"\n                  checked={value === 'count'}\n                  onChange={(e, { value }) => onChange('recurrenceEnds', value)}\n                />\n              </Form.Field>\n              <Form.Field disabled={value !== 'count'}>\n                {intl.formatMessage(messages.recurrenceEndsCount)}\n              </Form.Field>\n              <Form.Field disabled={value !== 'count'}>\n                <Input\n                  id=\"count\"\n                  name=\"count\"\n                  value={count || ''}\n                  onChange={({ target }) => {\n                    onChange(\n                      target.id,\n                      target.value === '' ? undefined : target.value,\n                    );\n                  }}\n                />\n              </Form.Field>\n              <Form.Field disabled={value !== 'count'}>\n                {intl.formatMessage(messages.occurrences)}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group inline>\n              <Form.Field>\n                <Radio\n                  id=\"recurrenceEndsUntil\"\n                  label=\"\"\n                  name=\"recurrenceEnds\"\n                  value=\"until\"\n                  checked={value === 'until'}\n                  onChange={(e, { value }) => onChange('recurrenceEnds', value)}\n                />\n              </Form.Field>\n\n              <Form.Field disabled={value !== 'until'}>\n                <DatetimeWidget\n                  id=\"until\"\n                  title={intl.formatMessage(messages.recurrenceEndsUntil)}\n                  dateOnly={true}\n                  value={until || ''}\n                  resettable={false}\n                  onChange={(id, value) => {\n                    onChange(id, value === '' ? undefined : value);\n                  }}\n                />\n              </Form.Field>\n            </Form.Group>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form.Field>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nEndField.propTypes = {\n  value: PropTypes.string,\n  count: PropTypes.any,\n  until: PropTypes.any,\n  onChange: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nEndField.defaultProps = {\n  value: null,\n  count: null,\n  until: null,\n  onChange: null,\n};\n\nexport default injectIntl(EndField);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Recurrence ends","defaultMessage":"Ends"},{"id":"Recurrence ends after","defaultMessage":"after"},{"id":"Recurrence ends on","defaultMessage":"on"},{"id":"Occurences","defaultMessage":"occurrence(s)"}]}},"sourceType":"module"}