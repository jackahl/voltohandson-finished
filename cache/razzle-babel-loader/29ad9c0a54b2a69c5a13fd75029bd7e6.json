{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Image/Edit.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { Button, Dimmer, Input, Loader, Message } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport loadable from '@loadable/component';\nimport cx from 'classnames';\nimport { Icon, ImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport { createContent } from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl, isInternalURL } from '@plone/volto/helpers';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nconst Dropzone = loadable({\n  resolved: {},\n\n  chunkName() {\n    return \"react-dropzone\";\n  },\n\n  isReady(props) {\n    const key = this.resolve(props);\n\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n\n    return false;\n  },\n\n  importAsync: () => import(\n  /* webpackChunkName: \"react-dropzone\" */\n  'react-dropzone'),\n\n  requireAsync(props) {\n    const key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(resolved => {\n      this.resolved[key] = true;\n      return resolved;\n    });\n  },\n\n  requireSync(props) {\n    const id = this.resolve(props);\n\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n\n    return eval('module.require')(id);\n  },\n\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-dropzone\");\n    }\n\n    return eval('require.resolve')(\"react-dropzone\");\n  }\n\n});\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    \"id\": \"Browse the site, drop an image, or type an URL\",\n    \"defaultMessage\": \"Browse the site, drop an image, or type an URL\"\n  }\n});\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\n\nclass Edit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      uploading: false,\n      url: '',\n      dragging: false\n    });\n\n    _defineProperty(this, \"onUploadImage\", e => {\n      e.stopPropagation();\n      const file = e.target.files[0];\n      this.setState({\n        uploading: true\n      });\n      readAsDataURL(file).then(data => {\n        const fields = data.match(/^data:(.*);(.*),(.*)$/);\n        this.props.createContent(getBaseUrl(this.props.pathname), {\n          '@type': 'Image',\n          title: file.name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name\n          }\n        }, this.props.block);\n      });\n    });\n\n    _defineProperty(this, \"onChangeUrl\", ({\n      target\n    }) => {\n      this.setState({\n        url: target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmitUrl\", () => {\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        url: flattenToAppURL(this.state.url)\n      }));\n    });\n\n    _defineProperty(this, \"onDrop\", file => {\n      this.setState({\n        uploading: true\n      });\n      readAsDataURL(file[0]).then(data => {\n        const fields = data.match(/^data:(.*);(.*),(.*)$/);\n        this.props.createContent(getBaseUrl(this.props.pathname), {\n          '@type': 'Image',\n          title: file[0].name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file[0].name\n          }\n        }, this.props.block);\n      });\n    });\n\n    _defineProperty(this, \"onKeyDownVariantMenuForm\", e => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        this.onSubmitUrl();\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        e.stopPropagation(); // TODO: Do something on ESC key\n      }\n    });\n\n    _defineProperty(this, \"onDragEnter\", () => {\n      this.setState({\n        dragging: true\n      });\n    });\n\n    _defineProperty(this, \"onDragLeave\", () => {\n      this.setState({\n        dragging: false\n      });\n    });\n\n    _defineProperty(this, \"node\", /*#__PURE__*/React.createRef());\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded && this.state.uploading) {\n      this.setState({\n        uploading: false\n      });\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        url: nextProps.content['@id'],\n        alt: ''\n      }));\n    }\n  }\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || nextProps.selected || !_isEqual(this.props.data, nextProps.data);\n  }\n  /**\n   * Upload image handler (not used), but useful in case that we want a button\n   * not powered by react-dropzone\n   * @method onUploadImage\n   * @returns {undefined}\n   */\n\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      data\n    } = this.props;\n    const placeholder = this.props.data.placeholder || this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n    return __jsx(\"div\", {\n      className: cx('block image align', {\n        center: !Boolean(data.align)\n      }, data.align),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, data.url ? __jsx(\"img\", {\n      className: cx({\n        'full-width': data.align === 'full',\n        large: data.size === 'l',\n        medium: data.size === 'm',\n        small: data.size === 's'\n      }),\n      src: isInternalURL(data.url) ? // Backwards compat in the case that the block is storing the full server URL\n      (() => {\n        if (data.size === 'l') return `${flattenToAppURL(data.url)}/@@images/image`;\n        if (data.size === 'm') return `${flattenToAppURL(data.url)}/@@images/image/preview`;\n        if (data.size === 's') return `${flattenToAppURL(data.url)}/@@images/image/mini`;\n        return `${flattenToAppURL(data.url)}/@@images/image`;\n      })() : data.url,\n      alt: data.alt || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    }) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, this.props.editable && __jsx(Dropzone, {\n      noClick: true,\n      onDrop: this.onDrop,\n      onDragEnter: this.onDragEnter,\n      onDragLeave: this.onDragLeave,\n      className: \"dropzone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => __jsx(\"div\", _extends({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }), __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, this.state.dragging && __jsx(Dimmer, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 47\n      }\n    }), this.state.uploading && __jsx(Dimmer, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }\n    }, __jsx(Loader, {\n      indeterminate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 27\n      }\n    }, \"Uploading image\")), __jsx(\"div\", {\n      className: \"no-image-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 23\n      }\n    }, __jsx(\"img\", {\n      src: imageBlockSVG,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"toolbar-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 27\n      }\n    }, __jsx(Button, {\n      basic: true,\n      icon: true,\n      onClick: e => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.props.openObjectBrowser();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      name: navTreeSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 31\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 27\n      }\n    }, __jsx(\"label\", {\n      className: \"ui button basic icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      name: uploadSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 31\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps({\n      type: 'file',\n      onChange: this.onUploadImage,\n      style: {\n        display: 'none'\n      }\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 31\n      }\n    })))), __jsx(Input, {\n      onKeyDown: this.onKeyDownVariantMenuForm,\n      onChange: this.onChangeUrl,\n      placeholder: placeholder,\n      value: this.state.url,\n      onClick: e => {\n        e.target.focus();\n      },\n      onFocus: e => {\n        this.props.onSelectBlock(this.props.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 27\n      }\n    }), this.state.url && __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      basic: true,\n      className: \"cancel\",\n      onClick: e => {\n        e.stopPropagation();\n        this.setState({\n          url: ''\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 31\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 33\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 27\n      }\n    }, __jsx(Button, {\n      basic: true,\n      primary: true,\n      disabled: !this.state.url,\n      onClick: e => {\n        e.stopPropagation();\n        this.onSubmitUrl();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      name: aheadSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 31\n      }\n    }))))))))), __jsx(SidebarPortal, {\n      selected: this.props.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }\n    }, __jsx(ImageSidebar, _extends({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\n_defineProperty(Edit, \"propTypes\", {\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  content: PropTypes.objectOf(PropTypes.any).isRequired,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  onFocusPreviousBlock: PropTypes.func.isRequired,\n  onFocusNextBlock: PropTypes.func.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  createContent: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired\n});\n\nexport default compose(injectIntl, withBlockExtensions, connect((state, ownProps) => {\n  var _state$content$subreq;\n\n  return {\n    request: state.content.subrequests[ownProps.block] || {},\n    content: (_state$content$subreq = state.content.subrequests[ownProps.block]) === null || _state$content$subreq === void 0 ? void 0 : _state$content$subreq.data\n  };\n}, {\n  createContent\n}))(Edit);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","readAsDataURL","Button","Dimmer","Input","Loader","Message","defineMessages","injectIntl","loadable","cx","Icon","ImageSidebar","SidebarPortal","withBlockExtensions","createContent","flattenToAppURL","getBaseUrl","isInternalURL","imageBlockSVG","clearSVG","navTreeSVG","aheadSVG","uploadSVG","Dropzone","messages","ImageBlockInputPlaceholder","Edit","uploading","url","dragging","e","stopPropagation","file","target","files","setState","then","data","fields","match","props","pathname","title","name","image","encoding","filename","block","value","onChangeBlock","state","key","preventDefault","onSubmitUrl","createRef","UNSAFE_componentWillReceiveProps","nextProps","request","loading","loaded","content","alt","shouldComponentUpdate","selected","render","placeholder","intl","formatMessage","center","Boolean","align","large","size","medium","small","editable","onDrop","onDragEnter","onDragLeave","getRootProps","getInputProps","openObjectBrowser","type","onChange","onUploadImage","style","display","onKeyDownVariantMenuForm","onChangeUrl","focus","onSelectBlock","id","bool","isRequired","string","index","number","objectOf","any","shape","func","onDeleteBlock","onFocusPreviousBlock","onFocusNextBlock","handleKeyDown","ownProps","subrequests"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Image/Edit.jsx"],"sourcesContent":["/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { Button, Dimmer, Input, Loader, Message } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport loadable from '@loadable/component';\nimport cx from 'classnames';\nimport { isEqual } from 'lodash';\n\nimport { Icon, ImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport { createContent } from '@plone/volto/actions';\nimport {\n  flattenToAppURL,\n  getBaseUrl,\n  isInternalURL,\n} from '@plone/volto/helpers';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\n\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    id: 'Browse the site, drop an image, or type an URL',\n    defaultMessage: 'Browse the site, drop an image, or type an URL',\n  },\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    content: PropTypes.objectOf(PropTypes.any).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    handleKeyDown: PropTypes.func.isRequired,\n    createContent: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  state = {\n    uploading: false,\n    url: '',\n    dragging: false,\n  };\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.request.loading &&\n      nextProps.request.loaded &&\n      this.state.uploading\n    ) {\n      this.setState({\n        uploading: false,\n      });\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        url: nextProps.content['@id'],\n        alt: '',\n      });\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.selected ||\n      nextProps.selected ||\n      !isEqual(this.props.data, nextProps.data)\n    );\n  }\n\n  /**\n   * Upload image handler (not used), but useful in case that we want a button\n   * not powered by react-dropzone\n   * @method onUploadImage\n   * @returns {undefined}\n   */\n  onUploadImage = (e) => {\n    e.stopPropagation();\n    const file = e.target.files[0];\n    this.setState({\n      uploading: true,\n    });\n    readAsDataURL(file).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          title: file.name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  };\n\n  /**\n   * Change url handler\n   * @method onChangeUrl\n   * @param {Object} target Target object\n   * @returns {undefined}\n   */\n  onChangeUrl = ({ target }) => {\n    this.setState({\n      url: target.value,\n    });\n  };\n\n  /**\n   * Submit url handler\n   * @method onSubmitUrl\n   * @param {object} e Event\n   * @returns {undefined}\n   */\n  onSubmitUrl = () => {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      url: flattenToAppURL(this.state.url),\n    });\n  };\n\n  /**\n   * Drop handler\n   * @method onDrop\n   * @param {array} files File objects\n   * @returns {undefined}\n   */\n  onDrop = (file) => {\n    this.setState({\n      uploading: true,\n    });\n\n    readAsDataURL(file[0]).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          title: file[0].name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file[0].name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  };\n\n  /**\n   * Keydown handler on Variant Menu Form\n   * This is required since the ENTER key is already mapped to a onKeyDown\n   * event and needs to be overriden with a child onKeyDown.\n   * @method onKeyDownVariantMenuForm\n   * @param {Object} e Event object\n   * @returns {undefined}\n   */\n  onKeyDownVariantMenuForm = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n      this.onSubmitUrl();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      e.stopPropagation();\n      // TODO: Do something on ESC key\n    }\n  };\n  onDragEnter = () => {\n    this.setState({ dragging: true });\n  };\n  onDragLeave = () => {\n    this.setState({ dragging: false });\n  };\n\n  node = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { data } = this.props;\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n    return (\n      <div\n        className={cx(\n          'block image align',\n          {\n            center: !Boolean(data.align),\n          },\n          data.align,\n        )}\n      >\n        {data.url ? (\n          <img\n            className={cx({\n              'full-width': data.align === 'full',\n              large: data.size === 'l',\n              medium: data.size === 'm',\n              small: data.size === 's',\n            })}\n            src={\n              isInternalURL(data.url)\n                ? // Backwards compat in the case that the block is storing the full server URL\n                  (() => {\n                    if (data.size === 'l')\n                      return `${flattenToAppURL(data.url)}/@@images/image`;\n                    if (data.size === 'm')\n                      return `${flattenToAppURL(\n                        data.url,\n                      )}/@@images/image/preview`;\n                    if (data.size === 's')\n                      return `${flattenToAppURL(data.url)}/@@images/image/mini`;\n                    return `${flattenToAppURL(data.url)}/@@images/image`;\n                  })()\n                : data.url\n            }\n            alt={data.alt || ''}\n          />\n        ) : (\n          <div>\n            {this.props.editable && (\n              <Dropzone\n                noClick\n                onDrop={this.onDrop}\n                onDragEnter={this.onDragEnter}\n                onDragLeave={this.onDragLeave}\n                className=\"dropzone\"\n              >\n                {({ getRootProps, getInputProps }) => (\n                  <div {...getRootProps()}>\n                    <Message>\n                      {this.state.dragging && <Dimmer active></Dimmer>}\n                      {this.state.uploading && (\n                        <Dimmer active>\n                          <Loader indeterminate>Uploading image</Loader>\n                        </Dimmer>\n                      )}\n                      <div className=\"no-image-wrapper\">\n                        <img src={imageBlockSVG} alt=\"\" />\n                        <div className=\"toolbar-inner\">\n                          <Button.Group>\n                            <Button\n                              basic\n                              icon\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                e.preventDefault();\n                                this.props.openObjectBrowser();\n                              }}\n                            >\n                              <Icon name={navTreeSVG} size=\"24px\" />\n                            </Button>\n                          </Button.Group>\n                          <Button.Group>\n                            <label className=\"ui button basic icon\">\n                              <Icon name={uploadSVG} size=\"24px\" />\n                              <input\n                                {...getInputProps({\n                                  type: 'file',\n                                  onChange: this.onUploadImage,\n                                  style: { display: 'none' },\n                                })}\n                              />\n                            </label>\n                          </Button.Group>\n                          <Input\n                            onKeyDown={this.onKeyDownVariantMenuForm}\n                            onChange={this.onChangeUrl}\n                            placeholder={placeholder}\n                            value={this.state.url}\n                            onClick={(e) => {\n                              e.target.focus();\n                            }}\n                            onFocus={(e) => {\n                              this.props.onSelectBlock(this.props.id);\n                            }}\n                          />\n                          {this.state.url && (\n                            <Button.Group>\n                              <Button\n                                basic\n                                className=\"cancel\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  this.setState({ url: '' });\n                                }}\n                              >\n                                <Icon name={clearSVG} size=\"30px\" />\n                              </Button>\n                            </Button.Group>\n                          )}\n                          <Button.Group>\n                            <Button\n                              basic\n                              primary\n                              disabled={!this.state.url}\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                this.onSubmitUrl();\n                              }}\n                            >\n                              <Icon name={aheadSVG} size=\"30px\" />\n                            </Button>\n                          </Button.Group>\n                        </div>\n                      </div>\n                    </Message>\n                  </div>\n                )}\n              </Dropzone>\n            )}\n          </div>\n        )}\n        <SidebarPortal selected={this.props.selected}>\n          <ImageSidebar {...this.props} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withBlockExtensions,\n  connect(\n    (state, ownProps) => ({\n      request: state.content.subrequests[ownProps.block] || {},\n      content: state.content.subrequests[ownProps.block]?.data,\n    }),\n    { createContent },\n  ),\n)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Browse the site, drop an image, or type an URL","defaultMessage":"Browse the site, drop an image, or type an URL"}]}},"sourceType":"module"}