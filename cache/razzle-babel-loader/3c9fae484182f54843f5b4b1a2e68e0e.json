{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Logo/Logo.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/**\n * Logo component.\n * @module components/theme/Logo/Logo\n */\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Image } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport config from '@plone/volto/registry';\nimport { UniversalLink } from '@plone/volto/components';\nimport LogoImage from '@plone/volto/components/theme/Logo/Logo.svg';\nconst messages = defineMessages({\n  site: {\n    \"id\": \"Site\",\n    \"defaultMessage\": \"Site\"\n  },\n  plonesite: {\n    \"id\": \"Plone Site\",\n    \"defaultMessage\": \"Plone Site\"\n  }\n});\n/**\n * Logo component class.\n * @function Logo\n * @param {Object} intl Intl object\n * @returns {string} Markup of the component.\n */\n\nconst Logo = () => {\n  const {\n    settings\n  } = config;\n  const lang = useSelector(state => state.intl.locale);\n  const intl = useIntl();\n  return __jsx(UniversalLink, {\n    href: settings.isMultilingual ? `/${lang}` : '/',\n    title: intl.formatMessage(messages.site),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Image, {\n    src: LogoImage,\n    alt: intl.formatMessage(messages.plonesite),\n    title: intl.formatMessage(messages.plonesite),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Logo;","map":{"version":3,"names":["defineMessages","useIntl","Image","useSelector","config","UniversalLink","LogoImage","messages","site","plonesite","Logo","settings","lang","state","intl","locale","isMultilingual","formatMessage"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Logo/Logo.jsx"],"sourcesContent":["/**\n * Logo component.\n * @module components/theme/Logo/Logo\n */\n\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Image } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport config from '@plone/volto/registry';\nimport { UniversalLink } from '@plone/volto/components';\nimport LogoImage from '@plone/volto/components/theme/Logo/Logo.svg';\n\nconst messages = defineMessages({\n  site: {\n    id: 'Site',\n    defaultMessage: 'Site',\n  },\n  plonesite: {\n    id: 'Plone Site',\n    defaultMessage: 'Plone Site',\n  },\n});\n\n/**\n * Logo component class.\n * @function Logo\n * @param {Object} intl Intl object\n * @returns {string} Markup of the component.\n */\nconst Logo = () => {\n  const { settings } = config;\n  const lang = useSelector((state) => state.intl.locale);\n  const intl = useIntl();\n\n  return (\n    <UniversalLink\n      href={settings.isMultilingual ? `/${lang}` : '/'}\n      title={intl.formatMessage(messages.site)}\n    >\n      <Image\n        src={LogoImage}\n        alt={intl.formatMessage(messages.plonesite)}\n        title={intl.formatMessage(messages.plonesite)}\n      />\n    </UniversalLink>\n  );\n};\n\nexport default Logo;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA,SAASA,cAAT,EAAyBC,OAAzB,QAAwC,YAAxC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,SAAP,MAAsB,6CAAtB;AAEA,MAAMC,QAAQ,GAAGP,cAAc,CAAC;EAC9BQ,IAAI;IAAA;IAAA;EAAA,CAD0B;EAK9BC,SAAS;IAAA;IAAA;EAAA;AALqB,CAAD,CAA/B;AAWA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAM;IAAEC;EAAF,IAAeP,MAArB;EACA,MAAMQ,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,MAAvB,CAAxB;EACA,MAAMD,IAAI,GAAGb,OAAO,EAApB;EAEA,OACE,MAAC,aAAD;IACE,IAAI,EAAEU,QAAQ,CAACK,cAAT,GAA2B,IAAGJ,IAAK,EAAnC,GAAuC,GAD/C;IAEE,KAAK,EAAEE,IAAI,CAACG,aAAL,CAAmBV,QAAQ,CAACC,IAA5B,CAFT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAIE,MAAC,KAAD;IACE,GAAG,EAAEF,SADP;IAEE,GAAG,EAAEQ,IAAI,CAACG,aAAL,CAAmBV,QAAQ,CAACE,SAA5B,CAFP;IAGE,KAAK,EAAEK,IAAI,CAACG,aAAL,CAAmBV,QAAQ,CAACE,SAA5B,CAHT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJF,CADF;AAYD,CAjBD;;AAmBA,eAAeC,IAAf"},"metadata":{"react-intl":{"messages":[{"id":"Site","defaultMessage":"Site"},{"id":"Plone Site","defaultMessage":"Plone Site"}]}},"sourceType":"module"}