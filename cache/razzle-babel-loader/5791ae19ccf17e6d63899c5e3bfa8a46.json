{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Types reducer.\n * @module reducers/types/types\n */\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n  types: []\n};\n/**\n * Types reducer.\n * @function types\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\nexport default function types(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_TYPES}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loading: true,\n        loaded: false\n      });\n\n    case `${GET_TYPES}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loading: false,\n        loaded: true,\n        types: action.result\n      });\n\n    case `${GET_TYPES}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        loading: false,\n        loaded: false,\n        types: []\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_TYPES","initialState","error","loaded","loading","types","state","action","type","result"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/reducers/types/types.js"],"sourcesContent":["/**\n * Types reducer.\n * @module reducers/types/types\n */\n\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n  types: [],\n};\n\n/**\n * Types reducer.\n * @function types\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function types(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_TYPES}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n        loaded: false,\n      };\n    case `${GET_TYPES}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        loaded: true,\n        types: action.result,\n      };\n    case `${GET_TYPES}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n        loaded: false,\n        types: [],\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,oCAA1B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IADY;EAEnBC,MAAM,EAAE,KAFW;EAGnBC,OAAO,EAAE,KAHU;EAInBC,KAAK,EAAE;AAJY,CAArB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASA,KAAT,CAAeC,KAAK,GAAGL,YAAvB,EAAqCM,MAAM,GAAG,EAA9C,EAAkD;EAC/D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,GAAER,SAAU,UAAlB;MACE,uCACKM,KADL;QAEEJ,KAAK,EAAE,IAFT;QAGEE,OAAO,EAAE,IAHX;QAIED,MAAM,EAAE;MAJV;;IAMF,KAAM,GAAEH,SAAU,UAAlB;MACE,uCACKM,KADL;QAEEJ,KAAK,EAAE,IAFT;QAGEE,OAAO,EAAE,KAHX;QAIED,MAAM,EAAE,IAJV;QAKEE,KAAK,EAAEE,MAAM,CAACE;MALhB;;IAOF,KAAM,GAAET,SAAU,OAAlB;MACE,uCACKM,KADL;QAEEJ,KAAK,EAAEK,MAAM,CAACL,KAFhB;QAGEE,OAAO,EAAE,KAHX;QAIED,MAAM,EAAE,KAJV;QAKEE,KAAK,EAAE;MALT;;IAOF;MACE,OAAOC,KAAP;EAzBJ;AA2BD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}