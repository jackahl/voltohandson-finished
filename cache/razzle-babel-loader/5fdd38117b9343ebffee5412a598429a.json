{"ast":null,"code":"import _cloneDeep from \"lodash/cloneDeep\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/SearchBlockEdit.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { defineMessages } from 'react-intl';\nimport { compose } from 'redux';\nimport { SidebarPortal, BlockDataForm } from '@plone/volto/components';\nimport { addExtensionFieldToSchema } from '@plone/volto/helpers/Extensions/withBlockSchemaEnhancer';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { SearchBlockViewComponent } from './SearchBlockView';\nimport Schema from './schema';\nimport { withSearch, withQueryString } from './hocs';\nconst messages = defineMessages({\n  template: {\n    \"id\": \"Results template\",\n    \"defaultMessage\": \"Results template\"\n  }\n});\n\nconst SearchBlockEdit = props => {\n  var _config$blocks$blocks, _config$blocks$blocks2;\n\n  const {\n    block,\n    onChangeBlock,\n    data,\n    selected,\n    intl,\n    onTriggerSearch,\n    querystring = {}\n  } = props;\n  const {\n    sortable_indexes = {}\n  } = querystring;\n  let schema = Schema({\n    data,\n    intl\n  });\n  schema = addExtensionFieldToSchema({\n    schema,\n    name: 'listingBodyTemplate',\n    items: config.blocks.blocksConfig.listing.variations,\n    intl,\n    title: {\n      id: intl.formatMessage(messages.template)\n    }\n  });\n  const listingVariations = (_config$blocks$blocks = config.blocks.blocksConfig) === null || _config$blocks$blocks === void 0 ? void 0 : (_config$blocks$blocks2 = _config$blocks$blocks.listing) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.variations;\n  let activeItem = listingVariations.find(item => item.id === data.listingBodyTemplate);\n  const listingSchemaEnhancer = activeItem === null || activeItem === void 0 ? void 0 : activeItem.schemaEnhancer;\n  if (listingSchemaEnhancer) schema = listingSchemaEnhancer({\n    schema: _cloneDeep(schema),\n    data,\n    intl\n  });\n  schema.properties.sortOnOptions.items = {\n    choices: Object.keys(sortable_indexes).map(k => [k, sortable_indexes[k].title])\n  };\n  const {\n    query = {}\n  } = data || {};\n  useDeepCompareEffect(() => {\n    onTriggerSearch();\n  }, [query, onTriggerSearch]);\n  return __jsx(React.Fragment, null, __jsx(SearchBlockViewComponent, _extends({}, props, {\n    path: getBaseUrl(props.pathname),\n    mode: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  })), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(BlockDataForm, {\n    schema: schema,\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    formData: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default compose(withQueryString, withSearch())(SearchBlockEdit);","map":{"version":3,"names":["React","useDeepCompareEffect","defineMessages","compose","SidebarPortal","BlockDataForm","addExtensionFieldToSchema","getBaseUrl","config","SearchBlockViewComponent","Schema","withSearch","withQueryString","messages","template","SearchBlockEdit","props","block","onChangeBlock","data","selected","intl","onTriggerSearch","querystring","sortable_indexes","schema","name","items","blocks","blocksConfig","listing","variations","title","id","formatMessage","listingVariations","activeItem","find","item","listingBodyTemplate","listingSchemaEnhancer","schemaEnhancer","properties","sortOnOptions","choices","Object","keys","map","k","query","pathname","value"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/SearchBlockEdit.jsx"],"sourcesContent":["import React from 'react';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { defineMessages } from 'react-intl';\nimport { compose } from 'redux';\n\nimport { SidebarPortal, BlockDataForm } from '@plone/volto/components';\nimport { addExtensionFieldToSchema } from '@plone/volto/helpers/Extensions/withBlockSchemaEnhancer';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport { SearchBlockViewComponent } from './SearchBlockView';\nimport Schema from './schema';\nimport { withSearch, withQueryString } from './hocs';\nimport { cloneDeep } from 'lodash';\n\nconst messages = defineMessages({\n  template: {\n    id: 'Results template',\n    defaultMessage: 'Results template',\n  },\n});\n\nconst SearchBlockEdit = (props) => {\n  const {\n    block,\n    onChangeBlock,\n    data,\n    selected,\n    intl,\n    onTriggerSearch,\n    querystring = {},\n  } = props;\n  const { sortable_indexes = {} } = querystring;\n\n  let schema = Schema({ data, intl });\n\n  schema = addExtensionFieldToSchema({\n    schema,\n    name: 'listingBodyTemplate',\n    items: config.blocks.blocksConfig.listing.variations,\n    intl,\n    title: { id: intl.formatMessage(messages.template) },\n  });\n  const listingVariations = config.blocks.blocksConfig?.listing?.variations;\n  let activeItem = listingVariations.find(\n    (item) => item.id === data.listingBodyTemplate,\n  );\n  const listingSchemaEnhancer = activeItem?.schemaEnhancer;\n  if (listingSchemaEnhancer)\n    schema = listingSchemaEnhancer({\n      schema: cloneDeep(schema),\n      data,\n      intl,\n    });\n  schema.properties.sortOnOptions.items = {\n    choices: Object.keys(sortable_indexes).map((k) => [\n      k,\n      sortable_indexes[k].title,\n    ]),\n  };\n\n  const { query = {} } = data || {};\n  useDeepCompareEffect(() => {\n    onTriggerSearch();\n  }, [query, onTriggerSearch]);\n\n  return (\n    <>\n      <SearchBlockViewComponent\n        {...props}\n        path={getBaseUrl(props.pathname)}\n        mode=\"edit\"\n      />\n      <SidebarPortal selected={selected}>\n        <BlockDataForm\n          schema={schema}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          formData={data}\n        />\n      </SidebarPortal>\n    </>\n  );\n};\n\nexport default compose(withQueryString, withSearch())(SearchBlockEdit);\n"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,yBAA7C;AACA,SAASC,yBAAT,QAA0C,yDAA1C;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,SAASC,wBAAT,QAAyC,mBAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,QAA5C;AAGA,MAAMC,QAAQ,GAAGX,cAAc,CAAC;EAC9BY,QAAQ;IAAA;IAAA;EAAA;AADsB,CAAD,CAA/B;;AAOA,MAAMC,eAAe,GAAIC,KAAD,IAAW;EAAA;;EACjC,MAAM;IACJC,KADI;IAEJC,aAFI;IAGJC,IAHI;IAIJC,QAJI;IAKJC,IALI;IAMJC,eANI;IAOJC,WAAW,GAAG;EAPV,IAQFP,KARJ;EASA,MAAM;IAAEQ,gBAAgB,GAAG;EAArB,IAA4BD,WAAlC;EAEA,IAAIE,MAAM,GAAGf,MAAM,CAAC;IAAES,IAAF;IAAQE;EAAR,CAAD,CAAnB;EAEAI,MAAM,GAAGnB,yBAAyB,CAAC;IACjCmB,MADiC;IAEjCC,IAAI,EAAE,qBAF2B;IAGjCC,KAAK,EAAEnB,MAAM,CAACoB,MAAP,CAAcC,YAAd,CAA2BC,OAA3B,CAAmCC,UAHT;IAIjCV,IAJiC;IAKjCW,KAAK,EAAE;MAAEC,EAAE,EAAEZ,IAAI,CAACa,aAAL,CAAmBrB,QAAQ,CAACC,QAA5B;IAAN;EAL0B,CAAD,CAAlC;EAOA,MAAMqB,iBAAiB,4BAAG3B,MAAM,CAACoB,MAAP,CAAcC,YAAjB,oFAAG,sBAA4BC,OAA/B,2DAAG,uBAAqCC,UAA/D;EACA,IAAIK,UAAU,GAAGD,iBAAiB,CAACE,IAAlB,CACdC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYd,IAAI,CAACoB,mBADZ,CAAjB;EAGA,MAAMC,qBAAqB,GAAGJ,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEK,cAA1C;EACA,IAAID,qBAAJ,EACEf,MAAM,GAAGe,qBAAqB,CAAC;IAC7Bf,MAAM,EAAE,WAAUA,MAAV,CADqB;IAE7BN,IAF6B;IAG7BE;EAH6B,CAAD,CAA9B;EAKFI,MAAM,CAACiB,UAAP,CAAkBC,aAAlB,CAAgChB,KAAhC,GAAwC;IACtCiB,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAYtB,gBAAZ,EAA8BuB,GAA9B,CAAmCC,CAAD,IAAO,CAChDA,CADgD,EAEhDxB,gBAAgB,CAACwB,CAAD,CAAhB,CAAoBhB,KAF4B,CAAzC;EAD6B,CAAxC;EAOA,MAAM;IAAEiB,KAAK,GAAG;EAAV,IAAiB9B,IAAI,IAAI,EAA/B;EACAlB,oBAAoB,CAAC,MAAM;IACzBqB,eAAe;EAChB,CAFmB,EAEjB,CAAC2B,KAAD,EAAQ3B,eAAR,CAFiB,CAApB;EAIA,OACE,4BACE,MAAC,wBAAD,eACMN,KADN;IAEE,IAAI,EAAET,UAAU,CAACS,KAAK,CAACkC,QAAP,CAFlB;IAGE,IAAI,EAAC,MAHP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF,EAME,MAAC,aAAD;IAAe,QAAQ,EAAE9B,QAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,aAAD;IACE,MAAM,EAAEK,MADV;IAEE,aAAa,EAAE,CAACQ,EAAD,EAAKkB,KAAL,KAAe;MAC5BjC,aAAa,CAACD,KAAD,kCACRE,IADQ;QAEX,CAACc,EAAD,GAAMkB;MAFK,GAAb;IAID,CAPH;IAQE,QAAQ,EAAEhC,IARZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CANF,CADF;AAqBD,CAjED;;AAmEA,eAAehB,OAAO,CAACS,eAAD,EAAkBD,UAAU,EAA5B,CAAP,CAAuCI,eAAvC,CAAf"},"metadata":{"react-intl":{"messages":[{"id":"Results template","defaultMessage":"Results template"}]}},"sourceType":"module"}