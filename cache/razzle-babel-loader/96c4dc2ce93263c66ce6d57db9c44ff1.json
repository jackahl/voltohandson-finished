{"ast":null,"code":"import _join from \"lodash/join\";\nimport _nth from \"lodash/nth\";\nimport _last from \"lodash/last\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentType.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Content Type component.\n * @module components/manage/Controlpanels/ContentType\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Header } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { Error, Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { getControlpanel, updateControlpanel } from '@plone/volto/actions';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  title: {\n    \"id\": \"{id} Content Type\",\n    \"defaultMessage\": \"{id} Content Type\"\n  },\n  changesSaved: {\n    \"id\": \"Changes saved.\",\n    \"defaultMessage\": \"Changes saved.\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  info: {\n    \"id\": \"Info\",\n    \"defaultMessage\": \"Info\"\n  }\n});\n/**\n * ContentType class.\n * @class ContentType\n * @extends Component\n */\n\nclass ContentType extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentType\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false,\n      error: null,\n      isClient: false\n    };\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.form = /*#__PURE__*/React.createRef();\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.props.getControlpanel(_join([this.props.parent, this.props.id], '/'));\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Control Panel GET\n    if (this.props.cpanelRequest.get.loading && nextProps.cpanelRequest.get.error) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error\n      });\n    } // Control Panel PATCH\n\n\n    if (this.props.cpanelRequest.update.loading && nextProps.cpanelRequest.update.loaded) {\n      toast.info(__jsx(Toast, {\n        info: true,\n        title: this.props.intl.formatMessage(messages.info),\n        content: this.props.intl.formatMessage(messages.changesSaved),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n\n\n  onSubmit(data) {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n  }\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n\n\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    // Error\n    if (this.state.error) {\n      return __jsx(Error, {\n        error: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (this.props.controlpanel) {\n      var _controlpanel$data, _controlpanel$data2;\n\n      let controlpanel = this.props.controlpanel;\n\n      if ((controlpanel === null || controlpanel === void 0 ? void 0 : (_controlpanel$data = controlpanel.data) === null || _controlpanel$data === void 0 ? void 0 : _controlpanel$data.filter_content_types) === false) {\n        controlpanel.data.filter_content_types = {\n          title: 'all',\n          token: 'all'\n        };\n      }\n\n      if ((controlpanel === null || controlpanel === void 0 ? void 0 : (_controlpanel$data2 = controlpanel.data) === null || _controlpanel$data2 === void 0 ? void 0 : _controlpanel$data2.filter_content_types) === true) {\n        var _controlpanel$data3;\n\n        if (((controlpanel === null || controlpanel === void 0 ? void 0 : (_controlpanel$data3 = controlpanel.data) === null || _controlpanel$data3 === void 0 ? void 0 : _controlpanel$data3.allowed_content_types) || []).length) {\n          controlpanel.data.filter_content_types = {\n            title: 'some',\n            token: 'some'\n          };\n        } else {\n          controlpanel.data.filter_content_types = {\n            title: 'none',\n            token: 'none'\n          };\n        }\n      }\n\n      return __jsx(\"div\", {\n        id: \"page-controlpanel\",\n        className: \"ui container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, __jsx(Header, {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }, this.props.intl.formatMessage(messages.title, {\n        id: controlpanel.title\n      })), __jsx(Form, {\n        isEditForm: true,\n        ref: this.form,\n        schema: controlpanel.schema,\n        formData: controlpanel.data,\n        onSubmit: this.onSubmit,\n        onCancel: this.onCancel,\n        pathname: this.props.pathname,\n        visual: this.state.visual,\n        hideActions: true,\n        loading: this.props.cpanelRequest.update.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Button, {\n          id: \"toolbar-save\",\n          className: \"save\",\n          \"aria-label\": this.props.intl.formatMessage(messages.save),\n          onClick: () => this.form.current.onSubmit(),\n          disabled: this.props.cpanelRequest.update.loading,\n          loading: this.props.cpanelRequest.update.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: saveSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.save),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 23\n          }\n        })), __jsx(Button, {\n          className: \"cancel\",\n          \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n          onClick: () => this.onCancel(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.cancel),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 23\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      })));\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\n_defineProperty(ContentType, \"propTypes\", {\n  updateControlpanel: PropTypes.func.isRequired,\n  getControlpanel: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  parent: PropTypes.string.isRequired,\n  cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n  controlpanel: PropTypes.shape({\n    '@id': PropTypes.string,\n    data: PropTypes.object,\n    schema: PropTypes.object,\n    title: PropTypes.string\n  }),\n  pathname: PropTypes.string.isRequired\n});\n\n_defineProperty(ContentType, \"defaultProps\", {\n  controlpanel: null\n});\n\nexport default compose(injectIntl, connect((state, props) => ({\n  controlpanel: state.controlpanels.controlpanel,\n  cpanelRequest: state.controlpanels,\n  pathname: props.location.pathname,\n  id: _last(props.location.pathname.split('/')),\n  parent: _nth(props.location.pathname.split('/'), -2)\n}), {\n  getControlpanel,\n  updateControlpanel\n}))(ContentType);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","getParentUrl","Portal","Button","Header","defineMessages","injectIntl","toast","Error","Form","Icon","Toolbar","Toast","getControlpanel","updateControlpanel","saveSVG","clearSVG","messages","title","changesSaved","back","save","cancel","info","ContentType","constructor","props","state","visual","error","isClient","onCancel","bind","onSubmit","form","createRef","componentDidMount","parent","id","setState","UNSAFE_componentWillReceiveProps","nextProps","cpanelRequest","get","loading","update","loaded","intl","formatMessage","data","controlpanel","history","push","pathname","render","filter_content_types","token","allowed_content_types","length","schema","document","getElementById","current","func","isRequired","string","objectOf","any","shape","object","controlpanels","location","split"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentType.jsx"],"sourcesContent":["/**\n * Content Type component.\n * @module components/manage/Controlpanels/ContentType\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Header } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { last, nth, join } from 'lodash';\nimport { Error, Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { getControlpanel, updateControlpanel } from '@plone/volto/actions';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  title: {\n    id: '{id} Content Type',\n    defaultMessage: '{id} Content Type',\n  },\n  changesSaved: {\n    id: 'Changes saved.',\n    defaultMessage: 'Changes saved.',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  info: {\n    id: 'Info',\n    defaultMessage: 'Info',\n  },\n});\n\n/**\n * ContentType class.\n * @class ContentType\n * @extends Component\n */\nclass ContentType extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateControlpanel: PropTypes.func.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    parent: PropTypes.string.isRequired,\n    cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      data: PropTypes.object,\n      schema: PropTypes.object,\n      title: PropTypes.string,\n    }),\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    controlpanel: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentType\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visual: false,\n      error: null,\n      isClient: false,\n    };\n\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.form = React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(join([this.props.parent, this.props.id], '/'));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Control Panel GET\n    if (\n      this.props.cpanelRequest.get.loading &&\n      nextProps.cpanelRequest.get.error\n    ) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error,\n      });\n    }\n\n    // Control Panel PATCH\n    if (\n      this.props.cpanelRequest.update.loading &&\n      nextProps.cpanelRequest.update.loaded\n    ) {\n      toast.info(\n        <Toast\n          info\n          title={this.props.intl.formatMessage(messages.info)}\n          content={this.props.intl.formatMessage(messages.changesSaved)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    if (this.props.controlpanel) {\n      let controlpanel = this.props.controlpanel;\n      if (controlpanel?.data?.filter_content_types === false) {\n        controlpanel.data.filter_content_types = { title: 'all', token: 'all' };\n      }\n      if (controlpanel?.data?.filter_content_types === true) {\n        if ((controlpanel?.data?.allowed_content_types || []).length) {\n          controlpanel.data.filter_content_types = {\n            title: 'some',\n            token: 'some',\n          };\n        } else {\n          controlpanel.data.filter_content_types = {\n            title: 'none',\n            token: 'none',\n          };\n        }\n      }\n      return (\n        <div id=\"page-controlpanel\" className=\"ui container\">\n          <Header disabled>\n            {this.props.intl.formatMessage(messages.title, {\n              id: controlpanel.title,\n            })}\n          </Header>\n          <Form\n            isEditForm\n            ref={this.form}\n            schema={controlpanel.schema}\n            formData={controlpanel.data}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n            pathname={this.props.pathname}\n            visual={this.state.visual}\n            hideActions\n            loading={this.props.cpanelRequest.update.loading}\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      disabled={this.props.cpanelRequest.update.loading}\n                      loading={this.props.cpanelRequest.update.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button\n                      className=\"cancel\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      onClick={() => this.onCancel()}\n                    >\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      cpanelRequest: state.controlpanels,\n      pathname: props.location.pathname,\n      id: last(props.location.pathname.split('/')),\n      parent: nth(props.location.pathname.split('/'), -2),\n    }),\n    { getControlpanel, updateControlpanel },\n  ),\n)(ContentType);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"{id} Content Type","defaultMessage":"{id} Content Type"},{"id":"Changes saved.","defaultMessage":"Changes saved."},{"id":"Back","defaultMessage":"Back"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Info","defaultMessage":"Info"}]}},"sourceType":"module"}