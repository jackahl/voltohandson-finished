{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Login/Login.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Login container.\n * @module components/theme/Login/Login\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, Form, Input, Segment, Grid } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Icon } from '@plone/volto/components';\nimport { login } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport config from '@plone/volto/registry';\nconst messages = defineMessages({\n  login: {\n    \"id\": \"Log in\",\n    \"defaultMessage\": \"Log in\"\n  },\n  loginName: {\n    \"id\": \"Login Name\",\n    \"defaultMessage\": \"Login Name\"\n  },\n  Login: {\n    \"id\": \"Login\",\n    \"defaultMessage\": \"Login\"\n  },\n  password: {\n    \"id\": \"Password\",\n    \"defaultMessage\": \"Password\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  loginFailed: {\n    \"id\": \"Login Failed\",\n    \"defaultMessage\": \"Login Failed\"\n  },\n  loginFailedContent: {\n    \"id\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\",\n    \"defaultMessage\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\"\n  },\n  register: {\n    \"id\": \"Register\",\n    \"defaultMessage\": \"Register\"\n  },\n  forgotPassword: {\n    \"id\": \"box_forgot_password_option\",\n    \"defaultMessage\": \"Forgot your password?\"\n  }\n});\n/**\n * Login class.\n * @class Login\n * @extends Component\n */\n\nclass Login extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onLogin = this.onLogin.bind(this);\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.token) {\n      this.props.history.push(this.props.returnUrl || '/');\n\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    }\n\n    if (nextProps.error) {\n      if (!toast.isActive('loginFailed')) {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.loginFailed),\n          content: this.props.intl.formatMessage(messages.loginFailedContent),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }\n        }), {\n          autoClose: false,\n          toastId: 'loginFailed'\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (toast.isActive('loginFailed')) {\n      toast.dismiss('loginFailed');\n    }\n  }\n  /**\n   * On login handler\n   * @method onLogin\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n\n\n  onLogin(event) {\n    this.props.login(document.getElementsByName('login')[0].value, document.getElementsByName('password')[0].value);\n    event.preventDefault();\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"page-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.Login),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      text: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      method: \"post\",\n      onSubmit: this.onLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Log In\",\n      defaultMessage: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Sign in to start session\",\n      defaultMessage: \"Sign in to start session\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      inline: true,\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      width: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Login Name\",\n      defaultMessage: \"Login Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    })))), __jsx(Grid.Column, {\n      width: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 23\n      }\n    }, __jsx(Input, {\n      id: \"login\",\n      name: \"login\",\n      placeholder: this.props.intl.formatMessage(messages.loginName),\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }))))), __jsx(Form.Field, {\n      inline: true,\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Password\",\n      defaultMessage: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    })))), __jsx(Grid.Column, {\n      stretched: true,\n      width: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, __jsx(Input, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: this.props.intl.formatMessage(messages.password),\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }))))), __jsx(Form.Field, {\n      inline: true,\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, config.settings.showSelfRegistration && __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 27\n      }\n    }, __jsx(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage(messages.register)))), __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }, __jsx(Link, {\n      to: \"/passwordreset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 27\n      }\n    }, this.props.intl.formatMessage(messages.forgotPassword)))))))), __jsx(Segment, {\n      className: \"actions\",\n      clearing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      basic: true,\n      primary: true,\n      icon: true,\n      floated: \"right\",\n      type: \"submit\",\n      id: \"login-form-submit\",\n      \"aria-label\": this.props.intl.formatMessage(messages.login),\n      title: this.props.intl.formatMessage(messages.login),\n      loading: this.props.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: aheadSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    })), __jsx(Button, {\n      basic: true,\n      secondary: true,\n      icon: true,\n      floated: \"right\",\n      id: \"login-form-cancel\",\n      as: Link,\n      to: \"/\",\n      \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n      title: this.props.intl.formatMessage(messages.cancel),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: clearSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\n_defineProperty(Login, \"propTypes\", {\n  login: PropTypes.func.isRequired,\n  error: PropTypes.shape({\n    message: PropTypes.string\n  }),\n  loading: PropTypes.bool,\n  token: PropTypes.string,\n  // eslint-disable-line react/no-unused-prop-types\n  returnUrl: PropTypes.string\n});\n\n_defineProperty(Login, \"defaultProps\", {\n  error: null,\n  loading: null,\n  token: null,\n  returnUrl: null\n});\n\nexport default compose(withRouter, injectIntl, connect((state, props) => ({\n  error: state.userSession.login.error,\n  loading: state.userSession.login.loading,\n  token: state.userSession.token,\n  returnUrl: qs.parse(props.location.search).return_url || props.location.pathname.replace(/\\/login\\/?$/, '').replace(/\\/logout\\/?$/, '') || '/'\n}), {\n  login\n}))(Login);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","Link","Container","Button","Form","Input","Segment","Grid","FormattedMessage","defineMessages","injectIntl","qs","withRouter","Icon","login","toast","Toast","aheadSVG","clearSVG","config","messages","loginName","Login","password","cancel","error","loginFailed","loginFailedContent","register","forgotPassword","constructor","props","onLogin","bind","UNSAFE_componentWillReceiveProps","nextProps","token","history","push","returnUrl","isActive","dismiss","intl","formatMessage","autoClose","toastId","componentWillUnmount","event","document","getElementsByName","value","preventDefault","render","settings","showSelfRegistration","loading","func","isRequired","shape","message","string","bool","state","userSession","parse","location","search","return_url","pathname","replace"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Login/Login.jsx"],"sourcesContent":["/**\n * Login container.\n * @module components/theme/Login/Login\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Button,\n  Form,\n  Input,\n  Segment,\n  Grid,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\n\nimport { Icon } from '@plone/volto/components';\nimport { login } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  login: {\n    id: 'Log in',\n    defaultMessage: 'Log in',\n  },\n  loginName: {\n    id: 'Login Name',\n    defaultMessage: 'Login Name',\n  },\n  Login: {\n    id: 'Login',\n    defaultMessage: 'Login',\n  },\n  password: {\n    id: 'Password',\n    defaultMessage: 'Password',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  loginFailed: {\n    id: 'Login Failed',\n    defaultMessage: 'Login Failed',\n  },\n  loginFailedContent: {\n    id:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n    defaultMessage:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n  },\n  register: {\n    id: 'Register',\n    defaultMessage: 'Register',\n  },\n  forgotPassword: {\n    id: 'box_forgot_password_option',\n    defaultMessage: 'Forgot your password?',\n  },\n});\n\n/**\n * Login class.\n * @class Login\n * @extends Component\n */\nclass Login extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    login: PropTypes.func.isRequired,\n    error: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n    loading: PropTypes.bool,\n    token: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n    returnUrl: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n    loading: null,\n    token: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.token) {\n      this.props.history.push(this.props.returnUrl || '/');\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    }\n    if (nextProps.error) {\n      if (!toast.isActive('loginFailed')) {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.loginFailed)}\n            content={this.props.intl.formatMessage(messages.loginFailedContent)}\n          />,\n          { autoClose: false, toastId: 'loginFailed' },\n        );\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (toast.isActive('loginFailed')) {\n      toast.dismiss('loginFailed');\n    }\n  }\n\n  /**\n   * On login handler\n   * @method onLogin\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onLogin(event) {\n    this.props.login(\n      document.getElementsByName('login')[0].value,\n      document.getElementsByName('password')[0].value,\n    );\n    event.preventDefault();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-login\">\n        <Helmet title={this.props.intl.formatMessage(messages.Login)} />\n        <Container text>\n          <Form method=\"post\" onSubmit={this.onLogin}>\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage id=\"Log In\" defaultMessage=\"Login\" />\n              </Segment>\n              <Segment secondary>\n                <FormattedMessage\n                  id=\"Sign in to start session\"\n                  defaultMessage=\"Sign in to start session\"\n                />\n              </Segment>\n              <Segment className=\"form\">\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"login\">\n                            <FormattedMessage\n                              id=\"Login Name\"\n                              defaultMessage=\"Login Name\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column width=\"8\">\n                        {/* eslint-disable jsx-a11y/no-autofocus */}\n                        <Input\n                          id=\"login\"\n                          name=\"login\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.loginName,\n                          )}\n                          autoFocus\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column stretched width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"password\">\n                            <FormattedMessage\n                              id=\"Password\"\n                              defaultMessage=\"Password\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column stretched width=\"8\">\n                        <Input\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.password,\n                          )}\n                          tabIndex={0}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      {config.settings.showSelfRegistration && (\n                        <Grid.Column stretched width=\"12\">\n                          <p className=\"help\">\n                            <Link to=\"/register\">\n                              {this.props.intl.formatMessage(messages.register)}\n                            </Link>\n                          </p>\n                        </Grid.Column>\n                      )}\n                      <Grid.Column stretched width=\"12\">\n                        <p className=\"help\">\n                          <Link to=\"/passwordreset\">\n                            {this.props.intl.formatMessage(\n                              messages.forgotPassword,\n                            )}\n                          </Link>\n                        </p>\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n              </Segment>\n              <Segment className=\"actions\" clearing>\n                <Button\n                  basic\n                  primary\n                  icon\n                  floated=\"right\"\n                  type=\"submit\"\n                  id=\"login-form-submit\"\n                  aria-label={this.props.intl.formatMessage(messages.login)}\n                  title={this.props.intl.formatMessage(messages.login)}\n                  loading={this.props.loading}\n                >\n                  <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n                </Button>\n\n                <Button\n                  basic\n                  secondary\n                  icon\n                  floated=\"right\"\n                  id=\"login-form-cancel\"\n                  as={Link}\n                  to=\"/\"\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  title={this.props.intl.formatMessage(messages.cancel)}\n                >\n                  <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n                </Button>\n              </Segment>\n            </Segment.Group>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      error: state.userSession.login.error,\n      loading: state.userSession.login.loading,\n      token: state.userSession.token,\n      returnUrl:\n        qs.parse(props.location.search).return_url ||\n        props.location.pathname\n          .replace(/\\/login\\/?$/, '')\n          .replace(/\\/logout\\/?$/, '') ||\n        '/',\n    }),\n    { login },\n  ),\n)(Login);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Log in","defaultMessage":"Log in"},{"id":"Login Name","defaultMessage":"Login Name"},{"id":"Login","defaultMessage":"Login"},{"id":"Password","defaultMessage":"Password"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"},{"id":"Login Failed","defaultMessage":"Login Failed"},{"id":"Both email address and password are case sensitive, check that caps lock is not enabled.","defaultMessage":"Both email address and password are case sensitive, check that caps lock is not enabled."},{"id":"Register","defaultMessage":"Register"},{"id":"box_forgot_password_option","defaultMessage":"Forgot your password?"},{"id":"Log In","defaultMessage":"Login"},{"id":"Sign in to start session","defaultMessage":"Sign in to start session"}]}},"sourceType":"module"}