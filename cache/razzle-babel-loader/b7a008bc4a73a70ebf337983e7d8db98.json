{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { Node, Range } from 'slate';\nimport config from '@plone/volto/registry';\n/**\n * highlightByType.\n *\n * @param {} editor\n * @param {} node, path\n * @param {} ranges\n */\n\nexport const highlightByType = (editor, _ref, ranges) => {\n  let [node, path] = _ref;\n  const {\n    slate\n  } = config.settings;\n  const {\n    nodeTypesToHighlight\n  } = slate;\n\n  if (nodeTypesToHighlight.includes(node.type)) {\n    const [found] = Node.texts(editor, {\n      from: path,\n      to: path\n    });\n    const visualSelectionRanges = highlightSelection(editor, found, ranges);\n    const text = Node.string(node) || '';\n    const range = {\n      anchor: {\n        path,\n        offset: 0\n      },\n      focus: {\n        path,\n        offset: text.length\n      },\n      highlight: true,\n      highlightType: visualSelectionRanges.length === 0 ? node.type : null,\n      isSelection: visualSelectionRanges.length > 0\n    };\n    return [range];\n  }\n\n  return ranges;\n};\n/**\n * @function highlightSelection\n *\n * @summary A runtime decorator that decorates the saved selection, when the editor is\n * is no longer active.\n *\n * @param {Editor} editor The editor on which to apply the decorator.\n * @param {Node} node\n * @param {Path} path\n * @param {Array} ranges\n */\n\nexport function highlightSelection(editor, _ref2, ranges) {\n  let [node, path] = _ref2;\n  let selected = editor.isSelected();\n\n  if (selected && !editor.selection && editor.getSavedSelection()) {\n    const newSelection = editor.getSavedSelection();\n\n    if (JSON.stringify(path) === JSON.stringify(newSelection.anchor.path)) {\n      const range = _objectSpread(_objectSpread({}, newSelection), {}, {\n        highlight: true,\n        isSelection: true\n      });\n\n      if (Range.isExpanded(range)) {\n        ranges.push(range);\n      }\n    }\n  } // if (ranges.length) console.log('RANGES!', ranges, editor.children);\n  // console.log(node, path, editor.savedSelection);\n\n\n  return ranges;\n}","map":{"version":3,"names":["Node","Range","config","highlightByType","editor","ranges","node","path","slate","settings","nodeTypesToHighlight","includes","type","found","texts","from","to","visualSelectionRanges","highlightSelection","text","string","range","anchor","offset","focus","length","highlight","highlightType","isSelection","selected","isSelected","selection","getSavedSelection","newSelection","JSON","stringify","isExpanded","push"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/decorate.js"],"sourcesContent":["import { Node, Range } from 'slate';\n\nimport config from '@plone/volto/registry';\n\n/**\n * highlightByType.\n *\n * @param {} editor\n * @param {} node, path\n * @param {} ranges\n */\nexport const highlightByType = (editor, [node, path], ranges) => {\n  const { slate } = config.settings;\n  const { nodeTypesToHighlight } = slate;\n\n  if (nodeTypesToHighlight.includes(node.type)) {\n    const [found] = Node.texts(editor, { from: path, to: path });\n    const visualSelectionRanges = highlightSelection(editor, found, ranges);\n    const text = Node.string(node) || '';\n    const range = {\n      anchor: { path, offset: 0 },\n      focus: { path, offset: text.length },\n      highlight: true,\n      highlightType: visualSelectionRanges.length === 0 ? node.type : null,\n      isSelection: visualSelectionRanges.length > 0,\n    };\n    return [range];\n  }\n\n  return ranges;\n};\n\n/**\n * @function highlightSelection\n *\n * @summary A runtime decorator that decorates the saved selection, when the editor is\n * is no longer active.\n *\n * @param {Editor} editor The editor on which to apply the decorator.\n * @param {Node} node\n * @param {Path} path\n * @param {Array} ranges\n */\nexport function highlightSelection(editor, [node, path], ranges) {\n  let selected = editor.isSelected();\n\n  if (selected && !editor.selection && editor.getSavedSelection()) {\n    const newSelection = editor.getSavedSelection();\n    if (JSON.stringify(path) === JSON.stringify(newSelection.anchor.path)) {\n      const range = {\n        ...newSelection,\n        highlight: true,\n        isSelection: true,\n      };\n      if (Range.isExpanded(range)) {\n        ranges.push(range);\n      }\n    }\n  }\n  // if (ranges.length) console.log('RANGES!', ranges, editor.children);\n  // console.log(node, path, editor.savedSelection);\n  return ranges;\n}\n"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,OAA5B;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,MAAD,QAAuBC,MAAvB,KAAkC;EAAA,IAAzB,CAACC,IAAD,EAAOC,IAAP,CAAyB;EAC/D,MAAM;IAAEC;EAAF,IAAYN,MAAM,CAACO,QAAzB;EACA,MAAM;IAAEC;EAAF,IAA2BF,KAAjC;;EAEA,IAAIE,oBAAoB,CAACC,QAArB,CAA8BL,IAAI,CAACM,IAAnC,CAAJ,EAA8C;IAC5C,MAAM,CAACC,KAAD,IAAUb,IAAI,CAACc,KAAL,CAAWV,MAAX,EAAmB;MAAEW,IAAI,EAAER,IAAR;MAAcS,EAAE,EAAET;IAAlB,CAAnB,CAAhB;IACA,MAAMU,qBAAqB,GAAGC,kBAAkB,CAACd,MAAD,EAASS,KAAT,EAAgBR,MAAhB,CAAhD;IACA,MAAMc,IAAI,GAAGnB,IAAI,CAACoB,MAAL,CAAYd,IAAZ,KAAqB,EAAlC;IACA,MAAMe,KAAK,GAAG;MACZC,MAAM,EAAE;QAAEf,IAAF;QAAQgB,MAAM,EAAE;MAAhB,CADI;MAEZC,KAAK,EAAE;QAAEjB,IAAF;QAAQgB,MAAM,EAAEJ,IAAI,CAACM;MAArB,CAFK;MAGZC,SAAS,EAAE,IAHC;MAIZC,aAAa,EAAEV,qBAAqB,CAACQ,MAAtB,KAAiC,CAAjC,GAAqCnB,IAAI,CAACM,IAA1C,GAAiD,IAJpD;MAKZgB,WAAW,EAAEX,qBAAqB,CAACQ,MAAtB,GAA+B;IALhC,CAAd;IAOA,OAAO,CAACJ,KAAD,CAAP;EACD;;EAED,OAAOhB,MAAP;AACD,CAnBM;AAqBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASa,kBAAT,CAA4Bd,MAA5B,SAAkDC,MAAlD,EAA0D;EAAA,IAAtB,CAACC,IAAD,EAAOC,IAAP,CAAsB;EAC/D,IAAIsB,QAAQ,GAAGzB,MAAM,CAAC0B,UAAP,EAAf;;EAEA,IAAID,QAAQ,IAAI,CAACzB,MAAM,CAAC2B,SAApB,IAAiC3B,MAAM,CAAC4B,iBAAP,EAArC,EAAiE;IAC/D,MAAMC,YAAY,GAAG7B,MAAM,CAAC4B,iBAAP,EAArB;;IACA,IAAIE,IAAI,CAACC,SAAL,CAAe5B,IAAf,MAAyB2B,IAAI,CAACC,SAAL,CAAeF,YAAY,CAACX,MAAb,CAAoBf,IAAnC,CAA7B,EAAuE;MACrE,MAAMc,KAAK,mCACNY,YADM;QAETP,SAAS,EAAE,IAFF;QAGTE,WAAW,EAAE;MAHJ,EAAX;;MAKA,IAAI3B,KAAK,CAACmC,UAAN,CAAiBf,KAAjB,CAAJ,EAA6B;QAC3BhB,MAAM,CAACgC,IAAP,CAAYhB,KAAZ;MACD;IACF;EACF,CAf8D,CAgB/D;EACA;;;EACA,OAAOhB,MAAP;AACD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}