{"ast":null,"code":"import _map from \"lodash/map\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { GET_BREADCRUMBS } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  error: null,\n  items: [],\n  root: null,\n  loaded: false,\n  loading: false\n};\n/**\n * Breadcrumbs reducer.\n * @function breadcrumbs\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\nexport default function breadcrumbs(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_BREADCRUMBS}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n\n    case `${GET_BREADCRUMBS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: _map(action.result.items, item => ({\n          title: item.title,\n          url: flattenToAppURL(item['@id'])\n        })),\n        root: flattenToAppURL(action.result.root),\n        loaded: true,\n        loading: false\n      });\n\n    case `${GET_BREADCRUMBS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["flattenToAppURL","GET_BREADCRUMBS","initialState","error","items","root","loaded","loading","breadcrumbs","state","action","type","result","item","title","url"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/reducers/breadcrumbs/breadcrumbs.js"],"sourcesContent":["/**\n * Breadcrumbs reducer.\n * @module reducers/breadcrumbs/breadcrumbs\n */\n\nimport { map } from 'lodash';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { GET_BREADCRUMBS } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: [],\n  root: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Breadcrumbs reducer.\n * @function breadcrumbs\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function breadcrumbs(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_BREADCRUMBS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_BREADCRUMBS}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        items: map(action.result.items, (item) => ({\n          title: item.title,\n          url: flattenToAppURL(item['@id']),\n        })),\n        root: flattenToAppURL(action.result.root),\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_BREADCRUMBS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;;;;;;AAMA,SAASA,eAAT,QAAgC,sBAAhC;AAEA,SAASC,eAAT,QAAgC,oCAAhC;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IADY;EAEnBC,KAAK,EAAE,EAFY;EAGnBC,IAAI,EAAE,IAHa;EAInBC,MAAM,EAAE,KAJW;EAKnBC,OAAO,EAAE;AALU,CAArB;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGP,YAA7B,EAA2CQ,MAAM,GAAG,EAApD,EAAwD;EACrE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,GAAEV,eAAgB,UAAxB;MACE,uCACKQ,KADL;QAEEN,KAAK,EAAE,IAFT;QAGEG,MAAM,EAAE,KAHV;QAIEC,OAAO,EAAE;MAJX;;IAMF,KAAM,GAAEN,eAAgB,UAAxB;MACE,uCACKQ,KADL;QAEEN,KAAK,EAAE,IAFT;QAGEC,KAAK,EAAE,KAAIM,MAAM,CAACE,MAAP,CAAcR,KAAlB,EAA0BS,IAAD,KAAW;UACzCC,KAAK,EAAED,IAAI,CAACC,KAD6B;UAEzCC,GAAG,EAAEf,eAAe,CAACa,IAAI,CAAC,KAAD,CAAL;QAFqB,CAAX,CAAzB,CAHT;QAOER,IAAI,EAAEL,eAAe,CAACU,MAAM,CAACE,MAAP,CAAcP,IAAf,CAPvB;QAQEC,MAAM,EAAE,IARV;QASEC,OAAO,EAAE;MATX;;IAWF,KAAM,GAAEN,eAAgB,OAAxB;MACE,uCACKQ,KADL;QAEEN,KAAK,EAAEO,MAAM,CAACP,KAFhB;QAGEC,KAAK,EAAE,EAHT;QAIEE,MAAM,EAAE,KAJV;QAKEC,OAAO,EAAE;MALX;;IAOF;MACE,OAAOE,KAAP;EA7BJ;AA+BD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}