{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _find from \"lodash/find\";\nimport _filter from \"lodash/filter\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Toolbar/Toolbar.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Toolbar component.\n * @module components/manage/Toolbar/Toolbar\n */\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport { withCookies } from 'react-cookie';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport More from '@plone/volto/components/manage/Toolbar/More';\nimport PersonalTools from '@plone/volto/components/manage/Toolbar/PersonalTools';\nimport Types from '@plone/volto/components/manage/Toolbar/Types';\nimport PersonalInformation from '@plone/volto/components/manage/Preferences/PersonalInformation';\nimport PersonalPreferences from '@plone/volto/components/manage/Preferences/PersonalPreferences';\nimport StandardWrapper from '@plone/volto/components/manage/Toolbar/StandardWrapper';\nimport { getTypes, listActions, setExpandedToolbar, unlockContent } from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { BodyClass, getBaseUrl, getCookieOptions } from '@plone/volto/helpers';\nimport { Pluggable } from '@plone/volto/components/manage/Pluggable';\nimport penSVG from '@plone/volto/icons/pen.svg';\nimport unlockSVG from '@plone/volto/icons/unlock.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Edit\"\n  },\n  contents: {\n    \"id\": \"Contents\",\n    \"defaultMessage\": \"Contents\"\n  },\n  add: {\n    \"id\": \"Add\",\n    \"defaultMessage\": \"Add\"\n  },\n  more: {\n    \"id\": \"More\",\n    \"defaultMessage\": \"More\"\n  },\n  personalTools: {\n    \"id\": \"Personal tools\",\n    \"defaultMessage\": \"Personal tools\"\n  },\n  shrinkToolbar: {\n    \"id\": \"Shrink toolbar\",\n    \"defaultMessage\": \"Shrink toolbar\"\n  },\n  personalInformation: {\n    \"id\": \"Personal Information\",\n    \"defaultMessage\": \"Personal Information\"\n  },\n  personalPreferences: {\n    \"id\": \"Personal Preferences\",\n    \"defaultMessage\": \"Personal Preferences\"\n  },\n  collection: {\n    \"id\": \"Collection\",\n    \"defaultMessage\": \"Collection\"\n  },\n  file: {\n    \"id\": \"File\",\n    \"defaultMessage\": \"File\"\n  },\n  link: {\n    \"id\": \"Link\",\n    \"defaultMessage\": \"Link\"\n  },\n  newsItem: {\n    \"id\": \"News Item\",\n    \"defaultMessage\": \"News Item\"\n  },\n  page: {\n    \"id\": \"Page\",\n    \"defaultMessage\": \"Page\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  unlock: {\n    \"id\": \"Unlock\",\n    \"defaultMessage\": \"Unlock\"\n  }\n});\nconst toolbarComponents = {\n  personalTools: {\n    component: PersonalTools,\n    wrapper: null\n  },\n  more: {\n    component: More,\n    wrapper: null\n  },\n  types: {\n    component: Types,\n    wrapper: null,\n    contentAsProps: true\n  },\n  profile: {\n    component: PersonalInformation,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalInformation,\n    hideToolbarBody: true\n  },\n  preferences: {\n    component: PersonalPreferences,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalPreferences,\n    hideToolbarBody: true\n  }\n};\n/**\n * Toolbar container class.\n * @class Toolbar\n * @extends Component\n */\n\nclass Toolbar extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"toolbarWindow\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"handleShrink\", () => {\n      const {\n        cookies\n      } = this.props;\n      cookies.set('toolbar_expanded', !this.state.expanded, getCookieOptions());\n      this.setState(state => ({\n        expanded: !state.expanded\n      }), () => this.props.setExpandedToolbar(this.state.expanded));\n    });\n\n    _defineProperty(this, \"closeMenu\", () => this.setState(() => ({\n      showMenu: false,\n      loadedComponents: []\n    })));\n\n    _defineProperty(this, \"loadComponent\", type => {\n      const {\n        loadedComponents\n      } = this.state;\n\n      if (!this.state.loadedComponents.includes(type)) {\n        this.setState({\n          loadedComponents: [...loadedComponents, type],\n          hideToolbarBody: toolbarComponents[type].hideToolbarBody || false\n        });\n      }\n    });\n\n    _defineProperty(this, \"unloadComponent\", () => {\n      this.setState(state => ({\n        loadedComponents: state.loadedComponents.slice(0, -1),\n        hideToolbarBody: toolbarComponents[state.loadedComponents[state.loadedComponents.length - 2]].hideToolbarBody || false\n      }));\n    });\n\n    _defineProperty(this, \"toggleMenu\", (e, selector) => {\n      if (this.state.showMenu) {\n        this.closeMenu();\n        return;\n      } // PersonalTools always shows at bottom\n\n\n      if (selector === 'personalTools') {\n        this.setState(state => ({\n          showMenu: !state.showMenu,\n          menuStyle: {\n            bottom: 0\n          }\n        }));\n      } else if (selector === 'more') {\n        this.setState(state => ({\n          showMenu: !state.showMenu,\n          menuStyle: {\n            overflow: 'visible',\n            top: 0\n          }\n        }));\n      } else {\n        this.setState(state => ({\n          showMenu: !state.showMenu,\n          menuStyle: {\n            top: 0\n          }\n        }));\n      }\n\n      this.loadComponent(selector);\n    });\n\n    _defineProperty(this, \"handleClickOutside\", e => {\n      if (this.pusher && doesNodeContainClick(this.pusher, e)) return;\n      this.closeMenu();\n    });\n\n    _defineProperty(this, \"unlock\", e => {\n      this.props.unlockContent(getBaseUrl(this.props.pathname), true);\n    });\n\n    const {\n      cookies: _cookies\n    } = props;\n    this.state = {\n      expanded: _cookies.get('toolbar_expanded') !== 'false',\n      showMenu: false,\n      menuStyle: {},\n      menuComponents: [],\n      loadedComponents: [],\n      hideToolbarBody: false\n    };\n  }\n  /**\n   * Component will mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.props.listActions(getBaseUrl(this.props.pathname));\n    this.props.getTypes(getBaseUrl(this.props.pathname));\n    this.props.setExpandedToolbar(this.state.expanded);\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n      this.props.getTypes(getBaseUrl(nextProps.pathname));\n    } // Unlock\n\n\n    if (this.props.unlockRequest.loading && nextProps.unlockRequest.loaded) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n    }\n  }\n  /**\n   * Component will receive props\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$content, _this$props$content2, _this$props$content3;\n\n    const path = getBaseUrl(this.props.pathname);\n    const lock = (_this$props$content = this.props.content) === null || _this$props$content === void 0 ? void 0 : _this$props$content.lock;\n    const unlockAction = (lock === null || lock === void 0 ? void 0 : lock.locked) && (lock === null || lock === void 0 ? void 0 : lock.stealable) && (lock === null || lock === void 0 ? void 0 : lock.creator) !== this.props.userId;\n\n    const editAction = !unlockAction && _find(this.props.actions.object, {\n      id: 'edit'\n    });\n\n    const folderContentsAction = _find(this.props.actions.object, {\n      id: 'folderContents'\n    });\n\n    const {\n      expanded\n    } = this.state;\n    return this.props.token && __jsx(React.Fragment, null, __jsx(BodyClass, {\n      className: expanded ? 'has-toolbar' : 'has-toolbar-collapsed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      style: this.state.menuStyle,\n      className: this.state.showMenu ? 'toolbar-content show' : 'toolbar-content',\n      ref: this.toolbarWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }\n    }, this.state.showMenu && // This sets the scroll locker in the body tag in mobile\n    __jsx(BodyClass, {\n      className: \"has-toolbar-menu-open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: \"pusher-puller\",\n      ref: node => this.pusher = node,\n      style: {\n        transform: this.toolbarWindow.current ? `translateX(-${(this.state.loadedComponents.length - 1) * this.toolbarWindow.current.getBoundingClientRect().width}px)` : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }\n    }, this.state.loadedComponents.map((component, index) => (() => {\n      const ToolbarComponent = toolbarComponents[component].component;\n      const WrapperComponent = toolbarComponents[component].wrapper;\n      const haveActions = toolbarComponents[component].hideToolbarBody;\n      const title = toolbarComponents[component].wrapperTitle && this.props.intl.formatMessage(toolbarComponents[component].wrapperTitle);\n\n      if (WrapperComponent) {\n        return __jsx(WrapperComponent, {\n          componentName: component,\n          componentTitle: title,\n          pathname: this.props.pathname,\n          loadComponent: this.loadComponent,\n          unloadComponent: this.unloadComponent,\n          componentIndex: index,\n          theToolbar: this.toolbarWindow,\n          key: `personalToolsComponent-${index}`,\n          closeMenu: this.closeMenu,\n          hasActions: haveActions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 23\n          }\n        }, __jsx(ToolbarComponent, {\n          pathname: this.props.pathname,\n          loadComponent: this.loadComponent,\n          unloadComponent: this.unloadComponent,\n          componentIndex: index,\n          theToolbar: this.toolbarWindow,\n          closeMenu: this.closeMenu,\n          isToolbarEmbedded: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        return __jsx(ToolbarComponent, {\n          pathname: this.props.pathname,\n          loadComponent: this.loadComponent,\n          unloadComponent: this.unloadComponent,\n          componentIndex: index,\n          theToolbar: this.toolbarWindow,\n          key: `personalToolsComponent-${index}`,\n          closeMenu: this.closeMenu,\n          content: toolbarComponents[component].contentAsProps ? this.props.content : null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 23\n          }\n        });\n      }\n    })()))), __jsx(\"div\", {\n      className: this.state.expanded ? 'toolbar expanded' : 'toolbar',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"toolbar-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"toolbar-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, this.props.hideDefaultViewButtons && this.props.inner && __jsx(React.Fragment, null, this.props.inner), !this.props.hideDefaultViewButtons && __jsx(React.Fragment, null, unlockAction && __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.unlock),\n      className: \"unlock\",\n      onClick: e => this.unlock(e),\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 23\n      }\n    }, __jsx(Icon, {\n      name: unlockSVG,\n      size: \"30px\",\n      className: \"unlock\",\n      title: this.props.intl.formatMessage(messages.unlock),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 25\n      }\n    })), editAction && __jsx(Link, {\n      \"aria-label\": this.props.intl.formatMessage(messages.edit),\n      className: \"edit\",\n      to: `${path}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 23\n      }\n    }, __jsx(Icon, {\n      name: penSVG,\n      size: \"30px\",\n      className: \"circled\",\n      title: this.props.intl.formatMessage(messages.edit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 25\n      }\n    })), this.props.content && this.props.content.is_folderish && folderContentsAction && !this.props.pathname.endsWith('/contents') && __jsx(Link, {\n      \"aria-label\": this.props.intl.formatMessage(messages.contents),\n      to: `${path}/contents`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 25\n      }\n    }, __jsx(Icon, {\n      name: folderSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.contents),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 27\n      }\n    })), this.props.content && this.props.content.is_folderish && folderContentsAction && this.props.pathname.endsWith('/contents') && __jsx(Link, {\n      to: `${path}`,\n      \"aria-label\": this.props.intl.formatMessage(messages.back),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }\n    }, __jsx(Icon, {\n      name: backSVG,\n      className: \"circled\",\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.back),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 27\n      }\n    })), this.props.content && (this.props.content.is_folderish && this.props.types.length > 0 || config.settings.isMultilingual && this.props.content['@components'].translations) && __jsx(\"button\", {\n      className: \"add\",\n      \"aria-label\": this.props.intl.formatMessage(messages.add),\n      onClick: e => this.toggleMenu(e, 'types'),\n      tabIndex: 0,\n      id: \"toolbar-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 25\n      }\n    }, __jsx(Icon, {\n      name: addSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.add),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 27\n      }\n    })), __jsx(\"div\", {\n      className: \"toolbar-button-spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 21\n      }\n    }), __jsx(\"button\", {\n      className: \"more\",\n      \"aria-label\": this.props.intl.formatMessage(messages.more),\n      onClick: e => this.toggleMenu(e, 'more'),\n      tabIndex: 0,\n      id: \"toolbar-more\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 21\n      }\n    }, __jsx(Icon, {\n      className: \"mobile hidden\",\n      name: moreSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.more),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 23\n      }\n    }), this.state.showMenu ? __jsx(Icon, {\n      className: \"mobile only\",\n      name: clearSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 25\n      }\n    }) : __jsx(Icon, {\n      className: \"mobile only\",\n      name: moreSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 25\n      }\n    })))), __jsx(\"div\", {\n      className: \"toolbar-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 15\n      }\n    }, __jsx(Pluggable, {\n      name: \"main.toolbar.bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 17\n      }\n    }), !this.props.hideDefaultViewButtons && __jsx(\"button\", {\n      className: \"user\",\n      \"aria-label\": this.props.intl.formatMessage(messages.personalTools),\n      onClick: e => this.toggleMenu(e, 'personalTools'),\n      tabIndex: 0,\n      id: \"toolbar-personal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 19\n      }\n    }, __jsx(Icon, {\n      name: userSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.personalTools),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 21\n      }\n    })))), __jsx(\"div\", {\n      className: \"toolbar-handler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.shrinkToolbar),\n      className: cx({\n        [(_this$props$content2 = this.props.content) === null || _this$props$content2 === void 0 ? void 0 : _this$props$content2.review_state]: (_this$props$content3 = this.props.content) === null || _this$props$content3 === void 0 ? void 0 : _this$props$content3.review_state\n      }),\n      onClick: this.handleShrink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 15\n      }\n    }))), __jsx(\"div\", {\n      className: \"pusher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\n_defineProperty(Toolbar, \"propTypes\", {\n  actions: PropTypes.shape({\n    object: PropTypes.arrayOf(PropTypes.object),\n    object_buttons: PropTypes.arrayOf(PropTypes.object),\n    user: PropTypes.arrayOf(PropTypes.object)\n  }),\n  token: PropTypes.string,\n  userId: PropTypes.string,\n  pathname: PropTypes.string.isRequired,\n  content: PropTypes.shape({\n    '@type': PropTypes.string,\n    is_folderish: PropTypes.bool,\n    review_state: PropTypes.string\n  }),\n  getTypes: PropTypes.func.isRequired,\n  types: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    addable: PropTypes.bool,\n    title: PropTypes.string\n  })),\n  listActions: PropTypes.func.isRequired,\n  unlockContent: PropTypes.func,\n  unlockRequest: PropTypes.objectOf(PropTypes.any),\n  inner: PropTypes.element.isRequired,\n  hideDefaultViewButtons: PropTypes.bool\n});\n\n_defineProperty(Toolbar, \"defaultProps\", {\n  actions: null,\n  token: null,\n  userId: null,\n  content: null,\n  hideDefaultViewButtons: false,\n  types: []\n});\n\nexport default compose(injectIntl, withCookies, connect((state, props) => ({\n  actions: state.actions.actions,\n  token: state.userSession.token,\n  userId: state.userSession.token ? jwtDecode(state.userSession.token).sub : '',\n  content: state.content.data,\n  pathname: props.pathname,\n  types: _filter(state.types.types, 'addable'),\n  unlockRequest: state.content.unlock\n}), {\n  getTypes,\n  listActions,\n  setExpandedToolbar,\n  unlockContent\n}))(Toolbar);","map":{"version":3,"names":["React","Component","defineMessages","injectIntl","PropTypes","Link","jwtDecode","connect","compose","doesNodeContainClick","withCookies","cx","config","More","PersonalTools","Types","PersonalInformation","PersonalPreferences","StandardWrapper","getTypes","listActions","setExpandedToolbar","unlockContent","Icon","BodyClass","getBaseUrl","getCookieOptions","Pluggable","penSVG","unlockSVG","folderSVG","addSVG","moreSVG","userSVG","backSVG","clearSVG","messages","edit","contents","add","more","personalTools","shrinkToolbar","personalInformation","personalPreferences","collection","file","link","newsItem","page","back","unlock","toolbarComponents","component","wrapper","types","contentAsProps","profile","wrapperTitle","hideToolbarBody","preferences","Toolbar","constructor","props","createRef","cookies","set","state","expanded","setState","showMenu","loadedComponents","type","includes","slice","length","e","selector","closeMenu","menuStyle","bottom","overflow","top","loadComponent","pusher","pathname","get","menuComponents","componentDidMount","document","addEventListener","handleClickOutside","UNSAFE_componentWillReceiveProps","nextProps","unlockRequest","loading","loaded","componentWillUnmount","removeEventListener","render","path","lock","content","unlockAction","locked","stealable","creator","userId","editAction","actions","object","id","folderContentsAction","token","toolbarWindow","node","transform","current","getBoundingClientRect","width","map","index","ToolbarComponent","WrapperComponent","haveActions","title","intl","formatMessage","unloadComponent","hideDefaultViewButtons","inner","is_folderish","endsWith","settings","isMultilingual","translations","toggleMenu","review_state","handleShrink","shape","arrayOf","object_buttons","user","string","isRequired","bool","func","addable","objectOf","any","element","userSession","sub","data"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Toolbar/Toolbar.jsx"],"sourcesContent":["/**\n * Toolbar component.\n * @module components/manage/Toolbar/Toolbar\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport { withCookies } from 'react-cookie';\nimport { filter, find } from 'lodash';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\n\nimport More from '@plone/volto/components/manage/Toolbar/More';\nimport PersonalTools from '@plone/volto/components/manage/Toolbar/PersonalTools';\nimport Types from '@plone/volto/components/manage/Toolbar/Types';\nimport PersonalInformation from '@plone/volto/components/manage/Preferences/PersonalInformation';\nimport PersonalPreferences from '@plone/volto/components/manage/Preferences/PersonalPreferences';\nimport StandardWrapper from '@plone/volto/components/manage/Toolbar/StandardWrapper';\nimport {\n  getTypes,\n  listActions,\n  setExpandedToolbar,\n  unlockContent,\n} from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { BodyClass, getBaseUrl, getCookieOptions } from '@plone/volto/helpers';\nimport { Pluggable } from '@plone/volto/components/manage/Pluggable';\n\nimport penSVG from '@plone/volto/icons/pen.svg';\nimport unlockSVG from '@plone/volto/icons/unlock.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  contents: {\n    id: 'Contents',\n    defaultMessage: 'Contents',\n  },\n  add: {\n    id: 'Add',\n    defaultMessage: 'Add',\n  },\n  more: {\n    id: 'More',\n    defaultMessage: 'More',\n  },\n  personalTools: {\n    id: 'Personal tools',\n    defaultMessage: 'Personal tools',\n  },\n  shrinkToolbar: {\n    id: 'Shrink toolbar',\n    defaultMessage: 'Shrink toolbar',\n  },\n  personalInformation: {\n    id: 'Personal Information',\n    defaultMessage: 'Personal Information',\n  },\n  personalPreferences: {\n    id: 'Personal Preferences',\n    defaultMessage: 'Personal Preferences',\n  },\n  collection: {\n    id: 'Collection',\n    defaultMessage: 'Collection',\n  },\n  file: {\n    id: 'File',\n    defaultMessage: 'File',\n  },\n  link: {\n    id: 'Link',\n    defaultMessage: 'Link',\n  },\n  newsItem: {\n    id: 'News Item',\n    defaultMessage: 'News Item',\n  },\n  page: {\n    id: 'Page',\n    defaultMessage: 'Page',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  unlock: {\n    id: 'Unlock',\n    defaultMessage: 'Unlock',\n  },\n});\n\nconst toolbarComponents = {\n  personalTools: { component: PersonalTools, wrapper: null },\n  more: { component: More, wrapper: null },\n  types: { component: Types, wrapper: null, contentAsProps: true },\n  profile: {\n    component: PersonalInformation,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalInformation,\n    hideToolbarBody: true,\n  },\n  preferences: {\n    component: PersonalPreferences,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalPreferences,\n    hideToolbarBody: true,\n  },\n};\n\n/**\n * Toolbar container class.\n * @class Toolbar\n * @extends Component\n */\nclass Toolbar extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    token: PropTypes.string,\n    userId: PropTypes.string,\n    pathname: PropTypes.string.isRequired,\n    content: PropTypes.shape({\n      '@type': PropTypes.string,\n      is_folderish: PropTypes.bool,\n      review_state: PropTypes.string,\n    }),\n    getTypes: PropTypes.func.isRequired,\n    types: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        addable: PropTypes.bool,\n        title: PropTypes.string,\n      }),\n    ),\n    listActions: PropTypes.func.isRequired,\n    unlockContent: PropTypes.func,\n    unlockRequest: PropTypes.objectOf(PropTypes.any),\n    inner: PropTypes.element.isRequired,\n    hideDefaultViewButtons: PropTypes.bool,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    token: null,\n    userId: null,\n    content: null,\n    hideDefaultViewButtons: false,\n    types: [],\n  };\n\n  toolbarWindow = React.createRef();\n\n  constructor(props) {\n    super(props);\n    const { cookies } = props;\n    this.state = {\n      expanded: cookies.get('toolbar_expanded') !== 'false',\n      showMenu: false,\n      menuStyle: {},\n      menuComponents: [],\n      loadedComponents: [],\n      hideToolbarBody: false,\n    };\n  }\n\n  /**\n   * Component will mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.listActions(getBaseUrl(this.props.pathname));\n    this.props.getTypes(getBaseUrl(this.props.pathname));\n    this.props.setExpandedToolbar(this.state.expanded);\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n      this.props.getTypes(getBaseUrl(nextProps.pathname));\n    }\n\n    // Unlock\n    if (this.props.unlockRequest.loading && nextProps.unlockRequest.loaded) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  handleShrink = () => {\n    const { cookies } = this.props;\n    cookies.set('toolbar_expanded', !this.state.expanded, getCookieOptions());\n    this.setState(\n      (state) => ({ expanded: !state.expanded }),\n      () => this.props.setExpandedToolbar(this.state.expanded),\n    );\n  };\n\n  closeMenu = () =>\n    this.setState(() => ({ showMenu: false, loadedComponents: [] }));\n\n  loadComponent = (type) => {\n    const { loadedComponents } = this.state;\n    if (!this.state.loadedComponents.includes(type)) {\n      this.setState({\n        loadedComponents: [...loadedComponents, type],\n        hideToolbarBody: toolbarComponents[type].hideToolbarBody || false,\n      });\n    }\n  };\n\n  unloadComponent = () => {\n    this.setState((state) => ({\n      loadedComponents: state.loadedComponents.slice(0, -1),\n      hideToolbarBody:\n        toolbarComponents[\n          state.loadedComponents[state.loadedComponents.length - 2]\n        ].hideToolbarBody || false,\n    }));\n  };\n\n  toggleMenu = (e, selector) => {\n    if (this.state.showMenu) {\n      this.closeMenu();\n      return;\n    }\n    // PersonalTools always shows at bottom\n    if (selector === 'personalTools') {\n      this.setState((state) => ({\n        showMenu: !state.showMenu,\n        menuStyle: { bottom: 0 },\n      }));\n    } else if (selector === 'more') {\n      this.setState((state) => ({\n        showMenu: !state.showMenu,\n        menuStyle: {\n          overflow: 'visible',\n          top: 0,\n        },\n      }));\n    } else {\n      this.setState((state) => ({\n        showMenu: !state.showMenu,\n        menuStyle: { top: 0 },\n      }));\n    }\n    this.loadComponent(selector);\n  };\n\n  handleClickOutside = (e) => {\n    if (this.pusher && doesNodeContainClick(this.pusher, e)) return;\n    this.closeMenu();\n  };\n\n  unlock = (e) => {\n    this.props.unlockContent(getBaseUrl(this.props.pathname), true);\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const path = getBaseUrl(this.props.pathname);\n    const lock = this.props.content?.lock;\n    const unlockAction =\n      lock?.locked && lock?.stealable && lock?.creator !== this.props.userId;\n    const editAction =\n      !unlockAction && find(this.props.actions.object, { id: 'edit' });\n    const folderContentsAction = find(this.props.actions.object, {\n      id: 'folderContents',\n    });\n    const { expanded } = this.state;\n\n    return (\n      this.props.token && (\n        <>\n          <BodyClass\n            className={expanded ? 'has-toolbar' : 'has-toolbar-collapsed'}\n          />\n          <div\n            style={this.state.menuStyle}\n            className={\n              this.state.showMenu ? 'toolbar-content show' : 'toolbar-content'\n            }\n            ref={this.toolbarWindow}\n          >\n            {this.state.showMenu && (\n              // This sets the scroll locker in the body tag in mobile\n              <BodyClass className=\"has-toolbar-menu-open\" />\n            )}\n            <div\n              className=\"pusher-puller\"\n              ref={(node) => (this.pusher = node)}\n              style={{\n                transform: this.toolbarWindow.current\n                  ? `translateX(-${\n                      (this.state.loadedComponents.length - 1) *\n                      this.toolbarWindow.current.getBoundingClientRect().width\n                    }px)`\n                  : null,\n              }}\n            >\n              {this.state.loadedComponents.map((component, index) =>\n                (() => {\n                  const ToolbarComponent =\n                    toolbarComponents[component].component;\n                  const WrapperComponent = toolbarComponents[component].wrapper;\n                  const haveActions =\n                    toolbarComponents[component].hideToolbarBody;\n                  const title =\n                    toolbarComponents[component].wrapperTitle &&\n                    this.props.intl.formatMessage(\n                      toolbarComponents[component].wrapperTitle,\n                    );\n                  if (WrapperComponent) {\n                    return (\n                      <WrapperComponent\n                        componentName={component}\n                        componentTitle={title}\n                        pathname={this.props.pathname}\n                        loadComponent={this.loadComponent}\n                        unloadComponent={this.unloadComponent}\n                        componentIndex={index}\n                        theToolbar={this.toolbarWindow}\n                        key={`personalToolsComponent-${index}`}\n                        closeMenu={this.closeMenu}\n                        hasActions={haveActions}\n                      >\n                        <ToolbarComponent\n                          pathname={this.props.pathname}\n                          loadComponent={this.loadComponent}\n                          unloadComponent={this.unloadComponent}\n                          componentIndex={index}\n                          theToolbar={this.toolbarWindow}\n                          closeMenu={this.closeMenu}\n                          isToolbarEmbedded\n                        />\n                      </WrapperComponent>\n                    );\n                  } else {\n                    return (\n                      <ToolbarComponent\n                        pathname={this.props.pathname}\n                        loadComponent={this.loadComponent}\n                        unloadComponent={this.unloadComponent}\n                        componentIndex={index}\n                        theToolbar={this.toolbarWindow}\n                        key={`personalToolsComponent-${index}`}\n                        closeMenu={this.closeMenu}\n                        content={\n                          toolbarComponents[component].contentAsProps\n                            ? this.props.content\n                            : null\n                        }\n                      />\n                    );\n                  }\n                })(),\n              )}\n            </div>\n          </div>\n          <div className={this.state.expanded ? 'toolbar expanded' : 'toolbar'}>\n            <div className=\"toolbar-body\">\n              <div className=\"toolbar-actions\">\n                {this.props.hideDefaultViewButtons && this.props.inner && (\n                  <>{this.props.inner}</>\n                )}\n                {!this.props.hideDefaultViewButtons && (\n                  <>\n                    {unlockAction && (\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.unlock,\n                        )}\n                        className=\"unlock\"\n                        onClick={(e) => this.unlock(e)}\n                        tabIndex={0}\n                      >\n                        <Icon\n                          name={unlockSVG}\n                          size=\"30px\"\n                          className=\"unlock\"\n                          title={this.props.intl.formatMessage(messages.unlock)}\n                        />\n                      </button>\n                    )}\n\n                    {editAction && (\n                      <Link\n                        aria-label={this.props.intl.formatMessage(\n                          messages.edit,\n                        )}\n                        className=\"edit\"\n                        to={`${path}/edit`}\n                      >\n                        <Icon\n                          name={penSVG}\n                          size=\"30px\"\n                          className=\"circled\"\n                          title={this.props.intl.formatMessage(messages.edit)}\n                        />\n                      </Link>\n                    )}\n                    {this.props.content &&\n                      this.props.content.is_folderish &&\n                      folderContentsAction &&\n                      !this.props.pathname.endsWith('/contents') && (\n                        <Link\n                          aria-label={this.props.intl.formatMessage(\n                            messages.contents,\n                          )}\n                          to={`${path}/contents`}\n                        >\n                          <Icon\n                            name={folderSVG}\n                            size=\"30px\"\n                            title={this.props.intl.formatMessage(\n                              messages.contents,\n                            )}\n                          />\n                        </Link>\n                      )}\n                    {this.props.content &&\n                      this.props.content.is_folderish &&\n                      folderContentsAction &&\n                      this.props.pathname.endsWith('/contents') && (\n                        <Link\n                          to={`${path}`}\n                          aria-label={this.props.intl.formatMessage(\n                            messages.back,\n                          )}\n                        >\n                          <Icon\n                            name={backSVG}\n                            className=\"circled\"\n                            size=\"30px\"\n                            title={this.props.intl.formatMessage(messages.back)}\n                          />\n                        </Link>\n                      )}\n                    {this.props.content &&\n                      ((this.props.content.is_folderish &&\n                        this.props.types.length > 0) ||\n                        (config.settings.isMultilingual &&\n                          this.props.content['@components'].translations)) && (\n                        <button\n                          className=\"add\"\n                          aria-label={this.props.intl.formatMessage(\n                            messages.add,\n                          )}\n                          onClick={(e) => this.toggleMenu(e, 'types')}\n                          tabIndex={0}\n                          id=\"toolbar-add\"\n                        >\n                          <Icon\n                            name={addSVG}\n                            size=\"30px\"\n                            title={this.props.intl.formatMessage(messages.add)}\n                          />\n                        </button>\n                      )}\n                    <div className=\"toolbar-button-spacer\" />\n                    <button\n                      className=\"more\"\n                      aria-label={this.props.intl.formatMessage(messages.more)}\n                      onClick={(e) => this.toggleMenu(e, 'more')}\n                      tabIndex={0}\n                      id=\"toolbar-more\"\n                    >\n                      <Icon\n                        className=\"mobile hidden\"\n                        name={moreSVG}\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.more)}\n                      />\n                      {this.state.showMenu ? (\n                        <Icon\n                          className=\"mobile only\"\n                          name={clearSVG}\n                          size=\"30px\"\n                        />\n                      ) : (\n                        <Icon\n                          className=\"mobile only\"\n                          name={moreSVG}\n                          size=\"30px\"\n                        />\n                      )}\n                    </button>\n                  </>\n                )}\n              </div>\n              <div className=\"toolbar-bottom\">\n                <Pluggable name=\"main.toolbar.bottom\" />\n                {!this.props.hideDefaultViewButtons && (\n                  <button\n                    className=\"user\"\n                    aria-label={this.props.intl.formatMessage(\n                      messages.personalTools,\n                    )}\n                    onClick={(e) => this.toggleMenu(e, 'personalTools')}\n                    tabIndex={0}\n                    id=\"toolbar-personal\"\n                  >\n                    <Icon\n                      name={userSVG}\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(\n                        messages.personalTools,\n                      )}\n                    />\n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"toolbar-handler\">\n              <button\n                aria-label={this.props.intl.formatMessage(\n                  messages.shrinkToolbar,\n                )}\n                className={cx({\n                  [this.props.content?.review_state]: this.props.content\n                    ?.review_state,\n                })}\n                onClick={this.handleShrink}\n              />\n            </div>\n          </div>\n          <div className=\"pusher\" />\n        </>\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withCookies,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      token: state.userSession.token,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      content: state.content.data,\n      pathname: props.pathname,\n      types: filter(state.types.types, 'addable'),\n      unlockRequest: state.content.unlock,\n    }),\n    { getTypes, listActions, setExpandedToolbar, unlockContent },\n  ),\n)(Toolbar);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Edit","defaultMessage":"Edit"},{"id":"Contents","defaultMessage":"Contents"},{"id":"Add","defaultMessage":"Add"},{"id":"More","defaultMessage":"More"},{"id":"Personal tools","defaultMessage":"Personal tools"},{"id":"Shrink toolbar","defaultMessage":"Shrink toolbar"},{"id":"Personal Information","defaultMessage":"Personal Information"},{"id":"Personal Preferences","defaultMessage":"Personal Preferences"},{"id":"Collection","defaultMessage":"Collection"},{"id":"File","defaultMessage":"File"},{"id":"Link","defaultMessage":"Link"},{"id":"News Item","defaultMessage":"News Item"},{"id":"Page","defaultMessage":"Page"},{"id":"Back","defaultMessage":"Back"},{"id":"Unlock","defaultMessage":"Unlock"}]}},"sourceType":"module"}