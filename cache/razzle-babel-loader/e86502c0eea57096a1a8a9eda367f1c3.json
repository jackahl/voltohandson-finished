{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _union from \"lodash/union\";\nimport _flatten from \"lodash/flatten\";\nimport _compact from \"lodash/compact\";\nconst _excluded = [\"expand\"],\n      _excluded2 = [\"request\", \"type\", \"mode\"];\n\n/**\n * Api middleware.\n * @module middleware/api\n */\nimport Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport { matchPath } from 'react-router';\nimport qs from 'query-string';\nimport config from '@plone/volto/registry';\nimport { GET_CONTENT, LOGIN, RESET_APIERROR, SET_APIERROR } from '@plone/volto/constants/ActionTypes';\nimport { changeLanguage } from '@plone/volto/actions';\nimport { normalizeLanguageName, getCookieOptions } from '@plone/volto/helpers';\nlet socket = null;\n/**\n *\n * Add configured expanders to an api call for an action\n * Requirements:\n *\n * - It should add the expanders set in the config settings\n * - It should preserve any query if present\n * - It should preserve (and add) any expand parameter (if present) e.g. translations\n * - It should take use the correct codification for arrays in querystring (repeated parameter for each member of the array)\n *\n * @function addExpandersToPath\n * @param {string} path The url/path including the querystring\n * @param {*} type The action type\n * @returns {string} The url/path with the configured expanders added to the query string\n */\n\nexport function addExpandersToPath(path, type) {\n  const {\n    settings\n  } = config;\n  const {\n    apiExpanders = []\n  } = settings;\n\n  const _qs$parseUrl = qs.parseUrl(path),\n        {\n    url,\n    query: {\n      expand\n    }\n  } = _qs$parseUrl,\n        query = _objectWithoutProperties(_qs$parseUrl.query, _excluded);\n\n  const expandersFromConfig = apiExpanders.filter(expand => matchPath(url, expand.match) && expand[type]).map(expand => expand[type]);\n\n  const expandMerge = _compact(_union([expand, ..._flatten(expandersFromConfig)]));\n\n  const stringifiedExpand = qs.stringify({\n    expand: expandMerge\n  }, {\n    arrayFormat: 'comma',\n    encode: false\n  });\n  const querystringFromConfig = apiExpanders.filter(expand => matchPath(url, expand.match) && expand[type]).reduce((acc, expand) => _objectSpread(_objectSpread({}, acc), expand === null || expand === void 0 ? void 0 : expand['querystring']), {});\n\n  const queryMerge = _objectSpread(_objectSpread({}, query), querystringFromConfig);\n\n  const stringifiedQuery = qs.stringify(queryMerge, {\n    encode: false\n  });\n\n  if (stringifiedQuery && stringifiedExpand) {\n    return `${url}?${stringifiedExpand}&${stringifiedQuery}`;\n  } else if (!stringifiedQuery && stringifiedExpand) {\n    return `${url}?${stringifiedExpand}`;\n  } else if (stringifiedQuery && !stringifiedExpand) {\n    return `${url}?${stringifiedQuery}`;\n  } else {\n    return url;\n  }\n}\n/**\n * Send a message on a websocket.\n * @function sendOnSocket\n * @param {Object} request Request object.\n * @returns {Promise} message is send\n */\n\nfunction sendOnSocket(request) {\n  return new Promise((resolve, reject) => {\n    switch (socket.readyState) {\n      case socket.CONNECTING:\n        socket.addEventListener('open', () => resolve(socket));\n        socket.addEventListener('error', reject);\n        break;\n\n      case socket.OPEN:\n        resolve(socket);\n        break;\n\n      default:\n        reject();\n        break;\n    }\n  }).then(() => {\n    socket.send(JSON.stringify(request));\n  });\n}\n/**\n * Api middleware.\n * @function\n * @param {Object} api Api object.\n * @returns {Promise} Action promise.\n */\n\n\nexport default (api => _ref => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  return next => action => {\n    const {\n      settings\n    } = config;\n\n    if (typeof action === 'function') {\n      return action(dispatch, getState);\n    }\n\n    const {\n      request,\n      type,\n      mode = 'parallel'\n    } = action,\n          rest = _objectWithoutProperties(action, _excluded2);\n\n    const {\n      subrequest\n    } = action; // We want subrequest remains in `...rest` above\n\n    let actionPromise;\n\n    if (!request) {\n      return next(action);\n    }\n\n    next(_objectSpread(_objectSpread({}, rest), {}, {\n      type: `${type}_PENDING`\n    }));\n\n    if (socket) {\n      actionPromise = Array.isArray(request) ? Promise.all(request.map(item => sendOnSocket(_objectSpread(_objectSpread({}, item), {}, {\n        path: addExpandersToPath(item.path, type),\n        id: type\n      })))) : sendOnSocket(_objectSpread(_objectSpread({}, request), {}, {\n        path: addExpandersToPath(request.path, type),\n        id: type\n      }));\n    } else {\n      actionPromise = Array.isArray(request) ? mode === 'serial' ? request.reduce((prevPromise, item) => {\n        return prevPromise.then(acc => {\n          return api[item.op](addExpandersToPath(item.path, type), {\n            data: item.data,\n            type: item.type,\n            headers: item.headers,\n            params: request.params,\n            checkUrl: settings.actions_raising_api_errors.includes(action.type)\n          }).then(reqres => {\n            return [...acc, reqres];\n          });\n        });\n      }, Promise.resolve([])) : Promise.all(request.map(item => api[item.op](addExpandersToPath(item.path, type), {\n        data: item.data,\n        type: item.type,\n        headers: item.headers,\n        params: request.params,\n        checkUrl: settings.actions_raising_api_errors.includes(action.type)\n      }))) : api[request.op](addExpandersToPath(request.path, type), {\n        data: request.data,\n        type: request.type,\n        headers: request.headers,\n        params: request.params,\n        checkUrl: settings.actions_raising_api_errors.includes(action.type)\n      });\n      actionPromise.then(result => {\n        const {\n          settings\n        } = config;\n\n        if (getState().apierror.connectionRefused) {\n          next(_objectSpread(_objectSpread({}, rest), {}, {\n            type: RESET_APIERROR\n          }));\n        }\n\n        if (type === GET_CONTENT) {\n          var _result$language;\n\n          const lang = result === null || result === void 0 ? void 0 : (_result$language = result.language) === null || _result$language === void 0 ? void 0 : _result$language.token;\n\n          if (lang && getState().intl.language !== lang && !subrequest && config.settings.supportedLanguages.includes(lang)) {\n            const langFileName = normalizeLanguageName(lang);\n            import(\"../../../../../locales/\" + langFileName + '.json').then(locale => {\n              dispatch(changeLanguage(lang, locale.default));\n            });\n          }\n        }\n\n        if (type === LOGIN && settings.websockets) {\n          const cookies = new Cookies();\n          cookies.set('auth_token', result.token, getCookieOptions({\n            expires: new Date(jwtDecode(result.token).exp * 1000)\n          }));\n          api.get('/@wstoken').then(res => {\n            socket = new WebSocket(`${settings.apiPath.replace('http', 'ws')}/@ws?ws_token=${res.token}`);\n\n            socket.onmessage = message => {\n              const packet = JSON.parse(message.data);\n\n              if (packet.error) {\n                dispatch({\n                  type: `${packet.id}_FAIL`,\n                  error: packet.error\n                });\n              } else {\n                dispatch({\n                  type: `${packet.id}_SUCCESS`,\n                  result: JSON.parse(packet.data)\n                });\n              }\n            };\n          });\n        }\n\n        return next(_objectSpread(_objectSpread({}, rest), {}, {\n          result,\n          type: `${type}_SUCCESS`\n        }));\n      }, error => {\n        // Only SRR can set ECONNREFUSED\n        if (error.code === 'ECONNREFUSED') {\n          next(_objectSpread(_objectSpread({}, rest), {}, {\n            error,\n            statusCode: error.code,\n            connectionRefused: true,\n            type: SET_APIERROR\n          }));\n        } // Response error is marked crossDomain if CORS error happen\n        else if (error.crossDomain) {\n          next(_objectSpread(_objectSpread({}, rest), {}, {\n            error,\n            statusCode: 'CORSERROR',\n            connectionRefused: false,\n            type: SET_APIERROR\n          }));\n        } // Check for actions who can raise api errors\n\n\n        if (settings.actions_raising_api_errors.includes(action.type)) {\n          var _error$response, _error$response2;\n\n          // Gateway timeout\n          if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.statusCode) === 504) {\n            next(_objectSpread(_objectSpread({}, rest), {}, {\n              error,\n              statusCode: error.code,\n              connectionRefused: true,\n              type: SET_APIERROR\n            }));\n          } // Redirect\n          else if ((error === null || error === void 0 ? void 0 : error.code) === 301) {\n            next(_objectSpread(_objectSpread({}, rest), {}, {\n              error,\n              statusCode: error.code,\n              connectionRefused: false,\n              type: SET_APIERROR\n            }));\n          } // Redirect\n          else if ((error === null || error === void 0 ? void 0 : error.code) === 408) {\n            next(_objectSpread(_objectSpread({}, rest), {}, {\n              error,\n              statusCode: error.code,\n              connectionRefused: false,\n              type: SET_APIERROR\n            }));\n          } // Unauthorized\n          else if ((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusCode) === 401) {\n            next(_objectSpread(_objectSpread({}, rest), {}, {\n              error,\n              statusCode: error.response,\n              message: error.response.body.message,\n              connectionRefused: false,\n              type: SET_APIERROR\n            }));\n          }\n        }\n\n        return next(_objectSpread(_objectSpread({}, rest), {}, {\n          error,\n          type: `${type}_FAIL`\n        }));\n      });\n    }\n\n    return actionPromise;\n  };\n});","map":{"version":3,"names":["Cookies","jwtDecode","matchPath","qs","config","GET_CONTENT","LOGIN","RESET_APIERROR","SET_APIERROR","changeLanguage","normalizeLanguageName","getCookieOptions","socket","addExpandersToPath","path","type","settings","apiExpanders","parseUrl","url","query","expand","expandersFromConfig","filter","match","map","expandMerge","stringifiedExpand","stringify","arrayFormat","encode","querystringFromConfig","reduce","acc","queryMerge","stringifiedQuery","sendOnSocket","request","Promise","resolve","reject","readyState","CONNECTING","addEventListener","OPEN","then","send","JSON","api","dispatch","getState","next","action","mode","rest","subrequest","actionPromise","Array","isArray","all","item","id","prevPromise","op","data","headers","params","checkUrl","actions_raising_api_errors","includes","reqres","result","apierror","connectionRefused","lang","language","token","intl","supportedLanguages","langFileName","locale","default","websockets","cookies","set","expires","Date","exp","get","res","WebSocket","apiPath","replace","onmessage","message","packet","parse","error","code","statusCode","crossDomain","response","body"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/middleware/api.js"],"sourcesContent":["/**\n * Api middleware.\n * @module middleware/api\n */\n\nimport Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport { compact, flatten, union } from 'lodash';\nimport { matchPath } from 'react-router';\nimport qs from 'query-string';\n\nimport config from '@plone/volto/registry';\n\nimport {\n  GET_CONTENT,\n  LOGIN,\n  RESET_APIERROR,\n  SET_APIERROR,\n} from '@plone/volto/constants/ActionTypes';\nimport { changeLanguage } from '@plone/volto/actions';\nimport { normalizeLanguageName, getCookieOptions } from '@plone/volto/helpers';\nlet socket = null;\n\n/**\n *\n * Add configured expanders to an api call for an action\n * Requirements:\n *\n * - It should add the expanders set in the config settings\n * - It should preserve any query if present\n * - It should preserve (and add) any expand parameter (if present) e.g. translations\n * - It should take use the correct codification for arrays in querystring (repeated parameter for each member of the array)\n *\n * @function addExpandersToPath\n * @param {string} path The url/path including the querystring\n * @param {*} type The action type\n * @returns {string} The url/path with the configured expanders added to the query string\n */\nexport function addExpandersToPath(path, type) {\n  const { settings } = config;\n  const { apiExpanders = [] } = settings;\n\n  const {\n    url,\n    query: { expand, ...query },\n  } = qs.parseUrl(path);\n\n  const expandersFromConfig = apiExpanders\n    .filter((expand) => matchPath(url, expand.match) && expand[type])\n    .map((expand) => expand[type]);\n\n  const expandMerge = compact(union([expand, ...flatten(expandersFromConfig)]));\n\n  const stringifiedExpand = qs.stringify(\n    { expand: expandMerge },\n    {\n      arrayFormat: 'comma',\n      encode: false,\n    },\n  );\n\n  const querystringFromConfig = apiExpanders\n    .filter((expand) => matchPath(url, expand.match) && expand[type])\n    .reduce((acc, expand) => ({ ...acc, ...expand?.['querystring'] }), {});\n\n  const queryMerge = { ...query, ...querystringFromConfig };\n\n  const stringifiedQuery = qs.stringify(queryMerge, {\n    encode: false,\n  });\n\n  if (stringifiedQuery && stringifiedExpand) {\n    return `${url}?${stringifiedExpand}&${stringifiedQuery}`;\n  } else if (!stringifiedQuery && stringifiedExpand) {\n    return `${url}?${stringifiedExpand}`;\n  } else if (stringifiedQuery && !stringifiedExpand) {\n    return `${url}?${stringifiedQuery}`;\n  } else {\n    return url;\n  }\n}\n\n/**\n * Send a message on a websocket.\n * @function sendOnSocket\n * @param {Object} request Request object.\n * @returns {Promise} message is send\n */\nfunction sendOnSocket(request) {\n  return new Promise((resolve, reject) => {\n    switch (socket.readyState) {\n      case socket.CONNECTING:\n        socket.addEventListener('open', () => resolve(socket));\n        socket.addEventListener('error', reject);\n        break;\n      case socket.OPEN:\n        resolve(socket);\n        break;\n      default:\n        reject();\n        break;\n    }\n  }).then(() => {\n    socket.send(JSON.stringify(request));\n  });\n}\n\n/**\n * Api middleware.\n * @function\n * @param {Object} api Api object.\n * @returns {Promise} Action promise.\n */\nexport default (api) => ({ dispatch, getState }) => (next) => (action) => {\n  const { settings } = config;\n\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n\n  const { request, type, mode = 'parallel', ...rest } = action;\n  const { subrequest } = action; // We want subrequest remains in `...rest` above\n\n  let actionPromise;\n\n  if (!request) {\n    return next(action);\n  }\n\n  next({ ...rest, type: `${type}_PENDING` });\n\n  if (socket) {\n    actionPromise = Array.isArray(request)\n      ? Promise.all(\n          request.map((item) =>\n            sendOnSocket({\n              ...item,\n              path: addExpandersToPath(item.path, type),\n              id: type,\n            }),\n          ),\n        )\n      : sendOnSocket({\n          ...request,\n          path: addExpandersToPath(request.path, type),\n          id: type,\n        });\n  } else {\n    actionPromise = Array.isArray(request)\n      ? mode === 'serial'\n        ? request.reduce((prevPromise, item) => {\n            return prevPromise.then((acc) => {\n              return api[item.op](addExpandersToPath(item.path, type), {\n                data: item.data,\n                type: item.type,\n                headers: item.headers,\n                params: request.params,\n                checkUrl: settings.actions_raising_api_errors.includes(\n                  action.type,\n                ),\n              }).then((reqres) => {\n                return [...acc, reqres];\n              });\n            });\n          }, Promise.resolve([]))\n        : Promise.all(\n            request.map((item) =>\n              api[item.op](addExpandersToPath(item.path, type), {\n                data: item.data,\n                type: item.type,\n                headers: item.headers,\n                params: request.params,\n                checkUrl: settings.actions_raising_api_errors.includes(\n                  action.type,\n                ),\n              }),\n            ),\n          )\n      : api[request.op](addExpandersToPath(request.path, type), {\n          data: request.data,\n          type: request.type,\n          headers: request.headers,\n          params: request.params,\n          checkUrl: settings.actions_raising_api_errors.includes(action.type),\n        });\n    actionPromise.then(\n      (result) => {\n        const { settings } = config;\n        if (getState().apierror.connectionRefused) {\n          next({\n            ...rest,\n            type: RESET_APIERROR,\n          });\n        }\n        if (type === GET_CONTENT) {\n          const lang = result?.language?.token;\n          if (\n            lang &&\n            getState().intl.language !== lang &&\n            !subrequest &&\n            config.settings.supportedLanguages.includes(lang)\n          ) {\n            const langFileName = normalizeLanguageName(lang);\n            import('~/../locales/' + langFileName + '.json').then((locale) => {\n              dispatch(changeLanguage(lang, locale.default));\n            });\n          }\n        }\n        if (type === LOGIN && settings.websockets) {\n          const cookies = new Cookies();\n          cookies.set(\n            'auth_token',\n            result.token,\n            getCookieOptions({\n              expires: new Date(jwtDecode(result.token).exp * 1000),\n            }),\n          );\n          api.get('/@wstoken').then((res) => {\n            socket = new WebSocket(\n              `${settings.apiPath.replace('http', 'ws')}/@ws?ws_token=${\n                res.token\n              }`,\n            );\n            socket.onmessage = (message) => {\n              const packet = JSON.parse(message.data);\n              if (packet.error) {\n                dispatch({\n                  type: `${packet.id}_FAIL`,\n                  error: packet.error,\n                });\n              } else {\n                dispatch({\n                  type: `${packet.id}_SUCCESS`,\n                  result: JSON.parse(packet.data),\n                });\n              }\n            };\n          });\n        }\n        return next({ ...rest, result, type: `${type}_SUCCESS` });\n      },\n      (error) => {\n        // Only SRR can set ECONNREFUSED\n        if (error.code === 'ECONNREFUSED') {\n          next({\n            ...rest,\n            error,\n            statusCode: error.code,\n            connectionRefused: true,\n            type: SET_APIERROR,\n          });\n        }\n\n        // Response error is marked crossDomain if CORS error happen\n        else if (error.crossDomain) {\n          next({\n            ...rest,\n            error,\n            statusCode: 'CORSERROR',\n            connectionRefused: false,\n            type: SET_APIERROR,\n          });\n        }\n\n        // Check for actions who can raise api errors\n        if (settings.actions_raising_api_errors.includes(action.type)) {\n          // Gateway timeout\n          if (error?.response?.statusCode === 504) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.code,\n              connectionRefused: true,\n              type: SET_APIERROR,\n            });\n          }\n\n          // Redirect\n          else if (error?.code === 301) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.code,\n              connectionRefused: false,\n              type: SET_APIERROR,\n            });\n          }\n\n          // Redirect\n          else if (error?.code === 408) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.code,\n              connectionRefused: false,\n              type: SET_APIERROR,\n            });\n          }\n\n          // Unauthorized\n          else if (error?.response?.statusCode === 401) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.response,\n              message: error.response.body.message,\n              connectionRefused: false,\n              type: SET_APIERROR,\n            });\n          }\n        }\n        return next({ ...rest, error, type: `${type}_FAIL` });\n      },\n    );\n  }\n\n  return actionPromise;\n};\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,EAAP,MAAe,cAAf;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,SACEC,WADF,EAEEC,KAFF,EAGEC,cAHF,EAIEC,YAJF,QAKO,oCALP;AAMA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,qBAAT,EAAgCC,gBAAhC,QAAwD,sBAAxD;AACA,IAAIC,MAAM,GAAG,IAAb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,IAAlC,EAAwC;EAC7C,MAAM;IAAEC;EAAF,IAAeZ,MAArB;EACA,MAAM;IAAEa,YAAY,GAAG;EAAjB,IAAwBD,QAA9B;;EAEA,qBAGIb,EAAE,CAACe,QAAH,CAAYJ,IAAZ,CAHJ;EAAA,MAAM;IACJK,GADI;IAEJC,KAAK,EAAE;MAAEC;IAAF;EAFH,CAAN;EAAA,MAEsBD,KAFtB,yCAEEA,KAFF;;EAKA,MAAME,mBAAmB,GAAGL,YAAY,CACrCM,MADyB,CACjBF,MAAD,IAAYnB,SAAS,CAACiB,GAAD,EAAME,MAAM,CAACG,KAAb,CAAT,IAAgCH,MAAM,CAACN,IAAD,CADhC,EAEzBU,GAFyB,CAEpBJ,MAAD,IAAYA,MAAM,CAACN,IAAD,CAFG,CAA5B;;EAIA,MAAMW,WAAW,GAAG,SAAQ,OAAM,CAACL,MAAD,EAAS,GAAG,SAAQC,mBAAR,CAAZ,CAAN,CAAR,CAApB;;EAEA,MAAMK,iBAAiB,GAAGxB,EAAE,CAACyB,SAAH,CACxB;IAAEP,MAAM,EAAEK;EAAV,CADwB,EAExB;IACEG,WAAW,EAAE,OADf;IAEEC,MAAM,EAAE;EAFV,CAFwB,CAA1B;EAQA,MAAMC,qBAAqB,GAAGd,YAAY,CACvCM,MAD2B,CACnBF,MAAD,IAAYnB,SAAS,CAACiB,GAAD,EAAME,MAAM,CAACG,KAAb,CAAT,IAAgCH,MAAM,CAACN,IAAD,CAD9B,EAE3BiB,MAF2B,CAEpB,CAACC,GAAD,EAAMZ,MAAN,qCAAuBY,GAAvB,GAA+BZ,MAA/B,aAA+BA,MAA/B,uBAA+BA,MAAM,CAAG,aAAH,CAArC,CAFoB,EAEuC,EAFvC,CAA9B;;EAIA,MAAMa,UAAU,mCAAQd,KAAR,GAAkBW,qBAAlB,CAAhB;;EAEA,MAAMI,gBAAgB,GAAGhC,EAAE,CAACyB,SAAH,CAAaM,UAAb,EAAyB;IAChDJ,MAAM,EAAE;EADwC,CAAzB,CAAzB;;EAIA,IAAIK,gBAAgB,IAAIR,iBAAxB,EAA2C;IACzC,OAAQ,GAAER,GAAI,IAAGQ,iBAAkB,IAAGQ,gBAAiB,EAAvD;EACD,CAFD,MAEO,IAAI,CAACA,gBAAD,IAAqBR,iBAAzB,EAA4C;IACjD,OAAQ,GAAER,GAAI,IAAGQ,iBAAkB,EAAnC;EACD,CAFM,MAEA,IAAIQ,gBAAgB,IAAI,CAACR,iBAAzB,EAA4C;IACjD,OAAQ,GAAER,GAAI,IAAGgB,gBAAiB,EAAlC;EACD,CAFM,MAEA;IACL,OAAOhB,GAAP;EACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,SAASiB,YAAT,CAAsBC,OAAtB,EAA+B;EAC7B,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtC,QAAQ5B,MAAM,CAAC6B,UAAf;MACE,KAAK7B,MAAM,CAAC8B,UAAZ;QACE9B,MAAM,CAAC+B,gBAAP,CAAwB,MAAxB,EAAgC,MAAMJ,OAAO,CAAC3B,MAAD,CAA7C;QACAA,MAAM,CAAC+B,gBAAP,CAAwB,OAAxB,EAAiCH,MAAjC;QACA;;MACF,KAAK5B,MAAM,CAACgC,IAAZ;QACEL,OAAO,CAAC3B,MAAD,CAAP;QACA;;MACF;QACE4B,MAAM;QACN;IAVJ;EAYD,CAbM,EAaJK,IAbI,CAaC,MAAM;IACZjC,MAAM,CAACkC,IAAP,CAAYC,IAAI,CAACnB,SAAL,CAAeS,OAAf,CAAZ;EACD,CAfM,CAAP;AAgBD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAgBW,GAAD,IAAS;EAAA,IAAC;IAAEC,QAAF;IAAYC;EAAZ,CAAD;EAAA,OAA6BC,IAAD,IAAWC,MAAD,IAAY;IACxE,MAAM;MAAEpC;IAAF,IAAeZ,MAArB;;IAEA,IAAI,OAAOgD,MAAP,KAAkB,UAAtB,EAAkC;MAChC,OAAOA,MAAM,CAACH,QAAD,EAAWC,QAAX,CAAb;IACD;;IAED,MAAM;MAAEb,OAAF;MAAWtB,IAAX;MAAiBsC,IAAI,GAAG;IAAxB,IAAgDD,MAAtD;IAAA,MAA6CE,IAA7C,4BAAsDF,MAAtD;;IACA,MAAM;MAAEG;IAAF,IAAiBH,MAAvB,CARwE,CAQzC;;IAE/B,IAAII,aAAJ;;IAEA,IAAI,CAACnB,OAAL,EAAc;MACZ,OAAOc,IAAI,CAACC,MAAD,CAAX;IACD;;IAEDD,IAAI,iCAAMG,IAAN;MAAYvC,IAAI,EAAG,GAAEA,IAAK;IAA1B,GAAJ;;IAEA,IAAIH,MAAJ,EAAY;MACV4C,aAAa,GAAGC,KAAK,CAACC,OAAN,CAAcrB,OAAd,IACZC,OAAO,CAACqB,GAAR,CACEtB,OAAO,CAACZ,GAAR,CAAamC,IAAD,IACVxB,YAAY,iCACPwB,IADO;QAEV9C,IAAI,EAAED,kBAAkB,CAAC+C,IAAI,CAAC9C,IAAN,EAAYC,IAAZ,CAFd;QAGV8C,EAAE,EAAE9C;MAHM,GADd,CADF,CADY,GAUZqB,YAAY,iCACPC,OADO;QAEVvB,IAAI,EAAED,kBAAkB,CAACwB,OAAO,CAACvB,IAAT,EAAeC,IAAf,CAFd;QAGV8C,EAAE,EAAE9C;MAHM,GAVhB;IAeD,CAhBD,MAgBO;MACLyC,aAAa,GAAGC,KAAK,CAACC,OAAN,CAAcrB,OAAd,IACZgB,IAAI,KAAK,QAAT,GACEhB,OAAO,CAACL,MAAR,CAAe,CAAC8B,WAAD,EAAcF,IAAd,KAAuB;QACpC,OAAOE,WAAW,CAACjB,IAAZ,CAAkBZ,GAAD,IAAS;UAC/B,OAAOe,GAAG,CAACY,IAAI,CAACG,EAAN,CAAH,CAAalD,kBAAkB,CAAC+C,IAAI,CAAC9C,IAAN,EAAYC,IAAZ,CAA/B,EAAkD;YACvDiD,IAAI,EAAEJ,IAAI,CAACI,IAD4C;YAEvDjD,IAAI,EAAE6C,IAAI,CAAC7C,IAF4C;YAGvDkD,OAAO,EAAEL,IAAI,CAACK,OAHyC;YAIvDC,MAAM,EAAE7B,OAAO,CAAC6B,MAJuC;YAKvDC,QAAQ,EAAEnD,QAAQ,CAACoD,0BAAT,CAAoCC,QAApC,CACRjB,MAAM,CAACrC,IADC;UAL6C,CAAlD,EAQJ8B,IARI,CAQEyB,MAAD,IAAY;YAClB,OAAO,CAAC,GAAGrC,GAAJ,EAASqC,MAAT,CAAP;UACD,CAVM,CAAP;QAWD,CAZM,CAAP;MAaD,CAdD,EAcGhC,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAdH,CADF,GAgBED,OAAO,CAACqB,GAAR,CACEtB,OAAO,CAACZ,GAAR,CAAamC,IAAD,IACVZ,GAAG,CAACY,IAAI,CAACG,EAAN,CAAH,CAAalD,kBAAkB,CAAC+C,IAAI,CAAC9C,IAAN,EAAYC,IAAZ,CAA/B,EAAkD;QAChDiD,IAAI,EAAEJ,IAAI,CAACI,IADqC;QAEhDjD,IAAI,EAAE6C,IAAI,CAAC7C,IAFqC;QAGhDkD,OAAO,EAAEL,IAAI,CAACK,OAHkC;QAIhDC,MAAM,EAAE7B,OAAO,CAAC6B,MAJgC;QAKhDC,QAAQ,EAAEnD,QAAQ,CAACoD,0BAAT,CAAoCC,QAApC,CACRjB,MAAM,CAACrC,IADC;MALsC,CAAlD,CADF,CADF,CAjBU,GA8BZiC,GAAG,CAACX,OAAO,CAAC0B,EAAT,CAAH,CAAgBlD,kBAAkB,CAACwB,OAAO,CAACvB,IAAT,EAAeC,IAAf,CAAlC,EAAwD;QACtDiD,IAAI,EAAE3B,OAAO,CAAC2B,IADwC;QAEtDjD,IAAI,EAAEsB,OAAO,CAACtB,IAFwC;QAGtDkD,OAAO,EAAE5B,OAAO,CAAC4B,OAHqC;QAItDC,MAAM,EAAE7B,OAAO,CAAC6B,MAJsC;QAKtDC,QAAQ,EAAEnD,QAAQ,CAACoD,0BAAT,CAAoCC,QAApC,CAA6CjB,MAAM,CAACrC,IAApD;MAL4C,CAAxD,CA9BJ;MAqCAyC,aAAa,CAACX,IAAd,CACG0B,MAAD,IAAY;QACV,MAAM;UAAEvD;QAAF,IAAeZ,MAArB;;QACA,IAAI8C,QAAQ,GAAGsB,QAAX,CAAoBC,iBAAxB,EAA2C;UACzCtB,IAAI,iCACCG,IADD;YAEFvC,IAAI,EAAER;UAFJ,GAAJ;QAID;;QACD,IAAIQ,IAAI,KAAKV,WAAb,EAA0B;UAAA;;UACxB,MAAMqE,IAAI,GAAGH,MAAH,aAAGA,MAAH,2CAAGA,MAAM,CAAEI,QAAX,qDAAG,iBAAkBC,KAA/B;;UACA,IACEF,IAAI,IACJxB,QAAQ,GAAG2B,IAAX,CAAgBF,QAAhB,KAA6BD,IAD7B,IAEA,CAACnB,UAFD,IAGAnD,MAAM,CAACY,QAAP,CAAgB8D,kBAAhB,CAAmCT,QAAnC,CAA4CK,IAA5C,CAJF,EAKE;YACA,MAAMK,YAAY,GAAGrE,qBAAqB,CAACgE,IAAD,CAA1C;YACA,OAAO,4BAAkBK,YAAlB,GAAiC,OAAxC,EAAiDlC,IAAjD,CAAuDmC,MAAD,IAAY;cAChE/B,QAAQ,CAACxC,cAAc,CAACiE,IAAD,EAAOM,MAAM,CAACC,OAAd,CAAf,CAAR;YACD,CAFD;UAGD;QACF;;QACD,IAAIlE,IAAI,KAAKT,KAAT,IAAkBU,QAAQ,CAACkE,UAA/B,EAA2C;UACzC,MAAMC,OAAO,GAAG,IAAInF,OAAJ,EAAhB;UACAmF,OAAO,CAACC,GAAR,CACE,YADF,EAEEb,MAAM,CAACK,KAFT,EAGEjE,gBAAgB,CAAC;YACf0E,OAAO,EAAE,IAAIC,IAAJ,CAASrF,SAAS,CAACsE,MAAM,CAACK,KAAR,CAAT,CAAwBW,GAAxB,GAA8B,IAAvC;UADM,CAAD,CAHlB;UAOAvC,GAAG,CAACwC,GAAJ,CAAQ,WAAR,EAAqB3C,IAArB,CAA2B4C,GAAD,IAAS;YACjC7E,MAAM,GAAG,IAAI8E,SAAJ,CACN,GAAE1E,QAAQ,CAAC2E,OAAT,CAAiBC,OAAjB,CAAyB,MAAzB,EAAiC,IAAjC,CAAuC,iBACxCH,GAAG,CAACb,KACL,EAHM,CAAT;;YAKAhE,MAAM,CAACiF,SAAP,GAAoBC,OAAD,IAAa;cAC9B,MAAMC,MAAM,GAAGhD,IAAI,CAACiD,KAAL,CAAWF,OAAO,CAAC9B,IAAnB,CAAf;;cACA,IAAI+B,MAAM,CAACE,KAAX,EAAkB;gBAChBhD,QAAQ,CAAC;kBACPlC,IAAI,EAAG,GAAEgF,MAAM,CAAClC,EAAG,OADZ;kBAEPoC,KAAK,EAAEF,MAAM,CAACE;gBAFP,CAAD,CAAR;cAID,CALD,MAKO;gBACLhD,QAAQ,CAAC;kBACPlC,IAAI,EAAG,GAAEgF,MAAM,CAAClC,EAAG,UADZ;kBAEPU,MAAM,EAAExB,IAAI,CAACiD,KAAL,CAAWD,MAAM,CAAC/B,IAAlB;gBAFD,CAAD,CAAR;cAID;YACF,CAbD;UAcD,CApBD;QAqBD;;QACD,OAAOb,IAAI,iCAAMG,IAAN;UAAYiB,MAAZ;UAAoBxD,IAAI,EAAG,GAAEA,IAAK;QAAlC,GAAX;MACD,CAvDH,EAwDGkF,KAAD,IAAW;QACT;QACA,IAAIA,KAAK,CAACC,IAAN,KAAe,cAAnB,EAAmC;UACjC/C,IAAI,iCACCG,IADD;YAEF2C,KAFE;YAGFE,UAAU,EAAEF,KAAK,CAACC,IAHhB;YAIFzB,iBAAiB,EAAE,IAJjB;YAKF1D,IAAI,EAAEP;UALJ,GAAJ;QAOD,CARD,CAUA;QAVA,KAWK,IAAIyF,KAAK,CAACG,WAAV,EAAuB;UAC1BjD,IAAI,iCACCG,IADD;YAEF2C,KAFE;YAGFE,UAAU,EAAE,WAHV;YAIF1B,iBAAiB,EAAE,KAJjB;YAKF1D,IAAI,EAAEP;UALJ,GAAJ;QAOD,CArBQ,CAuBT;;;QACA,IAAIQ,QAAQ,CAACoD,0BAAT,CAAoCC,QAApC,CAA6CjB,MAAM,CAACrC,IAApD,CAAJ,EAA+D;UAAA;;UAC7D;UACA,IAAI,CAAAkF,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEI,QAAP,oEAAiBF,UAAjB,MAAgC,GAApC,EAAyC;YACvChD,IAAI,iCACCG,IADD;cAEF2C,KAFE;cAGFE,UAAU,EAAEF,KAAK,CAACC,IAHhB;cAIFzB,iBAAiB,EAAE,IAJjB;cAKF1D,IAAI,EAAEP;YALJ,GAAJ;UAOD,CARD,CAUA;UAVA,KAWK,IAAI,CAAAyF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,MAAgB,GAApB,EAAyB;YAC5B/C,IAAI,iCACCG,IADD;cAEF2C,KAFE;cAGFE,UAAU,EAAEF,KAAK,CAACC,IAHhB;cAIFzB,iBAAiB,EAAE,KAJjB;cAKF1D,IAAI,EAAEP;YALJ,GAAJ;UAOD,CARI,CAUL;UAVK,KAWA,IAAI,CAAAyF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,MAAgB,GAApB,EAAyB;YAC5B/C,IAAI,iCACCG,IADD;cAEF2C,KAFE;cAGFE,UAAU,EAAEF,KAAK,CAACC,IAHhB;cAIFzB,iBAAiB,EAAE,KAJjB;cAKF1D,IAAI,EAAEP;YALJ,GAAJ;UAOD,CARI,CAUL;UAVK,KAWA,IAAI,CAAAyF,KAAK,SAAL,IAAAA,KAAK,WAAL,gCAAAA,KAAK,CAAEI,QAAP,sEAAiBF,UAAjB,MAAgC,GAApC,EAAyC;YAC5ChD,IAAI,iCACCG,IADD;cAEF2C,KAFE;cAGFE,UAAU,EAAEF,KAAK,CAACI,QAHhB;cAIFP,OAAO,EAAEG,KAAK,CAACI,QAAN,CAAeC,IAAf,CAAoBR,OAJ3B;cAKFrB,iBAAiB,EAAE,KALjB;cAMF1D,IAAI,EAAEP;YANJ,GAAJ;UAQD;QACF;;QACD,OAAO2C,IAAI,iCAAMG,IAAN;UAAY2C,KAAZ;UAAmBlF,IAAI,EAAG,GAAEA,IAAK;QAAjC,GAAX;MACD,CA/HH;IAiID;;IAED,OAAOyC,aAAP;EACD,CA5MuB;AAAA,CAAxB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}