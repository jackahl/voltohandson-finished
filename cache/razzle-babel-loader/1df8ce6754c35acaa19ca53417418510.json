{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Table/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withTable } from './extensions';\nimport TableButton from './TableButton';\nimport { tableElements } from './render';\nimport './less/public.less';\nimport clearSVG from '@plone/volto/icons/delete.svg';\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\nimport { ToolbarButton } from '@plone/volto-slate/editor/ui';\nimport { Range, Transforms, Editor, Path } from 'slate';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { TABLE, TR, P, TD, TH } from '@plone/volto-slate/constants';\nconst messages = defineMessages({\n  deleteTable: {\n    \"id\": \"Delete table\",\n    \"defaultMessage\": \"Delete table\"\n  },\n  insertRowBefore: {\n    \"id\": \"Insert row before\",\n    \"defaultMessage\": \"Insert row before\"\n  },\n  insertRowAfter: {\n    \"id\": \"Insert row after\",\n    \"defaultMessage\": \"Insert row after\"\n  },\n  deleteRow: {\n    \"id\": \"Delete row\",\n    \"defaultMessage\": \"Delete row\"\n  },\n  insertColBefore: {\n    \"id\": \"Insert col before\",\n    \"defaultMessage\": \"Insert col before\"\n  },\n  insertColAfter: {\n    \"id\": \"Insert col after\",\n    \"defaultMessage\": \"Insert col after\"\n  },\n  deleteCol: {\n    \"id\": \"Delete col\",\n    \"defaultMessage\": \"Delete col\"\n  }\n});\n\nconst unhangRange = function (editor) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    at = editor.selection,\n    voids,\n    unhang = true\n  } = options;\n\n  if (Range.isRange(at) && unhang) {\n    options.at = Editor.unhangRange(editor, at, {\n      voids\n    });\n  }\n};\n\nconst getNodes = function (editor) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  unhangRange(editor, options);\n  return Editor.nodes(editor, options);\n};\n\nconst findNode = function (editor) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  try {\n    const nodeEntries = getNodes(editor, {\n      at: editor.selection || editor.getSavedSelection() || []\n    });\n\n    for (const [node, path] of nodeEntries) {\n      return [node, path];\n    }\n  } catch (error) {\n    return undefined;\n  }\n};\n\nconst someNode = (editor, options) => {\n  return !!findNode(editor, options);\n};\n\nconst getEmptyCellNode = (editor, _ref) => {\n  let {\n    header\n  } = _ref;\n  return {\n    type: header ? TH : TD,\n    children: [{\n      type: P,\n      children: [{\n        text: ''\n      }]\n    }]\n  };\n};\n\nconst getEmptyRowNode = (editor, _ref2) => {\n  let {\n    header,\n    colCount\n  } = _ref2;\n  return {\n    type: TR,\n    children: Array(colCount).fill(colCount).map(() => getEmptyCellNode(editor, {\n      header\n    }))\n  };\n};\n\nconst addRowBefore = function (editor) {\n  let {\n    header\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (someNode(editor, {\n    match: n => n.type === TABLE\n  })) {\n    const currentRowItem = Editor.above(editor, {\n      match: n => n.type === TR\n    });\n\n    if (currentRowItem) {\n      const [currentRowElem, currentRowPath] = currentRowItem;\n      Transforms.insertNodes(editor, getEmptyRowNode(editor, {\n        header,\n        colCount: currentRowElem.children.length\n      }), {\n        at: currentRowPath,\n        select: true // TODO: this and similar lines in the Table plugin do nothing currently, why?\n\n      });\n    }\n  }\n};\n\nconst addRowAfter = function (editor) {\n  let {\n    header\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (someNode(editor, {\n    match: n => n.type === TABLE\n  })) {\n    const currentRowItem = Editor.above(editor, {\n      match: n => n.type === TR\n    });\n\n    if (currentRowItem) {\n      const [currentRowElem, currentRowPath] = currentRowItem;\n      Transforms.insertNodes(editor, getEmptyRowNode(editor, {\n        header,\n        colCount: currentRowElem.children.length\n      }), {\n        at: Path.next(currentRowPath),\n        select: true\n      });\n    }\n  }\n};\n\nconst deleteRow = editor => {\n  if (someNode(editor, {\n    match: n => n.type === TABLE\n  })) {\n    const currentTableItem = Editor.above(editor, {\n      match: n => n.type === TABLE\n    });\n    const currentRowItem = Editor.above(editor, {\n      match: n => n.type === TR\n    });\n\n    if (currentRowItem && currentTableItem && // Cannot delete the last row\n    // TODO: handle tfoot and thead Element types here:\n    currentTableItem[0].children[0].children.length > 1) {\n      Transforms.removeNodes(editor, {\n        at: currentRowItem[1]\n      });\n    }\n  }\n};\n\nconst addColBefore = function (editor) {\n  let {\n    header\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (someNode(editor, {\n    match: n => n.type === TABLE\n  })) {\n    const currentCellItem = Editor.above(editor, {\n      match: n => n.type === TH || n.type === TD\n    });\n    const currentTableItem = Editor.above(editor, {\n      match: n => n.type === TABLE\n    });\n\n    if (currentCellItem && currentTableItem) {\n      const nextCellPath = currentCellItem[1];\n      const newCellPath = nextCellPath.slice();\n      const replacePathPos = newCellPath.length - 2;\n      const currentRowIdx = nextCellPath[replacePathPos]; // TODO: handle tfoot and thead too:\n\n      currentTableItem[0].children[0].children.forEach((row, rowIdx) => {\n        newCellPath[replacePathPos] = rowIdx;\n        const isHeaderRow = header === undefined ? row.children[0].type === TH : header;\n        Transforms.insertNodes(editor, getEmptyCellNode(editor, {\n          header: isHeaderRow\n        }), {\n          at: newCellPath,\n          select: rowIdx === currentRowIdx\n        });\n      });\n    }\n  }\n};\n\nconst addColAfter = function (editor) {\n  let {\n    header\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (someNode(editor, {\n    match: n => n.type === TABLE\n  })) {\n    const currentCellItem = Editor.above(editor, {\n      match: n => n.type === TH || n.type === TD\n    });\n    const currentTableItem = Editor.above(editor, {\n      match: n => n.type === TABLE\n    });\n\n    if (currentCellItem && currentTableItem) {\n      const nextCellPath = Path.next(currentCellItem[1]);\n      const newCellPath = nextCellPath.slice();\n      const replacePathPos = newCellPath.length - 2;\n      const currentRowIdx = nextCellPath[replacePathPos]; // TODO: handle tfoot and thead too:\n\n      currentTableItem[0].children[0].children.forEach((row, rowIdx) => {\n        newCellPath[replacePathPos] = rowIdx;\n        const isHeaderRow = header === undefined ? row.children[0].type === TH : header;\n        Transforms.insertNodes(editor, getEmptyCellNode(editor, {\n          header: isHeaderRow\n        }), {\n          at: newCellPath,\n          select: rowIdx === currentRowIdx\n        });\n      });\n    }\n  }\n};\n\nconst deleteCol = editor => {\n  if (someNode(editor, {\n    match: n => n.type === TABLE\n  })) {\n    const currentCellItem = Editor.above(editor, {\n      match: n => n.type === TD || n.type === TH\n    });\n    const currentRowItem = Editor.above(editor, {\n      match: n => n.type === TR\n    });\n    const currentTableItem = Editor.above(editor, {\n      match: n => n.type === TABLE\n    });\n\n    if (currentCellItem && currentRowItem && currentTableItem && // Cannot delete the last cell\n    currentRowItem[0].children.length > 1) {\n      const currentCellPath = currentCellItem[1];\n      const pathToDelete = currentCellPath.slice();\n      const replacePathPos = pathToDelete.length - 2; // TODO: handle tfoot and thead too:\n\n      currentTableItem[0].children[0].children.forEach((row, rowIdx) => {\n        pathToDelete[replacePathPos] = rowIdx;\n        Transforms.removeNodes(editor, {\n          at: pathToDelete\n        });\n      });\n    }\n  }\n};\n\nexport default function install(config) {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$(),\n      _s3 = $RefreshSig$(),\n      _s4 = $RefreshSig$(),\n      _s5 = $RefreshSig$(),\n      _s6 = $RefreshSig$(),\n      _s7 = $RefreshSig$();\n\n  const {\n    slate\n  } = config.settings;\n  slate.extensions = [...(slate.extensions || []), withTable];\n  slate.elements = _objectSpread(_objectSpread({}, slate.elements), tableElements);\n  slate.elementToolbarButtons[TABLE] = [_s(_ref3 => {\n    _s();\n\n    let {\n      editor\n    } = _ref3;\n    const intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.deleteTable),\n      icon: clearSVG,\n      \"aria-label\": intl.formatMessage(messages.deleteTable),\n      onMouseDown: () => {\n        Transforms.removeNodes(editor, {\n          at: editor.selection || editor.getSavedSelection(),\n          match: n => n.type === TABLE\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s2(_ref4 => {\n    _s2();\n\n    let {\n      editor\n    } = _ref4;\n    const intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.insertRowBefore),\n      icon: rowBeforeSVG,\n      \"aria-label\": intl.formatMessage(messages.insertRowBefore),\n      onMouseDown: () => {\n        addRowBefore(editor);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s3(_ref5 => {\n    _s3();\n\n    let {\n      editor\n    } = _ref5;\n    const intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.insertRowAfter),\n      icon: rowAfterSVG,\n      \"aria-label\": intl.formatMessage(messages.insertRowAfter),\n      onMouseDown: () => {\n        addRowAfter(editor, {\n          header: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s4(_ref6 => {\n    _s4();\n\n    let {\n      editor\n    } = _ref6;\n    const intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.deleteRow),\n      icon: rowDeleteSVG,\n      \"aria-label\": intl.formatMessage(messages.deleteRow),\n      onMouseDown: () => {\n        deleteRow(editor);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s5(_ref7 => {\n    _s5();\n\n    let {\n      editor\n    } = _ref7;\n    const intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.insertColBefore),\n      icon: colBeforeSVG,\n      \"aria-label\": intl.formatMessage(messages.insertColBefore),\n      onMouseDown: () => {\n        addColBefore(editor);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s6(_ref8 => {\n    _s6();\n\n    let {\n      editor\n    } = _ref8;\n    const intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.insertColAfter),\n      icon: colAfterSVG,\n      \"aria-label\": intl.formatMessage(messages.insertColAfter),\n      onMouseDown: () => {\n        addColAfter(editor);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s7(_ref9 => {\n    _s7();\n\n    let {\n      editor\n    } = _ref9;\n    const intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.deleteCol),\n      icon: colDeleteSVG,\n      \"aria-label\": intl.formatMessage(messages.deleteCol),\n      onMouseDown: () => {\n        deleteCol(editor);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  })];\n  return config;\n}\nexport const installTableButton = config => {\n  const {\n    slate\n  } = config.settings;\n\n  slate.buttons.table = props => __jsx(TableButton, _extends({}, props, {\n    title: \"Table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 36\n    }\n  }));\n\n  slate.toolbarButtons = [...(slate.toolbarButtons || []), 'table'];\n  slate.expandedToolbarButtons = [...(slate.expandedToolbarButtons || []), 'table'];\n  return config;\n};","map":{"version":3,"names":["React","withTable","TableButton","tableElements","clearSVG","rowBeforeSVG","rowAfterSVG","colBeforeSVG","colAfterSVG","rowDeleteSVG","colDeleteSVG","ToolbarButton","Range","Transforms","Editor","Path","defineMessages","useIntl","TABLE","TR","P","TD","TH","messages","deleteTable","insertRowBefore","insertRowAfter","deleteRow","insertColBefore","insertColAfter","deleteCol","unhangRange","editor","options","at","selection","voids","unhang","isRange","getNodes","nodes","findNode","nodeEntries","getSavedSelection","node","path","error","undefined","someNode","getEmptyCellNode","header","type","children","text","getEmptyRowNode","colCount","Array","fill","map","addRowBefore","match","n","currentRowItem","above","currentRowElem","currentRowPath","insertNodes","length","select","addRowAfter","next","currentTableItem","removeNodes","addColBefore","currentCellItem","nextCellPath","newCellPath","slice","replacePathPos","currentRowIdx","forEach","row","rowIdx","isHeaderRow","addColAfter","currentCellPath","pathToDelete","install","config","slate","settings","extensions","elements","elementToolbarButtons","intl","formatMessage","installTableButton","buttons","table","props","toolbarButtons","expandedToolbarButtons"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Table/index.js"],"sourcesContent":["import React from 'react';\nimport { withTable } from './extensions';\nimport TableButton from './TableButton';\nimport { tableElements } from './render';\nimport './less/public.less';\n\nimport clearSVG from '@plone/volto/icons/delete.svg';\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\n\nimport { ToolbarButton } from '@plone/volto-slate/editor/ui';\nimport { Range, Transforms, Editor, Path } from 'slate';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { TABLE, TR, P, TD, TH } from '@plone/volto-slate/constants';\n\nconst messages = defineMessages({\n  deleteTable: {\n    id: 'Delete table',\n    defaultMessage: 'Delete table',\n  },\n  insertRowBefore: {\n    id: 'Insert row before',\n    defaultMessage: 'Insert row before',\n  },\n  insertRowAfter: {\n    id: 'Insert row after',\n    defaultMessage: 'Insert row after',\n  },\n  deleteRow: {\n    id: 'Delete row',\n    defaultMessage: 'Delete row',\n  },\n  insertColBefore: {\n    id: 'Insert col before',\n    defaultMessage: 'Insert col before',\n  },\n  insertColAfter: {\n    id: 'Insert col after',\n    defaultMessage: 'Insert col after',\n  },\n  deleteCol: {\n    id: 'Delete col',\n    defaultMessage: 'Delete col',\n  },\n});\n\nconst unhangRange = (editor, options = {}) => {\n  const { at = editor.selection, voids, unhang = true } = options;\n\n  if (Range.isRange(at) && unhang) {\n    options.at = Editor.unhangRange(editor, at, { voids });\n  }\n};\n\nconst getNodes = (editor, options = {}) => {\n  unhangRange(editor, options);\n\n  return Editor.nodes(editor, options);\n};\n\nconst findNode = (editor, options = {}) => {\n  try {\n    const nodeEntries = getNodes(editor, {\n      at: editor.selection || editor.getSavedSelection() || [],\n    });\n\n    for (const [node, path] of nodeEntries) {\n      return [node, path];\n    }\n  } catch (error) {\n    return undefined;\n  }\n};\n\nconst someNode = (editor, options) => {\n  return !!findNode(editor, options);\n};\n\nconst getEmptyCellNode = (editor, { header }) => {\n  return {\n    type: header ? TH : TD,\n    children: [{ type: P, children: [{ text: '' }] }],\n  };\n};\n\nconst getEmptyRowNode = (editor, { header, colCount }) => {\n  return {\n    type: TR,\n    children: Array(colCount)\n      .fill(colCount)\n      .map(() => getEmptyCellNode(editor, { header })),\n  };\n};\n\nconst addRowBefore = (editor, { header } = {}) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentRowItem = Editor.above(editor, {\n      match: (n) => n.type === TR,\n    });\n    if (currentRowItem) {\n      const [currentRowElem, currentRowPath] = currentRowItem;\n      Transforms.insertNodes(\n        editor,\n        getEmptyRowNode(editor, {\n          header,\n          colCount: currentRowElem.children.length,\n        }),\n        {\n          at: currentRowPath,\n          select: true, // TODO: this and similar lines in the Table plugin do nothing currently, why?\n        },\n      );\n    }\n  }\n};\n\nconst addRowAfter = (editor, { header } = {}) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentRowItem = Editor.above(editor, {\n      match: (n) => n.type === TR,\n    });\n    if (currentRowItem) {\n      const [currentRowElem, currentRowPath] = currentRowItem;\n      Transforms.insertNodes(\n        editor,\n        getEmptyRowNode(editor, {\n          header,\n          colCount: currentRowElem.children.length,\n        }),\n        {\n          at: Path.next(currentRowPath),\n          select: true,\n        },\n      );\n    }\n  }\n};\n\nconst deleteRow = (editor) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentTableItem = Editor.above(editor, {\n      match: (n) => n.type === TABLE,\n    });\n    const currentRowItem = Editor.above(editor, {\n      match: (n) => n.type === TR,\n    });\n    if (\n      currentRowItem &&\n      currentTableItem &&\n      // Cannot delete the last row\n      // TODO: handle tfoot and thead Element types here:\n      currentTableItem[0].children[0].children.length > 1\n    ) {\n      Transforms.removeNodes(editor, { at: currentRowItem[1] });\n    }\n  }\n};\n\nconst addColBefore = (editor, { header } = {}) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentCellItem = Editor.above(editor, {\n      match: (n) => n.type === TH || n.type === TD,\n    });\n    const currentTableItem = Editor.above(editor, {\n      match: (n) => n.type === TABLE,\n    });\n\n    if (currentCellItem && currentTableItem) {\n      const nextCellPath = currentCellItem[1];\n      const newCellPath = nextCellPath.slice();\n      const replacePathPos = newCellPath.length - 2;\n      const currentRowIdx = nextCellPath[replacePathPos];\n\n      // TODO: handle tfoot and thead too:\n      currentTableItem[0].children[0].children.forEach((row, rowIdx) => {\n        newCellPath[replacePathPos] = rowIdx;\n        const isHeaderRow =\n          header === undefined ? row.children[0].type === TH : header;\n\n        Transforms.insertNodes(\n          editor,\n          getEmptyCellNode(editor, { header: isHeaderRow }),\n          {\n            at: newCellPath,\n            select: rowIdx === currentRowIdx,\n          },\n        );\n      });\n    }\n  }\n};\n\nconst addColAfter = (editor, { header } = {}) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentCellItem = Editor.above(editor, {\n      match: (n) => n.type === TH || n.type === TD,\n    });\n    const currentTableItem = Editor.above(editor, {\n      match: (n) => n.type === TABLE,\n    });\n\n    if (currentCellItem && currentTableItem) {\n      const nextCellPath = Path.next(currentCellItem[1]);\n      const newCellPath = nextCellPath.slice();\n      const replacePathPos = newCellPath.length - 2;\n      const currentRowIdx = nextCellPath[replacePathPos];\n\n      // TODO: handle tfoot and thead too:\n      currentTableItem[0].children[0].children.forEach((row, rowIdx) => {\n        newCellPath[replacePathPos] = rowIdx;\n        const isHeaderRow =\n          header === undefined ? row.children[0].type === TH : header;\n\n        Transforms.insertNodes(\n          editor,\n          getEmptyCellNode(editor, { header: isHeaderRow }),\n          {\n            at: newCellPath,\n            select: rowIdx === currentRowIdx,\n          },\n        );\n      });\n    }\n  }\n};\n\nconst deleteCol = (editor) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentCellItem = Editor.above(editor, {\n      match: (n) => n.type === TD || n.type === TH,\n    });\n    const currentRowItem = Editor.above(editor, {\n      match: (n) => n.type === TR,\n    });\n    const currentTableItem = Editor.above(editor, {\n      match: (n) => n.type === TABLE,\n    });\n\n    if (\n      currentCellItem &&\n      currentRowItem &&\n      currentTableItem &&\n      // Cannot delete the last cell\n      currentRowItem[0].children.length > 1\n    ) {\n      const currentCellPath = currentCellItem[1];\n      const pathToDelete = currentCellPath.slice();\n      const replacePathPos = pathToDelete.length - 2;\n\n      // TODO: handle tfoot and thead too:\n      currentTableItem[0].children[0].children.forEach((row, rowIdx) => {\n        pathToDelete[replacePathPos] = rowIdx;\n\n        Transforms.removeNodes(editor, {\n          at: pathToDelete,\n        });\n      });\n    }\n  }\n};\n\nexport default function install(config) {\n  const { slate } = config.settings;\n\n  slate.extensions = [...(slate.extensions || []), withTable];\n  slate.elements = {\n    ...slate.elements,\n    ...tableElements,\n  };\n  slate.elementToolbarButtons[TABLE] = [\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.deleteTable)}\n          icon={clearSVG}\n          aria-label={intl.formatMessage(messages.deleteTable)}\n          onMouseDown={() => {\n            Transforms.removeNodes(editor, {\n              at: editor.selection || editor.getSavedSelection(),\n              match: (n) => n.type === TABLE,\n            });\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.insertRowBefore)}\n          icon={rowBeforeSVG}\n          aria-label={intl.formatMessage(messages.insertRowBefore)}\n          onMouseDown={() => {\n            addRowBefore(editor);\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.insertRowAfter)}\n          icon={rowAfterSVG}\n          aria-label={intl.formatMessage(messages.insertRowAfter)}\n          onMouseDown={() => {\n            addRowAfter(editor, { header: false });\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.deleteRow)}\n          icon={rowDeleteSVG}\n          aria-label={intl.formatMessage(messages.deleteRow)}\n          onMouseDown={() => {\n            deleteRow(editor);\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.insertColBefore)}\n          icon={colBeforeSVG}\n          aria-label={intl.formatMessage(messages.insertColBefore)}\n          onMouseDown={() => {\n            addColBefore(editor);\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.insertColAfter)}\n          icon={colAfterSVG}\n          aria-label={intl.formatMessage(messages.insertColAfter)}\n          onMouseDown={() => {\n            addColAfter(editor);\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.deleteCol)}\n          icon={colDeleteSVG}\n          aria-label={intl.formatMessage(messages.deleteCol)}\n          onMouseDown={() => {\n            deleteCol(editor);\n          }}\n        />\n      );\n    },\n  ];\n\n  return config;\n}\n\nexport const installTableButton = (config) => {\n  const { slate } = config.settings;\n  slate.buttons.table = (props) => <TableButton {...props} title=\"Table\" />;\n  slate.toolbarButtons = [...(slate.toolbarButtons || []), 'table'];\n  slate.expandedToolbarButtons = [\n    ...(slate.expandedToolbarButtons || []),\n    'table',\n  ];\n  return config;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Delete table","defaultMessage":"Delete table"},{"id":"Insert row before","defaultMessage":"Insert row before"},{"id":"Insert row after","defaultMessage":"Insert row after"},{"id":"Delete row","defaultMessage":"Delete row"},{"id":"Insert col before","defaultMessage":"Insert col before"},{"id":"Insert col after","defaultMessage":"Insert col after"},{"id":"Delete col","defaultMessage":"Delete col"}]}},"sourceType":"module"}