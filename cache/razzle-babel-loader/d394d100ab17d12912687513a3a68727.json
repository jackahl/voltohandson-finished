{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Search/Search.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Search component.\n * @module components/theme/Search/Search\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { UniversalLink } from '@plone/volto/components';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { FormattedMessage } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { Container, Pagination, Button, Header } from 'semantic-ui-react';\nimport qs from 'query-string';\nimport classNames from 'classnames';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { Helmet } from '@plone/volto/helpers';\nimport { searchContent } from '@plone/volto/actions';\nimport { SearchTags, Toolbar, Icon } from '@plone/volto/components';\nimport paginationLeftSVG from '@plone/volto/icons/left-key.svg';\nimport paginationRightSVG from '@plone/volto/icons/right-key.svg';\nconst messages = defineMessages({\n  Search: {\n    \"id\": \"Search\",\n    \"defaultMessage\": \"Search\"\n  }\n});\n/**\n * Search class.\n * @class SearchComponent\n * @extends Component\n */\n\nclass Search extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"UNSAFE_componentWillReceiveProps\", nextProps => {\n      if (this.props.location.search !== nextProps.location.search) {\n        this.doSearch();\n      }\n    });\n\n    _defineProperty(this, \"doSearch\", () => {\n      const options = qs.parse(this.props.history.location.search);\n      this.setState({\n        currentPage: 1\n      });\n      options['use_site_search_settings'] = 1;\n      this.props.searchContent('', options);\n    });\n\n    _defineProperty(this, \"handleQueryPaginationChange\", (e, _ref) => {\n      let {\n        activePage\n      } = _ref;\n      const {\n        settings\n      } = config;\n      window.scrollTo(0, 0);\n      let options = qs.parse(this.props.history.location.search);\n      options['use_site_search_settings'] = 1;\n      this.setState({\n        currentPage: activePage\n      }, () => {\n        this.props.searchContent('', _objectSpread(_objectSpread({}, options), {}, {\n          b_start: (this.state.currentPage - 1) * settings.defaultPageSize\n        }));\n      });\n    });\n\n    _defineProperty(this, \"onSortChange\", (event, sort_order) => {\n      let options = qs.parse(this.props.history.location.search);\n      options.sort_on = event.target.name;\n      options.sort_order = sort_order || 'ascending';\n\n      if (event.target.name === 'relevance') {\n        delete options.sort_on;\n        delete options.sort_order;\n      }\n\n      let searchParams = qs.stringify(options);\n      this.setState({\n        currentPage: 1,\n        active: event.target.name\n      }, () => {\n        // eslint-disable-next-line no-restricted-globals\n        this.props.history.replace({\n          search: searchParams\n        });\n      });\n    });\n\n    this.state = {\n      currentPage: 1,\n      isClient: false,\n      active: 'relevance'\n    };\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.doSearch();\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$search, _this$props$search2;\n\n    const {\n      settings\n    } = config;\n    return __jsx(Container, {\n      id: \"page-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.Search),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, __jsx(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      className: \"documentFirstHeading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, this.props.searchableText ? __jsx(FormattedMessage, {\n      id: \"Search results for {term}\",\n      defaultMessage: \"Search results for {term}\",\n      values: {\n        term: __jsx(\"q\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }\n        }, this.props.searchableText)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"Search results\",\n      defaultMessage: \"Search results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    })), __jsx(SearchTags, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }), ((_this$props$search = this.props.search) === null || _this$props$search === void 0 ? void 0 : _this$props$search.items_total) > 0 ? __jsx(\"div\", {\n      className: \"items_total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, this.props.search.items_total, ' ', __jsx(FormattedMessage, {\n      id: \"results found\",\n      defaultMessage: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }), __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, __jsx(Header.Content, {\n      className: \"header-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"sort-by\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Sort By:\",\n      defaultMessage: \"Sort by:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    })), __jsx(Button, {\n      onClick: event => {\n        this.onSortChange(event);\n      },\n      name: \"relevance\",\n      size: \"tiny\",\n      className: classNames('button-sort', {\n        'button-active': this.state.active === 'relevance'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Relevance\",\n      defaultMessage: \"Relevance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    })), __jsx(Button, {\n      onClick: event => {\n        this.onSortChange(event);\n      },\n      name: \"sortable_title\",\n      size: \"tiny\",\n      className: classNames('button-sort', {\n        'button-active': this.state.active === 'sortable_title'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Alphabetically\",\n      defaultMessage: \"Alphabetically\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    })), __jsx(Button, {\n      onClick: event => {\n        this.onSortChange(event, 'reverse');\n      },\n      name: \"effective\",\n      size: \"tiny\",\n      className: classNames('button-sort', {\n        'button-active': this.state.active === 'effective'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Date (newest first)\",\n      defaultMessage: \"Date (newest first)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }))))) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"No results found\",\n      defaultMessage: \"No results found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    }))), __jsx(\"section\", {\n      id: \"content-core\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, this.props.items.map(item => __jsx(\"article\", {\n      className: \"tileItem\",\n      key: item['@id'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      className: \"tileHeadline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, __jsx(UniversalLink, {\n      item: item,\n      className: \"summary url\",\n      title: item['@type'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, item.title)), item.description && __jsx(\"div\", {\n      className: \"tileBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 23\n      }\n    }, item.description)), __jsx(\"div\", {\n      className: \"tileFooter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }\n    }, __jsx(UniversalLink, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Read More\\u2026\",\n      defaultMessage: \"Read More\\u2026\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 23\n      }\n    }))), __jsx(\"div\", {\n      className: \"visualClear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    }))), ((_this$props$search2 = this.props.search) === null || _this$props$search2 === void 0 ? void 0 : _this$props$search2.batching) && __jsx(\"div\", {\n      className: \"search-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, __jsx(Pagination, {\n      activePage: this.state.currentPage,\n      totalPages: Math.ceil(this.props.search.items_total / settings.defaultPageSize),\n      onPageChange: this.handleQueryPaginationChange,\n      firstItem: null,\n      lastItem: null,\n      prevItem: {\n        content: __jsx(Icon, {\n          name: paginationLeftSVG,\n          size: \"18px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 32\n          }\n        }),\n        icon: true,\n        'aria-disabled': !this.props.search.batching.prev,\n        className: !this.props.search.batching.prev ? 'disabled' : null\n      },\n      nextItem: {\n        content: __jsx(Icon, {\n          name: paginationRightSVG,\n          size: \"18px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 32\n          }\n        }),\n        icon: true,\n        'aria-disabled': !this.props.search.batching.next,\n        className: !this.props.search.batching.next ? 'disabled' : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 19\n      }\n    }))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 22\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\n_defineProperty(Search, \"propTypes\", {\n  searchContent: PropTypes.func.isRequired,\n  searchableText: PropTypes.string,\n  subject: PropTypes.string,\n  path: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    '@type': PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string\n  })),\n  pathname: PropTypes.string.isRequired\n});\n\n_defineProperty(Search, \"defaultProps\", {\n  items: [],\n  searchableText: null,\n  subject: null,\n  path: null\n});\n\nexport const __test__ = compose(injectIntl, connect((state, props) => ({\n  items: state.search.items,\n  searchableText: qs.parse(props.history.location.search).SearchableText,\n  pathname: props.history.location.pathname\n}), {\n  searchContent\n}))(Search);\nexport default compose(injectIntl, connect((state, props) => ({\n  items: state.search.items,\n  searchableText: qs.parse(props.history.location.search).SearchableText,\n  pathname: props.location.pathname\n}), {\n  searchContent\n}), asyncConnect([{\n  key: 'search',\n  promise: _ref2 => {\n    let {\n      location,\n      store: {\n        dispatch\n      }\n    } = _ref2;\n    return dispatch(searchContent('', _objectSpread(_objectSpread({}, qs.parse(location.search)), {}, {\n      use_site_search_settings: 1\n    })));\n  }\n}]))(Search);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","UniversalLink","asyncConnect","FormattedMessage","Portal","Container","Pagination","Button","Header","qs","classNames","defineMessages","injectIntl","config","Helmet","searchContent","SearchTags","Toolbar","Icon","paginationLeftSVG","paginationRightSVG","messages","Search","constructor","props","nextProps","location","search","doSearch","options","parse","history","setState","currentPage","e","activePage","settings","window","scrollTo","b_start","state","defaultPageSize","event","sort_order","sort_on","target","name","searchParams","stringify","active","replace","isClient","componentDidMount","render","intl","formatMessage","searchableText","term","items_total","onSortChange","items","map","item","title","description","batching","Math","ceil","handleQueryPaginationChange","content","icon","prev","className","next","document","getElementById","pathname","func","isRequired","string","subject","path","arrayOf","shape","__test__","SearchableText","key","promise","store","dispatch","use_site_search_settings"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/Search/Search.jsx"],"sourcesContent":["/**\n * Search component.\n * @module components/theme/Search/Search\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { UniversalLink } from '@plone/volto/components';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { FormattedMessage } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { Container, Pagination, Button, Header } from 'semantic-ui-react';\nimport qs from 'query-string';\nimport classNames from 'classnames';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { Helmet } from '@plone/volto/helpers';\nimport { searchContent } from '@plone/volto/actions';\nimport { SearchTags, Toolbar, Icon } from '@plone/volto/components';\n\nimport paginationLeftSVG from '@plone/volto/icons/left-key.svg';\nimport paginationRightSVG from '@plone/volto/icons/right-key.svg';\n\nconst messages = defineMessages({\n  Search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\n/**\n * Search class.\n * @class SearchComponent\n * @extends Component\n */\nclass Search extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    searchContent: PropTypes.func.isRequired,\n    searchableText: PropTypes.string,\n    subject: PropTypes.string,\n    path: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        title: PropTypes.string,\n        description: PropTypes.string,\n      }),\n    ),\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    items: [],\n    searchableText: null,\n    subject: null,\n    path: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { currentPage: 1, isClient: false, active: 'relevance' };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.doSearch();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps = (nextProps) => {\n    if (this.props.location.search !== nextProps.location.search) {\n      this.doSearch();\n    }\n  };\n\n  /**\n   * Search based on the given searchableText, subject and path.\n   * @method doSearch\n   * @param {string} searchableText The searchable text string\n   * @param {string} subject The subject (tag)\n   * @param {string} path The path to restrict the search to\n   * @returns {undefined}\n   */\n\n  doSearch = () => {\n    const options = qs.parse(this.props.history.location.search);\n    this.setState({ currentPage: 1 });\n    options['use_site_search_settings'] = 1;\n    this.props.searchContent('', options);\n  };\n\n  handleQueryPaginationChange = (e, { activePage }) => {\n    const { settings } = config;\n    window.scrollTo(0, 0);\n    let options = qs.parse(this.props.history.location.search);\n    options['use_site_search_settings'] = 1;\n\n    this.setState({ currentPage: activePage }, () => {\n      this.props.searchContent('', {\n        ...options,\n        b_start: (this.state.currentPage - 1) * settings.defaultPageSize,\n      });\n    });\n  };\n\n  onSortChange = (event, sort_order) => {\n    let options = qs.parse(this.props.history.location.search);\n    options.sort_on = event.target.name;\n    options.sort_order = sort_order || 'ascending';\n    if (event.target.name === 'relevance') {\n      delete options.sort_on;\n      delete options.sort_order;\n    }\n    let searchParams = qs.stringify(options);\n    this.setState({ currentPage: 1, active: event.target.name }, () => {\n      // eslint-disable-next-line no-restricted-globals\n      this.props.history.replace({\n        search: searchParams,\n      });\n    });\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { settings } = config;\n    return (\n      <Container id=\"page-search\">\n        <Helmet title={this.props.intl.formatMessage(messages.Search)} />\n        <div className=\"container\">\n          <article id=\"content\">\n            <header>\n              <h1 className=\"documentFirstHeading\">\n                {this.props.searchableText ? (\n                  <FormattedMessage\n                    id=\"Search results for {term}\"\n                    defaultMessage=\"Search results for {term}\"\n                    values={{\n                      term: <q>{this.props.searchableText}</q>,\n                    }}\n                  />\n                ) : (\n                  <FormattedMessage\n                    id=\"Search results\"\n                    defaultMessage=\"Search results\"\n                  />\n                )}\n              </h1>\n\n              <SearchTags />\n\n              {this.props.search?.items_total > 0 ? (\n                <div className=\"items_total\">\n                  {this.props.search.items_total}{' '}\n                  <FormattedMessage\n                    id=\"results found\"\n                    defaultMessage=\"results\"\n                  />\n                  <Header>\n                    <Header.Content className=\"header-content\">\n                      <div className=\"sort-by\">\n                        <FormattedMessage\n                          id=\"Sort By:\"\n                          defaultMessage=\"Sort by:\"\n                        />\n                      </div>\n                      <Button\n                        onClick={(event) => {\n                          this.onSortChange(event);\n                        }}\n                        name=\"relevance\"\n                        size=\"tiny\"\n                        className={classNames('button-sort', {\n                          'button-active': this.state.active === 'relevance',\n                        })}\n                      >\n                        <FormattedMessage\n                          id=\"Relevance\"\n                          defaultMessage=\"Relevance\"\n                        />\n                      </Button>\n                      <Button\n                        onClick={(event) => {\n                          this.onSortChange(event);\n                        }}\n                        name=\"sortable_title\"\n                        size=\"tiny\"\n                        className={classNames('button-sort', {\n                          'button-active':\n                            this.state.active === 'sortable_title',\n                        })}\n                      >\n                        <FormattedMessage\n                          id=\"Alphabetically\"\n                          defaultMessage=\"Alphabetically\"\n                        />\n                      </Button>\n                      <Button\n                        onClick={(event) => {\n                          this.onSortChange(event, 'reverse');\n                        }}\n                        name=\"effective\"\n                        size=\"tiny\"\n                        className={classNames('button-sort', {\n                          'button-active': this.state.active === 'effective',\n                        })}\n                      >\n                        <FormattedMessage\n                          id=\"Date (newest first)\"\n                          defaultMessage=\"Date (newest first)\"\n                        />\n                      </Button>\n                    </Header.Content>\n                  </Header>\n                </div>\n              ) : (\n                <div>\n                  <FormattedMessage\n                    id=\"No results found\"\n                    defaultMessage=\"No results found\"\n                  />\n                </div>\n              )}\n            </header>\n            <section id=\"content-core\">\n              {this.props.items.map((item) => (\n                <article className=\"tileItem\" key={item['@id']}>\n                  <h2 className=\"tileHeadline\">\n                    <UniversalLink\n                      item={item}\n                      className=\"summary url\"\n                      title={item['@type']}\n                    >\n                      {item.title}\n                    </UniversalLink>\n                  </h2>\n                  {item.description && (\n                    <div className=\"tileBody\">\n                      <span className=\"description\">{item.description}</span>\n                    </div>\n                  )}\n                  <div className=\"tileFooter\">\n                    <UniversalLink item={item}>\n                      <FormattedMessage\n                        id=\"Read More…\"\n                        defaultMessage=\"Read More…\"\n                      />\n                    </UniversalLink>\n                  </div>\n                  <div className=\"visualClear\" />\n                </article>\n              ))}\n\n              {this.props.search?.batching && (\n                <div className=\"search-footer\">\n                  <Pagination\n                    activePage={this.state.currentPage}\n                    totalPages={Math.ceil(\n                      this.props.search.items_total / settings.defaultPageSize,\n                    )}\n                    onPageChange={this.handleQueryPaginationChange}\n                    firstItem={null}\n                    lastItem={null}\n                    prevItem={{\n                      content: <Icon name={paginationLeftSVG} size=\"18px\" />,\n                      icon: true,\n                      'aria-disabled': !this.props.search.batching.prev,\n                      className: !this.props.search.batching.prev\n                        ? 'disabled'\n                        : null,\n                    }}\n                    nextItem={{\n                      content: <Icon name={paginationRightSVG} size=\"18px\" />,\n                      icon: true,\n                      'aria-disabled': !this.props.search.batching.next,\n                      className: !this.props.search.batching.next\n                        ? 'disabled'\n                        : null,\n                    }}\n                  />\n                </div>\n              )}\n            </section>\n          </article>\n        </div>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={<span />}\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport const __test__ = compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      items: state.search.items,\n      searchableText: qs.parse(props.history.location.search).SearchableText,\n      pathname: props.history.location.pathname,\n    }),\n    { searchContent },\n  ),\n)(Search);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      items: state.search.items,\n      searchableText: qs.parse(props.history.location.search).SearchableText,\n      pathname: props.location.pathname,\n    }),\n    { searchContent },\n  ),\n  asyncConnect([\n    {\n      key: 'search',\n      promise: ({ location, store: { dispatch } }) =>\n        dispatch(\n          searchContent('', {\n            ...qs.parse(location.search),\n            use_site_search_settings: 1,\n          }),\n        ),\n    },\n  ]),\n)(Search);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Search","defaultMessage":"Search"},{"id":"Search results for {term}","defaultMessage":"Search results for {term}"},{"id":"Search results","defaultMessage":"Search results"},{"id":"results found","defaultMessage":"results"},{"id":"Sort By:","defaultMessage":"Sort by:"},{"id":"Relevance","defaultMessage":"Relevance"},{"id":"Alphabetically","defaultMessage":"Alphabetically"},{"id":"Date (newest first)","defaultMessage":"Date (newest first)"},{"id":"No results found","defaultMessage":"No results found"},{"id":"Read More…","defaultMessage":"Read More…"}]}},"sourceType":"module"}