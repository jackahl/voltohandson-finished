{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/LeadImageSidebar.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\nimport { Accordion, Grid, Segment } from 'semantic-ui-react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { CheckboxWidget, Icon, TextWidget } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nconst messages = defineMessages({\n  Image: {\n    \"id\": \"Image\",\n    \"defaultMessage\": \"Image\"\n  },\n  Origin: {\n    \"id\": \"Origin\",\n    \"defaultMessage\": \"Origin\"\n  },\n  AltText: {\n    \"id\": \"Alt text\",\n    \"defaultMessage\": \"Alt text\"\n  },\n  Align: {\n    \"id\": \"Alignment\",\n    \"defaultMessage\": \"Alignment\"\n  },\n  LinkTo: {\n    \"id\": \"Link to\",\n    \"defaultMessage\": \"Link to\"\n  },\n  openLinkInNewTab: {\n    \"id\": \"Open in a new tab\",\n    \"defaultMessage\": \"Open in a new tab\"\n  },\n  NoImageSelected: {\n    \"id\": \"No image set in image content field\",\n    \"defaultMessage\": \"No image set in image content field\"\n  },\n  externalURL: {\n    \"id\": \"External URL\",\n    \"defaultMessage\": \"External URL\"\n  }\n});\n\nconst LeadImageSidebar = _ref => {\n  _s();\n\n  let {\n    properties,\n    data,\n    block,\n    onChangeBlock,\n    openObjectBrowser,\n    required = false,\n    onChangeField,\n    intl\n  } = _ref;\n  const {\n    0: activeAccIndex,\n    1: setActiveAccIndex\n  } = useState(0);\n\n  function handleAccClick(e, titleProps) {\n    const {\n      index\n    } = titleProps;\n    const newIndex = activeAccIndex === index ? -1 : index;\n    setActiveAccIndex(newIndex);\n  }\n\n  return __jsx(Segment.Group, {\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: \"header pulled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Lead Image\",\n    defaultMessage: \"Lead Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))), !properties.image && __jsx(React.Fragment, null, __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"No image set in Lead Image content field\",\n    defaultMessage: \"No image set in Lead Image content field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), __jsx(Icon, {\n    name: imageSVG,\n    size: \"100px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }))), properties.image && __jsx(React.Fragment, null, __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, properties.image.filename, __jsx(\"img\", {\n    src: properties.image.data ? `data:${properties.image['content-type']};base64,${properties.image.data}` : flattenToAppURL(properties.image.scales.mini.download),\n    alt: properties.image_caption || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })), __jsx(Segment, {\n    className: \"form sidebar-image-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, __jsx(TextWidget, {\n    id: \"alt\",\n    title: intl.formatMessage(messages.AltText),\n    required: false,\n    value: properties.image_caption,\n    icon: properties.image_caption ? clearSVG : null,\n    iconAction: () => onChangeField('image_caption', ''),\n    onChange: (name, value) => {\n      onChangeField('image_caption', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Field, {\n    inline: true,\n    required: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, __jsx(Grid.Column, {\n    width: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"field-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Alignment\",\n    defaultMessage: \"Alignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })))), __jsx(Grid.Column, {\n    width: \"8\",\n    className: \"align-tools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, __jsx(AlignBlock, {\n    align: data.align,\n    onChangeBlock: onChangeBlock,\n    data: data,\n    block: block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  })))))), __jsx(Accordion, {\n    fluid: true,\n    styled: true,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, __jsx(Accordion.Title, {\n    active: activeAccIndex === 0,\n    index: 0,\n    onClick: handleAccClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Link Settings\", activeAccIndex === 0 ? __jsx(Icon, {\n    name: upSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })), __jsx(Accordion.Content, {\n    active: activeAccIndex === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(TextWidget, {\n    id: \"link\",\n    title: intl.formatMessage(messages.LinkTo),\n    required: false,\n    value: flattenToAppURL(data.href),\n    icon: data.href ? clearSVG : navTreeSVG,\n    iconAction: data.href ? () => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        href: ''\n      }));\n    } : () => openObjectBrowser({\n      mode: 'link'\n    }),\n    onChange: (name, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        href: flattenToAppURL(value)\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), __jsx(CheckboxWidget, {\n    id: \"openLinkInNewTab\",\n    title: intl.formatMessage(messages.openLinkInNewTab),\n    value: data.openLinkInNewTab ? data.openLinkInNewTab : false,\n    onChange: (name, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        openLinkInNewTab: value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  })))));\n};\n\n_s(LeadImageSidebar, \"Nd/EHIHxJ3hQ2yJkM8yeOL7E6LY=\");\n\n_c = LeadImageSidebar;\nLeadImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired,\n  onChangeField: PropTypes.func.isRequired\n};\nexport default _c2 = injectIntl(LeadImageSidebar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LeadImageSidebar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","PropTypes","Form","Accordion","Grid","Segment","defineMessages","FormattedMessage","injectIntl","CheckboxWidget","Icon","TextWidget","flattenToAppURL","AlignBlock","imageSVG","clearSVG","upSVG","downSVG","navTreeSVG","messages","Image","Origin","AltText","Align","LinkTo","openLinkInNewTab","NoImageSelected","externalURL","LeadImageSidebar","properties","data","block","onChangeBlock","openObjectBrowser","required","onChangeField","intl","activeAccIndex","setActiveAccIndex","handleAccClick","e","titleProps","index","newIndex","image","filename","scales","mini","download","image_caption","formatMessage","name","value","align","href","mode","propTypes","objectOf","any","isRequired","string","func"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/LeadImageSidebar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\nimport { Accordion, Grid, Segment } from 'semantic-ui-react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { CheckboxWidget, Icon, TextWidget } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\n\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\n\nconst messages = defineMessages({\n  Image: {\n    id: 'Image',\n    defaultMessage: 'Image',\n  },\n  Origin: {\n    id: 'Origin',\n    defaultMessage: 'Origin',\n  },\n  AltText: {\n    id: 'Alt text',\n    defaultMessage: 'Alt text',\n  },\n  Align: {\n    id: 'Alignment',\n    defaultMessage: 'Alignment',\n  },\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n  openLinkInNewTab: {\n    id: 'Open in a new tab',\n    defaultMessage: 'Open in a new tab',\n  },\n  NoImageSelected: {\n    id: 'No image set in image content field',\n    defaultMessage: 'No image set in image content field',\n  },\n  externalURL: {\n    id: 'External URL',\n    defaultMessage: 'External URL',\n  },\n});\n\nconst LeadImageSidebar = ({\n  properties,\n  data,\n  block,\n  onChangeBlock,\n  openObjectBrowser,\n  required = false,\n  onChangeField,\n  intl,\n}) => {\n  const [activeAccIndex, setActiveAccIndex] = useState(0);\n\n  function handleAccClick(e, titleProps) {\n    const { index } = titleProps;\n    const newIndex = activeAccIndex === index ? -1 : index;\n\n    setActiveAccIndex(newIndex);\n  }\n\n  return (\n    <Segment.Group raised>\n      <header className=\"header pulled\">\n        <h2>\n          <FormattedMessage id=\"Lead Image\" defaultMessage=\"Lead Image\" />\n        </h2>\n      </header>\n\n      {!properties.image && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            <FormattedMessage\n              id=\"No image set in Lead Image content field\"\n              defaultMessage=\"No image set in Lead Image content field\"\n            />\n            <Icon name={imageSVG} size=\"100px\" color=\"#b8c6c8\" />\n          </Segment>\n        </>\n      )}\n      {properties.image && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            {properties.image.filename}\n            <img\n              src={\n                properties.image.data\n                  ? `data:${properties.image['content-type']};base64,${properties.image.data}`\n                  : flattenToAppURL(properties.image.scales.mini.download)\n              }\n              alt={properties.image_caption || ''}\n            />\n          </Segment>\n          <Segment className=\"form sidebar-image-data\">\n            <TextWidget\n              id=\"alt\"\n              title={intl.formatMessage(messages.AltText)}\n              required={false}\n              value={properties.image_caption}\n              icon={properties.image_caption ? clearSVG : null}\n              iconAction={() => onChangeField('image_caption', '')}\n              onChange={(name, value) => {\n                onChangeField('image_caption', value);\n              }}\n            />\n            <Form.Field inline required={required}>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width=\"4\">\n                    <div className=\"wrapper\">\n                      <label htmlFor=\"field-align\">\n                        <FormattedMessage\n                          id=\"Alignment\"\n                          defaultMessage=\"Alignment\"\n                        />\n                      </label>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column width=\"8\" className=\"align-tools\">\n                    <AlignBlock\n                      align={data.align}\n                      onChangeBlock={onChangeBlock}\n                      data={data}\n                      block={block}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Form.Field>\n          </Segment>\n          <Accordion fluid styled className=\"form\">\n            <Accordion.Title\n              active={activeAccIndex === 0}\n              index={0}\n              onClick={handleAccClick}\n            >\n              Link Settings\n              {activeAccIndex === 0 ? (\n                <Icon name={upSVG} size=\"20px\" />\n              ) : (\n                <Icon name={downSVG} size=\"20px\" />\n              )}\n            </Accordion.Title>\n            <Accordion.Content active={activeAccIndex === 0}>\n              <TextWidget\n                id=\"link\"\n                title={intl.formatMessage(messages.LinkTo)}\n                required={false}\n                value={flattenToAppURL(data.href)}\n                icon={data.href ? clearSVG : navTreeSVG}\n                iconAction={\n                  data.href\n                    ? () => {\n                        onChangeBlock(block, {\n                          ...data,\n                          href: '',\n                        });\n                      }\n                    : () => openObjectBrowser({ mode: 'link' })\n                }\n                onChange={(name, value) => {\n                  onChangeBlock(block, {\n                    ...data,\n                    href: flattenToAppURL(value),\n                  });\n                }}\n              />\n              <CheckboxWidget\n                id=\"openLinkInNewTab\"\n                title={intl.formatMessage(messages.openLinkInNewTab)}\n                value={data.openLinkInNewTab ? data.openLinkInNewTab : false}\n                onChange={(name, value) => {\n                  onChangeBlock(block, {\n                    ...data,\n                    openLinkInNewTab: value,\n                  });\n                }}\n              />\n            </Accordion.Content>\n          </Accordion>\n        </>\n      )}\n    </Segment.Group>\n  );\n};\n\nLeadImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired,\n  onChangeField: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(LeadImageSidebar);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Image","defaultMessage":"Image"},{"id":"Origin","defaultMessage":"Origin"},{"id":"Alt text","defaultMessage":"Alt text"},{"id":"Alignment","defaultMessage":"Alignment"},{"id":"Link to","defaultMessage":"Link to"},{"id":"Open in a new tab","defaultMessage":"Open in a new tab"},{"id":"No image set in image content field","defaultMessage":"No image set in image content field"},{"id":"External URL","defaultMessage":"External URL"},{"id":"Lead Image","defaultMessage":"Lead Image"},{"id":"No image set in Lead Image content field","defaultMessage":"No image set in Lead Image content field"}]}},"sourceType":"module"}