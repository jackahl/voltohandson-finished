{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SLATE_PLUGINS } from '@plone/volto-slate/constants';\nexport function setPluginOptions(pluginId, values = {}) {\n  return _objectSpread({\n    type: SLATE_PLUGINS,\n    pluginId\n  }, values);\n}","map":{"version":3,"names":["SLATE_PLUGINS","setPluginOptions","pluginId","values","type"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/actions/plugins.js"],"sourcesContent":["import { SLATE_PLUGINS } from '@plone/volto-slate/constants';\n\nexport function setPluginOptions(pluginId, values = {}) {\n  return {\n    type: SLATE_PLUGINS,\n    pluginId,\n    ...values,\n  };\n}\n"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,8BAA9B;AAEA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,MAAM,GAAG,EAA7C,EAAiD;EACtD;IACEC,IAAI,EAAEJ,aADR;IAEEE;EAFF,GAGKC,MAHL;AAKD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}