{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/hocs/withQueryString.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getQuerystring } from '@plone/volto/actions';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n/**\n * A HOC that injects querystring metadata information from the backend.\n *\n */\n\n\nexport default (WrappedComponent => {\n  var _s = $RefreshSig$();\n\n  function WithQueryString(props) {\n    _s();\n\n    const dispatch = useDispatch();\n    const qs = useSelector(state => state.querystring);\n    const indexes = (qs === null || qs === void 0 ? void 0 : qs.indexes) || {};\n    React.useEffect(() => {\n      if (Object.keys(indexes).length === 0) {\n        dispatch(getQuerystring());\n      }\n    }, [dispatch, indexes]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      querystring: qs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  _s(WithQueryString, \"JayyGYN/J/G4JjgT4ScUOhVayGw=\", false, function () {\n    return [useDispatch, useSelector];\n  });\n\n  WithQueryString.displayName = `WithQueryString(${getDisplayName(WrappedComponent)})`;\n  return WithQueryString;\n});","map":{"version":3,"names":["React","useDispatch","useSelector","getQuerystring","getDisplayName","WrappedComponent","displayName","name","WithQueryString","props","dispatch","qs","state","querystring","indexes","useEffect","Object","keys","length"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/hocs/withQueryString.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getQuerystring } from '@plone/volto/actions';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\n/**\n * A HOC that injects querystring metadata information from the backend.\n *\n */\nexport default (WrappedComponent) => {\n  function WithQueryString(props) {\n    const dispatch = useDispatch();\n\n    const qs = useSelector((state) => state.querystring);\n    const indexes = qs?.indexes || {};\n\n    React.useEffect(() => {\n      if (Object.keys(indexes).length === 0) {\n        dispatch(getQuerystring());\n      }\n    }, [dispatch, indexes]);\n\n    return <WrappedComponent {...props} querystring={qs} />;\n  }\n  WithQueryString.displayName = `WithQueryString(${getDisplayName(\n    WrappedComponent,\n  )})`;\n  return WithQueryString;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;EACxC,OAAOA,gBAAgB,CAACC,WAAjB,IAAgCD,gBAAgB,CAACE,IAAjD,IAAyD,WAAhE;AACD;AAED;AACA;AACA;AACA;;;AACA,gBAAgBF,gBAAD,IAAsB;EAAA;;EACnC,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;IAAA;;IAC9B,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;IAEA,MAAMU,EAAE,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAAtB;IACA,MAAMC,OAAO,GAAG,CAAAH,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEG,OAAJ,KAAe,EAA/B;IAEAd,KAAK,CAACe,SAAN,CAAgB,MAAM;MACpB,IAAIC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,MAArB,KAAgC,CAApC,EAAuC;QACrCR,QAAQ,CAACP,cAAc,EAAf,CAAR;MACD;IACF,CAJD,EAIG,CAACO,QAAD,EAAWI,OAAX,CAJH;IAMA,OAAO,MAAC,gBAAD,eAAsBL,KAAtB;MAA6B,WAAW,EAAEE,EAA1C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAP;EACD;;EAdkC,GAC1BH,eAD0B;IAAA,QAEhBP,WAFgB,EAItBC,WAJsB;EAAA;;EAenCM,eAAe,CAACF,WAAhB,GAA+B,mBAAkBF,cAAc,CAC7DC,gBAD6D,CAE7D,GAFF;EAGA,OAAOG,eAAP;AACD,CAnBD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}