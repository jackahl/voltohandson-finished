{"ast":null,"code":"// action types\nexport const SAVE_SLATE_BLOCK_SELECTION = 'SAVE_SLATE_BLOCK_SELECTION';\nexport const SLATE_PLUGINS = 'SLATE_PLUGINS';\nexport const UPLOAD_CONTENT = 'UPLOAD_CONTENT'; // element 'types'. Useful to identify element types across codebase\n\nexport const IMAGE = 'img'; // export const FOOTNOTE = 'footnote';\n\nexport const LINK = 'a';\nexport const SIMPLELINK = 'link';\nexport const TABLE = 'table';\nexport const THEAD = 'thead';\nexport const TBODY = 'tbody';\nexport const TFOOT = 'tbody';\nexport const TR = 'tr';\nexport const TH = 'th';\nexport const TD = 'td';\nexport const P = 'p';\nexport const LI = 'li';\nexport const UL = 'ul';\nexport const OL = 'ol'; // dom parsing node information\n\nexport const TEXT_NODE = 3;\nexport const ELEMENT_NODE = 1;\nexport const COMMENT = 8;\nexport const INLINE_ELEMENTS = ['A', 'ABBR', 'ACRONYM', 'AUDIO', 'B', 'BDI', 'BDO', 'BIG', 'BR', 'BUTTON', 'CANVAS', 'CITE', 'CODE', 'DATA', 'DATALIST', 'DEL', 'DFN', 'EM', 'EMBED', 'I', 'IFRAME', 'IMG', 'INPUT', 'INS', 'KBD', 'LABEL', 'MAP', 'MARK', 'METER', 'NOSCRIPT', 'OBJECT', 'OUTPUT', 'PICTURE', 'PROGRESS', 'Q', 'RUBY', 'S', 'SAMP', 'SCRIPT', 'SELECT', 'SLOT', 'SMALL', 'SPAN', 'STRONG', 'SUB', 'SUP', 'SVG', 'TEMPLATE', 'TEXTAREA', 'TIME', 'U', 'TT', 'VAR', 'VIDEO', 'WBR'];\nexport const BLOCK_ELEMENTS = ['ADDRESS', 'ARTICLE', 'ASIDE', 'BLOCKQUOTE', 'DETAILS', 'DIALOG', 'DD', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FOOTER', 'FORM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER', 'HGROUP', 'HR', 'LI', 'MAIN', 'NAV', 'OL', 'P', 'PRE', 'SECTION', 'TABLE', 'UL'];","map":{"version":3,"names":["SAVE_SLATE_BLOCK_SELECTION","SLATE_PLUGINS","UPLOAD_CONTENT","IMAGE","LINK","SIMPLELINK","TABLE","THEAD","TBODY","TFOOT","TR","TH","TD","P","LI","UL","OL","TEXT_NODE","ELEMENT_NODE","COMMENT","INLINE_ELEMENTS","BLOCK_ELEMENTS"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/constants.js"],"sourcesContent":["// action types\nexport const SAVE_SLATE_BLOCK_SELECTION = 'SAVE_SLATE_BLOCK_SELECTION';\nexport const SLATE_PLUGINS = 'SLATE_PLUGINS';\nexport const UPLOAD_CONTENT = 'UPLOAD_CONTENT';\n\n// element 'types'. Useful to identify element types across codebase\nexport const IMAGE = 'img';\n// export const FOOTNOTE = 'footnote';\nexport const LINK = 'a';\nexport const SIMPLELINK = 'link';\n\nexport const TABLE = 'table';\nexport const THEAD = 'thead';\nexport const TBODY = 'tbody';\nexport const TFOOT = 'tbody';\nexport const TR = 'tr';\nexport const TH = 'th';\nexport const TD = 'td';\n\nexport const P = 'p';\n\nexport const LI = 'li';\nexport const UL = 'ul';\nexport const OL = 'ol';\n\n// dom parsing node information\nexport const TEXT_NODE = 3;\nexport const ELEMENT_NODE = 1;\nexport const COMMENT = 8;\n\nexport const INLINE_ELEMENTS = [\n  'A',\n  'ABBR',\n  'ACRONYM',\n  'AUDIO',\n  'B',\n  'BDI',\n  'BDO',\n  'BIG',\n  'BR',\n  'BUTTON',\n  'CANVAS',\n  'CITE',\n  'CODE',\n  'DATA',\n  'DATALIST',\n  'DEL',\n  'DFN',\n  'EM',\n  'EMBED',\n  'I',\n  'IFRAME',\n  'IMG',\n  'INPUT',\n  'INS',\n  'KBD',\n  'LABEL',\n  'MAP',\n  'MARK',\n  'METER',\n  'NOSCRIPT',\n  'OBJECT',\n  'OUTPUT',\n  'PICTURE',\n  'PROGRESS',\n  'Q',\n  'RUBY',\n  'S',\n  'SAMP',\n  'SCRIPT',\n  'SELECT',\n  'SLOT',\n  'SMALL',\n  'SPAN',\n  'STRONG',\n  'SUB',\n  'SUP',\n  'SVG',\n  'TEMPLATE',\n  'TEXTAREA',\n  'TIME',\n  'U',\n  'TT',\n  'VAR',\n  'VIDEO',\n  'WBR',\n];\n\nexport const BLOCK_ELEMENTS = [\n  'ADDRESS',\n  'ARTICLE',\n  'ASIDE',\n  'BLOCKQUOTE',\n  'DETAILS',\n  'DIALOG',\n  'DD',\n  'DIV',\n  'DL',\n  'DT',\n  'FIELDSET',\n  'FIGCAPTION',\n  'FIGURE',\n  'FOOTER',\n  'FORM',\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n  'HEADER',\n  'HGROUP',\n  'HR',\n  'LI',\n  'MAIN',\n  'NAV',\n  'OL',\n  'P',\n  'PRE',\n  'SECTION',\n  'TABLE',\n  'UL',\n];\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAEP;;AACA,OAAO,MAAMC,KAAK,GAAG,KAAd,C,CACP;;AACA,OAAO,MAAMC,IAAI,GAAG,GAAb;AACP,OAAO,MAAMC,UAAU,GAAG,MAAnB;AAEP,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,EAAE,GAAG,IAAX;AACP,OAAO,MAAMC,EAAE,GAAG,IAAX;AACP,OAAO,MAAMC,EAAE,GAAG,IAAX;AAEP,OAAO,MAAMC,CAAC,GAAG,GAAV;AAEP,OAAO,MAAMC,EAAE,GAAG,IAAX;AACP,OAAO,MAAMC,EAAE,GAAG,IAAX;AACP,OAAO,MAAMC,EAAE,GAAG,IAAX,C,CAEP;;AACA,OAAO,MAAMC,SAAS,GAAG,CAAlB;AACP,OAAO,MAAMC,YAAY,GAAG,CAArB;AACP,OAAO,MAAMC,OAAO,GAAG,CAAhB;AAEP,OAAO,MAAMC,eAAe,GAAG,CAC7B,GAD6B,EAE7B,MAF6B,EAG7B,SAH6B,EAI7B,OAJ6B,EAK7B,GAL6B,EAM7B,KAN6B,EAO7B,KAP6B,EAQ7B,KAR6B,EAS7B,IAT6B,EAU7B,QAV6B,EAW7B,QAX6B,EAY7B,MAZ6B,EAa7B,MAb6B,EAc7B,MAd6B,EAe7B,UAf6B,EAgB7B,KAhB6B,EAiB7B,KAjB6B,EAkB7B,IAlB6B,EAmB7B,OAnB6B,EAoB7B,GApB6B,EAqB7B,QArB6B,EAsB7B,KAtB6B,EAuB7B,OAvB6B,EAwB7B,KAxB6B,EAyB7B,KAzB6B,EA0B7B,OA1B6B,EA2B7B,KA3B6B,EA4B7B,MA5B6B,EA6B7B,OA7B6B,EA8B7B,UA9B6B,EA+B7B,QA/B6B,EAgC7B,QAhC6B,EAiC7B,SAjC6B,EAkC7B,UAlC6B,EAmC7B,GAnC6B,EAoC7B,MApC6B,EAqC7B,GArC6B,EAsC7B,MAtC6B,EAuC7B,QAvC6B,EAwC7B,QAxC6B,EAyC7B,MAzC6B,EA0C7B,OA1C6B,EA2C7B,MA3C6B,EA4C7B,QA5C6B,EA6C7B,KA7C6B,EA8C7B,KA9C6B,EA+C7B,KA/C6B,EAgD7B,UAhD6B,EAiD7B,UAjD6B,EAkD7B,MAlD6B,EAmD7B,GAnD6B,EAoD7B,IApD6B,EAqD7B,KArD6B,EAsD7B,OAtD6B,EAuD7B,KAvD6B,CAAxB;AA0DP,OAAO,MAAMC,cAAc,GAAG,CAC5B,SAD4B,EAE5B,SAF4B,EAG5B,OAH4B,EAI5B,YAJ4B,EAK5B,SAL4B,EAM5B,QAN4B,EAO5B,IAP4B,EAQ5B,KAR4B,EAS5B,IAT4B,EAU5B,IAV4B,EAW5B,UAX4B,EAY5B,YAZ4B,EAa5B,QAb4B,EAc5B,QAd4B,EAe5B,MAf4B,EAgB5B,IAhB4B,EAiB5B,IAjB4B,EAkB5B,IAlB4B,EAmB5B,IAnB4B,EAoB5B,IApB4B,EAqB5B,IArB4B,EAsB5B,QAtB4B,EAuB5B,QAvB4B,EAwB5B,IAxB4B,EAyB5B,IAzB4B,EA0B5B,MA1B4B,EA2B5B,KA3B4B,EA4B5B,IA5B4B,EA6B5B,GA7B4B,EA8B5B,KA9B4B,EA+B5B,SA/B4B,EAgC5B,OAhC4B,EAiC5B,IAjC4B,CAAvB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}