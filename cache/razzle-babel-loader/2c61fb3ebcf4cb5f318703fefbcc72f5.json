{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _map from \"lodash/map\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _groupBy from \"lodash/groupBy\";\nimport _toPairs from \"lodash/toPairs\";\nimport _remove from \"lodash/remove\";\nimport _filter from \"lodash/filter\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/QueryWidget.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * QuerystringWidget component.\n * @module components/manage/Widgets/QuerystringWidget\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Input, Label } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getQuerystring } from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport cx from 'classnames';\nimport { Option, DropdownIndicator, selectTheme, customSelectStyles } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  Criteria: {\n    \"id\": \"Criteria\",\n    \"defaultMessage\": \"Criteria\"\n  },\n  AddCriteria: {\n    \"id\": \"Add criteria\",\n    \"defaultMessage\": \"Add criteria\"\n  },\n  select: {\n    \"id\": \"querystring-widget-select\",\n    \"defaultMessage\": \"Select\\u2026\"\n  }\n});\n/**\n * Widget for a querystring value, to define a catalog search criteria.\n */\n\nexport class QuerystringWidgetComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false\n    };\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.getWidget = this.getWidget.bind(this);\n  }\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n\n    this.props.getQuerystring();\n  }\n  /**\n   * Get correct widget\n   * @method getWidget\n   * @param {Object} row Row object.\n   * @param {number} index Row index.\n   * @returns {Object} Widget.\n   */\n\n\n  getWidget(row, index, Select) {\n    const props = {\n      fluid: true,\n      value: row.v,\n      onChange: data => this.onChangeValue(index, data.target.value)\n    };\n    const values = this.props.indexes[row.i].values;\n\n    switch (this.props.indexes[row.i].operators[row.o].widget) {\n      case null:\n        return __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 16\n          }\n        });\n\n      case 'DateWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({\n          type: \"date\"\n        }, props, {\n          value: row.v,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }\n        })));\n\n      case 'DateRangeWidget':\n        // 2 date inputs\n        return __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }\n        }, __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }\n        }, __jsx(Input, _extends({\n          type: \"date\"\n        }, props, {\n          value: row.v[0],\n          onChange: data => this.onChangeValue(index, [data.target.value, row.v[1]]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }\n        }))), __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }\n        }, __jsx(Input, _extends({\n          type: \"date\"\n        }, props, {\n          value: row.v[1],\n          onChange: data => this.onChangeValue(index, [row.v[0], data.target.value]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }\n        }))));\n\n      case 'RelativeDateWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({\n          step: 1,\n          type: \"number\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }\n        })));\n\n      case 'MultipleSelectionWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto',\n            maxWidth: '92%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }\n        }, __jsx(Select, _extends({}, props, {\n          className: \"react-select-container\",\n          classNamePrefix: \"react-select\",\n          options: values ? _map(_toPairs(values), value => ({\n            label: value[1].title,\n            value: value[0]\n          })) : [],\n          styles: customSelectStyles,\n          placeholder: this.props.intl.formatMessage(messages.select),\n          theme: selectTheme,\n          components: {\n            DropdownIndicator,\n            Option\n          },\n          onChange: data => {\n            this.onChangeValue(index, _map(data, item => item.value));\n          },\n          isMulti: true,\n          value: _map(row.v, value => {\n            var _values$value;\n\n            return {\n              label: (values === null || values === void 0 ? void 0 : (_values$value = values[value]) === null || _values$value === void 0 ? void 0 : _values$value.title) || value,\n              value\n            };\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }\n        })));\n\n      case 'ReferenceWidget':\n      default:\n        // if (row.o === 'plone.app.querystring.operation.string.relativePath') {\n        //   props.onChange = data => this.onChangeValue(index, data.target.value);\n        // }\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }\n        })));\n    }\n  }\n  /**\n   * Change value handler\n   * @method onChangeValue\n   * @param {Number} index Index of the row.\n   * @param {String|Array} value Value of the row.\n   * @returns {undefined}\n   */\n\n\n  onChangeValue(index, value) {\n    this.props.onChange(this.props.id, _map(this.props.value, (row, i) => index === i ? _objectSpread(_objectSpread({}, row), {}, {\n      v: value\n    }) : row));\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    const {\n      id,\n      required,\n      description,\n      error,\n      value,\n      onChange,\n      onEdit,\n      indexes,\n      fieldSet,\n      reactSelect,\n      intl\n    } = this.props;\n    const Select = reactSelect.default;\n    return __jsx(Form.Field, {\n      inline: true,\n      required: required,\n      error: error.length > 0,\n      className: cx('query-widget', description ? 'help' : ''),\n      id: `${fieldSet || 'field'}-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"simple-field-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.Criteria)))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, indexes && !_isEmpty(indexes) && _map(value, (row, index) => {\n      var _indexes$row$i, _indexes$row$i$operat, _indexes$row$i2;\n\n      return __jsx(Form.Group, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }\n      }, __jsx(\"div\", {\n        className: \"main-fields-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Field, {\n        style: {\n          flex: '1 0 auto',\n          marginRight: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 23\n        }\n      }, __jsx(Select, {\n        id: `field-${id}`,\n        name: id,\n        disabled: onEdit !== null,\n        className: \"react-select-container\",\n        classNamePrefix: \"react-select\",\n        options: _map(_toPairs(_groupBy(_toPairs(indexes), item => item[1].group)), group => ({\n          label: group[0],\n          options: _map(_filter(group[1], item => item[1].enabled), field => ({\n            label: field[1].title,\n            value: field[0],\n            isDisabled: (value || []).some(v => v['i'] === field[0])\n          }))\n        })),\n        styles: customSelectStyles,\n        theme: selectTheme,\n        placeholder: intl.formatMessage(messages.select),\n        components: {\n          DropdownIndicator,\n          Option\n        },\n        value: {\n          value: row.i,\n          label: (_indexes$row$i = indexes[row.i]) === null || _indexes$row$i === void 0 ? void 0 : _indexes$row$i.title\n        },\n        onChange: data => onChange(id, _map(value, (curRow, curIndex) => curIndex === index ? {\n          i: data.value,\n          o: indexes[data.value].operations[0],\n          v: ''\n        } : curRow)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }\n      })), __jsx(Form.Field, {\n        style: {\n          flex: '1 0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 23\n        }\n      }, __jsx(Select, {\n        id: `field-${id}`,\n        name: id,\n        disabled: onEdit !== null,\n        className: \"react-select-container\",\n        classNamePrefix: \"react-select\",\n        options: _map((_indexes$row$i$operat = (_indexes$row$i2 = indexes[row.i]) === null || _indexes$row$i2 === void 0 ? void 0 : _indexes$row$i2.operations) !== null && _indexes$row$i$operat !== void 0 ? _indexes$row$i$operat : [], operation => ({\n          value: operation,\n          label: indexes[row.i].operators[operation].title\n        })),\n        styles: customSelectStyles,\n        theme: selectTheme,\n        placeholder: intl.formatMessage(messages.select),\n        components: {\n          DropdownIndicator,\n          Option\n        },\n        value: {\n          value: row.o,\n          label: indexes[row.i].operators[row.o].title\n        },\n        onChange: data => onChange(id, _map(value, (curRow, curIndex) => curIndex === index ? {\n          i: row.i,\n          o: data.value,\n          v: ''\n        } : curRow)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }\n      })), !this.props.indexes[row.i].operators[row.o].widget && __jsx(Button, {\n        onClick: event => {\n          onChange(id, _remove(value, (v, i) => i !== index));\n          event.preventDefault();\n        },\n        style: {\n          background: 'none',\n          paddingRight: 0,\n          paddingLeft: 0,\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 25\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        className: \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 27\n        }\n      }))), this.getWidget(row, index, Select), this.props.indexes[row.i].operators[row.o].widget && __jsx(Button, {\n        onClick: event => {\n          onChange(id, _remove(value, (v, i) => i !== index));\n          event.preventDefault();\n        },\n        style: {\n          background: 'none',\n          paddingRight: 0,\n          paddingLeft: 0,\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 23\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        className: \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }\n      })));\n    }), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      style: {\n        flex: '1 0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      id: `field-${id}`,\n      name: id,\n      disabled: onEdit !== null,\n      className: \"react-select-container\",\n      classNamePrefix: \"react-select\",\n      placeholder: intl.formatMessage(messages.AddCriteria),\n      options: _map(_toPairs(_groupBy(_toPairs(indexes), item => item[1].group)), group => ({\n        label: group[0],\n        options: _map(_filter(group[1], item => item[1].enabled), field => ({\n          label: field[1].title,\n          value: field[0],\n          isDisabled: (value || []).some(v => v['i'] === field[0])\n        }))\n      })),\n      styles: customSelectStyles,\n      theme: selectTheme,\n      components: {\n        DropdownIndicator,\n        Option\n      },\n      value: null,\n      onChange: data => {\n        onChange(id, [...(value || []), {\n          i: data.value,\n          o: indexes[data.value].operations[0],\n          v: ''\n        }]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 19\n      }\n    }))), _map(error, message => __jsx(Label, {\n      key: message,\n      basic: true,\n      color: \"red\",\n      pointing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }\n    }, message)))), description && __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }\n    }, description)))));\n  }\n\n}\n\n_defineProperty(QuerystringWidgetComponent, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.array,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  getQuerystring: PropTypes.func.isRequired\n});\n\n_defineProperty(QuerystringWidgetComponent, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n  focus: false\n});\n\nexport default compose(injectIntl, injectLazyLibs(['reactSelect']), connect(state => ({\n  indexes: state.querystring.indexes\n}), {\n  getQuerystring\n}))(QuerystringWidgetComponent);","map":{"version":3,"names":["React","Component","PropTypes","compose","connect","Button","Form","Grid","Input","Label","defineMessages","injectIntl","getQuerystring","Icon","injectLazyLibs","cx","Option","DropdownIndicator","selectTheme","customSelectStyles","clearSVG","messages","Criteria","AddCriteria","select","QuerystringWidgetComponent","constructor","props","state","visual","onChangeValue","bind","getWidget","componentDidMount","focus","node","row","index","Select","fluid","value","v","onChange","data","target","values","indexes","i","operators","o","widget","flex","maxWidth","label","title","intl","formatMessage","item","id","render","required","description","error","onEdit","fieldSet","reactSelect","default","length","marginRight","group","options","enabled","field","isDisabled","some","curRow","curIndex","operations","operation","event","preventDefault","background","paddingRight","paddingLeft","margin","message","string","isRequired","bool","arrayOf","array","func","onDelete","querystring"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/QueryWidget.jsx"],"sourcesContent":["/**\n * QuerystringWidget component.\n * @module components/manage/Widgets/QuerystringWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Input, Label } from 'semantic-ui-react';\nimport { filter, remove, toPairs, groupBy, isEmpty, map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getQuerystring } from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport cx from 'classnames';\n\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  Criteria: {\n    id: 'Criteria',\n    defaultMessage: 'Criteria',\n  },\n  AddCriteria: {\n    id: 'Add criteria',\n    defaultMessage: 'Add criteria',\n  },\n  select: {\n    id: 'querystring-widget-select',\n    defaultMessage: 'Select…',\n  },\n});\n\n/**\n * Widget for a querystring value, to define a catalog search criteria.\n */\nexport class QuerystringWidgetComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.array,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    getQuerystring: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: null,\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false,\n    };\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.getWidget = this.getWidget.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n  }\n\n  /**\n   * Get correct widget\n   * @method getWidget\n   * @param {Object} row Row object.\n   * @param {number} index Row index.\n   * @returns {Object} Widget.\n   */\n  getWidget(row, index, Select) {\n    const props = {\n      fluid: true,\n      value: row.v,\n      onChange: (data) => this.onChangeValue(index, data.target.value),\n    };\n    const values = this.props.indexes[row.i].values;\n\n    switch (this.props.indexes[row.i].operators[row.o].widget) {\n      case null:\n        return <span />;\n      case 'DateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input type=\"date\" {...props} value={row.v} />\n          </Form.Field>\n        );\n      case 'DateRangeWidget': // 2 date inputs\n        return (\n          <React.Fragment>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={row.v[0]}\n                onChange={(data) =>\n                  this.onChangeValue(index, [data.target.value, row.v[1]])\n                }\n              />\n            </Form.Field>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={row.v[1]}\n                onChange={(data) =>\n                  this.onChangeValue(index, [row.v[0], data.target.value])\n                }\n              />\n            </Form.Field>\n          </React.Fragment>\n        );\n      case 'RelativeDateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input step={1} type=\"number\" {...props} />\n          </Form.Field>\n        );\n      case 'MultipleSelectionWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto', maxWidth: '92%' }}>\n            <Select\n              {...props}\n              className=\"react-select-container\"\n              classNamePrefix=\"react-select\"\n              options={\n                values\n                  ? map(toPairs(values), (value) => ({\n                      label: value[1].title,\n                      value: value[0],\n                    }))\n                  : []\n              }\n              styles={customSelectStyles}\n              placeholder={this.props.intl.formatMessage(messages.select)}\n              theme={selectTheme}\n              components={{ DropdownIndicator, Option }}\n              onChange={(data) => {\n                this.onChangeValue(\n                  index,\n                  map(data, (item) => item.value),\n                );\n              }}\n              isMulti={true}\n              value={map(row.v, (value) => ({\n                label: values?.[value]?.title || value,\n                value,\n              }))}\n            />\n          </Form.Field>\n        );\n      case 'ReferenceWidget':\n      default:\n        // if (row.o === 'plone.app.querystring.operation.string.relativePath') {\n        //   props.onChange = data => this.onChangeValue(index, data.target.value);\n        // }\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input {...props} />\n          </Form.Field>\n        );\n    }\n  }\n\n  /**\n   * Change value handler\n   * @method onChangeValue\n   * @param {Number} index Index of the row.\n   * @param {String|Array} value Value of the row.\n   * @returns {undefined}\n   */\n  onChangeValue(index, value) {\n    this.props.onChange(\n      this.props.id,\n      map(this.props.value, (row, i) =>\n        index === i\n          ? {\n              ...row,\n              v: value,\n            }\n          : row,\n      ),\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      required,\n      description,\n      error,\n      value,\n      onChange,\n      onEdit,\n      indexes,\n      fieldSet,\n      reactSelect,\n      intl,\n    } = this.props;\n\n    const Select = reactSelect.default;\n\n    return (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={cx('query-widget', description ? 'help' : '')}\n        id={`${fieldSet || 'field'}-${id}`}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              <div className=\"simple-field-name\">\n                {intl.formatMessage(messages.Criteria)}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              {indexes &&\n                !isEmpty(indexes) &&\n                map(value, (row, index) => (\n                  <Form.Group key={index}>\n                    <div className=\"main-fields-wrapper\">\n                      <Form.Field\n                        style={{ flex: '1 0 auto', marginRight: '10px' }}\n                      >\n                        <Select\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            toPairs(\n                              groupBy(\n                                toPairs(indexes),\n                                (item) => item[1].group,\n                              ),\n                            ),\n                            (group) => ({\n                              label: group[0],\n                              options: map(\n                                filter(group[1], (item) => item[1].enabled),\n                                (field) => ({\n                                  label: field[1].title,\n                                  value: field[0],\n                                  isDisabled: (value || []).some(\n                                    (v) => v['i'] === field[0],\n                                  ),\n                                }),\n                              ),\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.i,\n                            label: indexes[row.i]?.title,\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: data.value,\n                                      o: indexes[data.value].operations[0],\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      <Form.Field style={{ flex: '1 0 auto' }}>\n                        <Select\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            indexes[row.i]?.operations ?? [],\n                            (operation) => ({\n                              value: operation,\n                              label: indexes[row.i].operators[operation].title,\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.o,\n                            label: indexes[row.i].operators[row.o].title,\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: row.i,\n                                      o: data.value,\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      {!this.props.indexes[row.i].operators[row.o].widget && (\n                        <Button\n                          onClick={(event) => {\n                            onChange(\n                              id,\n                              remove(value, (v, i) => i !== index),\n                            );\n                            event.preventDefault();\n                          }}\n                          style={{\n                            background: 'none',\n                            paddingRight: 0,\n                            paddingLeft: 0,\n                            margin: 0,\n                          }}\n                        >\n                          <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                        </Button>\n                      )}\n                    </div>\n                    {this.getWidget(row, index, Select)}\n                    {this.props.indexes[row.i].operators[row.o].widget && (\n                      <Button\n                        onClick={(event) => {\n                          onChange(\n                            id,\n                            remove(value, (v, i) => i !== index),\n                          );\n                          event.preventDefault();\n                        }}\n                        style={{\n                          background: 'none',\n                          paddingRight: 0,\n                          paddingLeft: 0,\n                          margin: 0,\n                        }}\n                      >\n                        <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                      </Button>\n                    )}\n                  </Form.Group>\n                ))}\n              <Form.Group>\n                <Form.Field style={{ flex: '1 0 auto' }}>\n                  <Select\n                    id={`field-${id}`}\n                    name={id}\n                    disabled={onEdit !== null}\n                    className=\"react-select-container\"\n                    classNamePrefix=\"react-select\"\n                    placeholder={intl.formatMessage(messages.AddCriteria)}\n                    options={map(\n                      toPairs(\n                        groupBy(toPairs(indexes), (item) => item[1].group),\n                      ),\n                      (group) => ({\n                        label: group[0],\n                        options: map(\n                          filter(group[1], (item) => item[1].enabled),\n                          (field) => ({\n                            label: field[1].title,\n                            value: field[0],\n                            isDisabled: (value || []).some(\n                              (v) => v['i'] === field[0],\n                            ),\n                          }),\n                        ),\n                      }),\n                    )}\n                    styles={customSelectStyles}\n                    theme={selectTheme}\n                    components={{ DropdownIndicator, Option }}\n                    value={null}\n                    onChange={(data) => {\n                      onChange(id, [\n                        ...(value || []),\n                        {\n                          i: data.value,\n                          o: indexes[data.value].operations[0],\n                          v: '',\n                        },\n                      ]);\n                    }}\n                  />\n                </Form.Field>\n              </Form.Group>\n              {map(error, (message) => (\n                <Label key={message} basic color=\"red\" pointing>\n                  {message}\n                </Label>\n              ))}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">{description}</p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect']),\n  connect(\n    (state) => ({\n      indexes: state.querystring.indexes,\n    }),\n    { getQuerystring },\n  ),\n)(QuerystringWidgetComponent);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Criteria","defaultMessage":"Criteria"},{"id":"Add criteria","defaultMessage":"Add criteria"},{"id":"querystring-widget-select","defaultMessage":"Select…"}]}},"sourceType":"module"}