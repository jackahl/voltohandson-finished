{"ast":null,"code":"import _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/DatabaseInformation.jsx\";\nvar __jsx = React.createElement;\n\n/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/DatabaseInformation\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Container, Divider, Message, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { getDatabaseInformation } from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  databaseInformation: {\n    \"id\": \"Database Information\",\n    \"defaultMessage\": \"Database Information\"\n  }\n});\n/**\n * DatabaseInformation class.\n * @class DatabaseInformation\n * @extends Component\n */\n\nclass DatabaseInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false\n    };\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.props.getDatabaseInformation();\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n\n  render() {\n    return this.props.databaseInformation ? __jsx(Container, {\n      id: \"database-page\",\n      className: \"controlpanel-database\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.databaseInformation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Database Information\",\n      defaultMessage: \"Database Information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"The Database Manager allow you to view database status information\",\n      defaultMessage: \"The Database Manager allow you to view database status information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Database main\",\n      defaultMessage: \"Database main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }))), __jsx(Table, {\n      celled: true,\n      padded: true,\n      columns: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Database Location\",\n      defaultMessage: \"Database Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.db_name)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Database Size\",\n      defaultMessage: \"Database Size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.database_size)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Total number of objects in the database\",\n      defaultMessage: \"Total number of objects in the database\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.db_size)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Total number of objects in memory from all caches\",\n      defaultMessage: \"Total number of objects in memory from all caches\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.cache_size)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Target number of objects in memory per cache\",\n      defaultMessage: \"Target number of objects in memory per cache\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.cache_length)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Target memory size per cache in bytes\",\n      defaultMessage: \"Target memory size per cache in bytes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.cache_length_bytes))))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }), __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, __jsx(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Total number of objects in each cache\",\n      defaultMessage: \"Total number of objects in each cache\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }))), __jsx(Table, {\n      celled: true,\n      padded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Cache Name\",\n      defaultMessage: \"Cache Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Number of active objects\",\n      defaultMessage: \"Number of active objects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Total active and non-active objects\",\n      defaultMessage: \"Total active and non-active objects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    })))), this.props.databaseInformation.cache_detail_length.map(item => __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, item.connection), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, item.ngsize), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, item.size)))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(React.Fragment, null, __jsx(Link, {\n        to: \"/controlpanel\",\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        \"aria-label\": this.props.intl.formatMessage(messages.back),\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }))) : null;\n  }\n\n}\n\n_defineProperty(DatabaseInformation, \"propTypes\", {\n  getDatabaseInformation: PropTypes.func.isRequired\n});\n\nexport default compose(injectIntl, connect((state, props) => ({\n  databaseInformation: state.controlpanels.databaseinformation,\n  pathname: props.location.pathname\n}), {\n  getDatabaseInformation\n}))(DatabaseInformation);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","Portal","Container","Divider","Message","Segment","Table","FormattedMessage","defineMessages","injectIntl","getDatabaseInformation","Helmet","Icon","Toolbar","backSVG","messages","back","databaseInformation","DatabaseInformation","constructor","props","state","isClient","componentDidMount","setState","render","intl","formatMessage","db_name","database_size","db_size","cache_size","cache_length","cache_length_bytes","cache_detail_length","map","item","connection","ngsize","size","document","getElementById","pathname","func","isRequired","controlpanels","databaseinformation","location"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Controlpanels/DatabaseInformation.jsx"],"sourcesContent":["/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/DatabaseInformation\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Container, Divider, Message, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { getDatabaseInformation } from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  databaseInformation: {\n    id: 'Database Information',\n    defaultMessage: 'Database Information',\n  },\n});\n\n/**\n * DatabaseInformation class.\n * @class DatabaseInformation\n * @extends Component\n */\nclass DatabaseInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getDatabaseInformation: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getDatabaseInformation();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.databaseInformation ? (\n      <Container id=\"database-page\" className=\"controlpanel-database\">\n        <Helmet\n          title={this.props.intl.formatMessage(messages.databaseInformation)}\n        />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Database Information\"\n              defaultMessage=\"Database Information\"\n            />\n          </Segment>\n          <Segment>\n            <Message>\n              <FormattedMessage\n                id=\"The Database Manager allow you to view database status information\"\n                defaultMessage=\"The Database Manager allow you to view database status information\"\n              />\n            </Message>\n          </Segment>\n          <Segment>\n            <Message>\n              <Message.Header>\n                <FormattedMessage\n                  id=\"Database main\"\n                  defaultMessage=\"Database main\"\n                />\n              </Message.Header>\n            </Message>\n            <Table celled padded columns=\"2\">\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Database Location\"\n                      defaultMessage=\"Database Location\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.db_name}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Database Size\"\n                      defaultMessage=\"Database Size\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.database_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Total number of objects in the database\"\n                      defaultMessage=\"Total number of objects in the database\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.db_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Total number of objects in memory from all caches\"\n                      defaultMessage=\"Total number of objects in memory from all caches\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Target number of objects in memory per cache\"\n                      defaultMessage=\"Target number of objects in memory per cache\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_length}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Target memory size per cache in bytes\"\n                      defaultMessage=\"Target memory size per cache in bytes\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_length_bytes}\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Segment>\n          <Segment>\n            <Divider />\n\n            <Message>\n              <Message.Header>\n                <FormattedMessage\n                  id=\"Total number of objects in each cache\"\n                  defaultMessage=\"Total number of objects in each cache\"\n                />\n              </Message.Header>\n            </Message>\n            <Table celled padded>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Cache Name\"\n                      defaultMessage=\"Cache Name\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Number of active objects\"\n                      defaultMessage=\"Number of active objects\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Total active and non-active objects\"\n                      defaultMessage=\"Total active and non-active objects\"\n                    />\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              {this.props.databaseInformation.cache_detail_length.map(\n                (item) => (\n                  <Table.Row>\n                    <Table.Cell>{item.connection}</Table.Cell>\n                    <Table.Cell>{item.ngsize}</Table.Cell>\n                    <Table.Cell>{item.size}</Table.Cell>\n                  </Table.Row>\n                ),\n              )}\n            </Table>\n          </Segment>\n        </Segment.Group>\n\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to=\"/controlpanel\" className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      aria-label={this.props.intl.formatMessage(messages.back)}\n                      className=\"contents circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    ) : null;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      databaseInformation: state.controlpanels.databaseinformation,\n      pathname: props.location.pathname,\n    }),\n    { getDatabaseInformation },\n  ),\n)(DatabaseInformation);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Database Information","defaultMessage":"Database Information"},{"id":"The Database Manager allow you to view database status information","defaultMessage":"The Database Manager allow you to view database status information"},{"id":"Database main","defaultMessage":"Database main"},{"id":"Database Location","defaultMessage":"Database Location"},{"id":"Database Size","defaultMessage":"Database Size"},{"id":"Total number of objects in the database","defaultMessage":"Total number of objects in the database"},{"id":"Total number of objects in memory from all caches","defaultMessage":"Total number of objects in memory from all caches"},{"id":"Target number of objects in memory per cache","defaultMessage":"Target number of objects in memory per cache"},{"id":"Target memory size per cache in bytes","defaultMessage":"Target memory size per cache in bytes"},{"id":"Total number of objects in each cache","defaultMessage":"Total number of objects in each cache"},{"id":"Cache Name","defaultMessage":"Cache Name"},{"id":"Number of active objects","defaultMessage":"Number of active objects"},{"id":"Total active and non-active objects","defaultMessage":"Total active and non-active objects"}]}},"sourceType":"module"}