{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Block/BlocksForm.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport EditBlock from './Edit';\nimport { DragDropList } from '@plone/volto/components';\nimport { getBlocks } from '@plone/volto/helpers';\nimport { addBlock, insertBlock, changeBlock, deleteBlock, moveBlock, mutateBlock, nextBlockId, previousBlockId } from '@plone/volto/helpers';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport { useDispatch } from 'react-redux';\nimport { useDetectClickOutside } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst BlocksForm = props => {\n  const {\n    pathname,\n    onChangeField,\n    properties,\n    onChangeFormData,\n    selectedBlock,\n    multiSelected,\n    onSelectBlock,\n    allowedBlocks,\n    showRestricted,\n    title,\n    description,\n    metadata,\n    manage,\n    children,\n    isMainForm = true,\n    blocksConfig = config.blocks.blocksConfig,\n    editable = true\n  } = props;\n  const blockList = getBlocks(properties);\n  const dispatch = useDispatch();\n\n  const ClickOutsideListener = () => {\n    onSelectBlock(null);\n    dispatch(setSidebarTab(0));\n  };\n\n  const ref = useDetectClickOutside({\n    onTriggered: ClickOutsideListener,\n    triggerKeys: ['Escape'],\n    // Disabled feature for now https://github.com/plone/volto/pull/2389#issuecomment-830027413\n    disableClick: true,\n    disableKeys: !isMainForm\n  });\n\n  const handleKeyDown = (e, index, block, node, {\n    disableEnter = false,\n    disableArrowUp = false,\n    disableArrowDown = false\n  } = {}) => {\n    const isMultipleSelection = e.shiftKey;\n\n    if (e.key === 'ArrowUp' && !disableArrowUp) {\n      onFocusPreviousBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n\n    if (e.key === 'ArrowDown' && !disableArrowDown) {\n      onFocusNextBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n\n    if (e.key === 'Enter' && !disableEnter) {\n      onSelectBlock(onAddBlock(config.settings.defaultBlockType, index + 1));\n      e.preventDefault();\n    }\n  };\n\n  const onFocusPreviousBlock = (currentBlock, blockNode, isMultipleSelection) => {\n    const prev = previousBlockId(properties, currentBlock);\n    if (prev === null) return;\n    blockNode.blur();\n    onSelectBlock(prev, isMultipleSelection);\n  };\n\n  const onFocusNextBlock = (currentBlock, blockNode, isMultipleSelection) => {\n    const next = nextBlockId(properties, currentBlock);\n    if (next === null) return;\n    blockNode.blur();\n    onSelectBlock(next, isMultipleSelection);\n  };\n\n  const onMutateBlock = (id, value) => {\n    const newFormData = mutateBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onInsertBlock = (id, value, current) => {\n    const [newId, newFormData] = insertBlock(properties, id, value, current);\n    onChangeFormData(newFormData);\n    return newId;\n  };\n\n  const onAddBlock = (type, index) => {\n    if (editable) {\n      const [id, newFormData] = addBlock(properties, type, index);\n      onChangeFormData(newFormData);\n      return id;\n    }\n  };\n\n  const onChangeBlock = (id, value) => {\n    const newFormData = changeBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onDeleteBlock = (id, selectPrev) => {\n    const previous = previousBlockId(properties, id);\n    const newFormData = deleteBlock(properties, id);\n    onChangeFormData(newFormData);\n    onSelectBlock(selectPrev ? previous : null);\n  };\n\n  const onMoveBlock = (dragIndex, hoverIndex) => {\n    const newFormData = moveBlock(properties, dragIndex, hoverIndex);\n    onChangeFormData(newFormData);\n  };\n\n  const defaultBlockWrapper = ({\n    draginfo\n  }, editBlock, blockProps) => __jsx(EditBlockWrapper, {\n    draginfo: draginfo,\n    blockProps: blockProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, editBlock);\n\n  const editBlockWrapper = children || defaultBlockWrapper;\n  return __jsx(\"div\", {\n    className: \"blocks-form\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"invisible\",\n    disabled: !editable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, __jsx(DragDropList, {\n    childList: blockList,\n    onMoveItem: result => {\n      const {\n        source,\n        destination\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      const newFormData = moveBlock(properties, source.index, destination.index);\n      onChangeFormData(newFormData);\n      return true;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, dragProps => {\n    const {\n      child,\n      childId,\n      index\n    } = dragProps;\n    const blockProps = {\n      allowedBlocks,\n      showRestricted,\n      block: childId,\n      data: child,\n      handleKeyDown,\n      id: childId,\n      formTitle: title,\n      formDescription: description,\n      index,\n      manage,\n      onAddBlock,\n      onInsertBlock,\n      onChangeBlock,\n      onChangeField,\n      onChangeFormData,\n      onDeleteBlock,\n      onFocusNextBlock,\n      onFocusPreviousBlock,\n      onMoveBlock,\n      onMutateBlock,\n      onSelectBlock,\n      pathname,\n      metadata,\n      properties,\n      blocksConfig,\n      selected: selectedBlock === childId,\n      multiSelected: multiSelected === null || multiSelected === void 0 ? void 0 : multiSelected.includes(childId),\n      type: child['@type'],\n      editable\n    };\n    return editBlockWrapper(dragProps, __jsx(EditBlock, _extends({\n      key: childId\n    }, blockProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    })), blockProps);\n  })));\n};\n\nexport default BlocksForm;","map":{"version":3,"names":["React","EditBlock","DragDropList","getBlocks","addBlock","insertBlock","changeBlock","deleteBlock","moveBlock","mutateBlock","nextBlockId","previousBlockId","EditBlockWrapper","setSidebarTab","useDispatch","useDetectClickOutside","config","BlocksForm","props","pathname","onChangeField","properties","onChangeFormData","selectedBlock","multiSelected","onSelectBlock","allowedBlocks","showRestricted","title","description","metadata","manage","children","isMainForm","blocksConfig","blocks","editable","blockList","dispatch","ClickOutsideListener","ref","onTriggered","triggerKeys","disableClick","disableKeys","handleKeyDown","e","index","block","node","disableEnter","disableArrowUp","disableArrowDown","isMultipleSelection","shiftKey","key","onFocusPreviousBlock","preventDefault","onFocusNextBlock","onAddBlock","settings","defaultBlockType","currentBlock","blockNode","prev","blur","next","onMutateBlock","id","value","newFormData","onInsertBlock","current","newId","type","onChangeBlock","onDeleteBlock","selectPrev","previous","onMoveBlock","dragIndex","hoverIndex","defaultBlockWrapper","draginfo","editBlock","blockProps","editBlockWrapper","result","source","destination","dragProps","child","childId","data","formTitle","formDescription","selected","includes"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Block/BlocksForm.jsx"],"sourcesContent":["import React from 'react';\nimport EditBlock from './Edit';\nimport { DragDropList } from '@plone/volto/components';\nimport { getBlocks } from '@plone/volto/helpers';\nimport {\n  addBlock,\n  insertBlock,\n  changeBlock,\n  deleteBlock,\n  moveBlock,\n  mutateBlock,\n  nextBlockId,\n  previousBlockId,\n} from '@plone/volto/helpers';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport { useDispatch } from 'react-redux';\nimport { useDetectClickOutside } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst BlocksForm = (props) => {\n  const {\n    pathname,\n    onChangeField,\n    properties,\n    onChangeFormData,\n    selectedBlock,\n    multiSelected,\n    onSelectBlock,\n    allowedBlocks,\n    showRestricted,\n    title,\n    description,\n    metadata,\n    manage,\n    children,\n    isMainForm = true,\n    blocksConfig = config.blocks.blocksConfig,\n    editable = true,\n  } = props;\n\n  const blockList = getBlocks(properties);\n\n  const dispatch = useDispatch();\n\n  const ClickOutsideListener = () => {\n    onSelectBlock(null);\n    dispatch(setSidebarTab(0));\n  };\n\n  const ref = useDetectClickOutside({\n    onTriggered: ClickOutsideListener,\n    triggerKeys: ['Escape'],\n    // Disabled feature for now https://github.com/plone/volto/pull/2389#issuecomment-830027413\n    disableClick: true,\n    disableKeys: !isMainForm,\n  });\n\n  const handleKeyDown = (\n    e,\n    index,\n    block,\n    node,\n    {\n      disableEnter = false,\n      disableArrowUp = false,\n      disableArrowDown = false,\n    } = {},\n  ) => {\n    const isMultipleSelection = e.shiftKey;\n    if (e.key === 'ArrowUp' && !disableArrowUp) {\n      onFocusPreviousBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'ArrowDown' && !disableArrowDown) {\n      onFocusNextBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'Enter' && !disableEnter) {\n      onSelectBlock(onAddBlock(config.settings.defaultBlockType, index + 1));\n      e.preventDefault();\n    }\n  };\n\n  const onFocusPreviousBlock = (\n    currentBlock,\n    blockNode,\n    isMultipleSelection,\n  ) => {\n    const prev = previousBlockId(properties, currentBlock);\n    if (prev === null) return;\n\n    blockNode.blur();\n\n    onSelectBlock(prev, isMultipleSelection);\n  };\n\n  const onFocusNextBlock = (currentBlock, blockNode, isMultipleSelection) => {\n    const next = nextBlockId(properties, currentBlock);\n    if (next === null) return;\n\n    blockNode.blur();\n\n    onSelectBlock(next, isMultipleSelection);\n  };\n\n  const onMutateBlock = (id, value) => {\n    const newFormData = mutateBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onInsertBlock = (id, value, current) => {\n    const [newId, newFormData] = insertBlock(properties, id, value, current);\n    onChangeFormData(newFormData);\n    return newId;\n  };\n\n  const onAddBlock = (type, index) => {\n    if (editable) {\n      const [id, newFormData] = addBlock(properties, type, index);\n      onChangeFormData(newFormData);\n      return id;\n    }\n  };\n\n  const onChangeBlock = (id, value) => {\n    const newFormData = changeBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onDeleteBlock = (id, selectPrev) => {\n    const previous = previousBlockId(properties, id);\n\n    const newFormData = deleteBlock(properties, id);\n    onChangeFormData(newFormData);\n\n    onSelectBlock(selectPrev ? previous : null);\n  };\n\n  const onMoveBlock = (dragIndex, hoverIndex) => {\n    const newFormData = moveBlock(properties, dragIndex, hoverIndex);\n    onChangeFormData(newFormData);\n  };\n\n  const defaultBlockWrapper = ({ draginfo }, editBlock, blockProps) => (\n    <EditBlockWrapper draginfo={draginfo} blockProps={blockProps}>\n      {editBlock}\n    </EditBlockWrapper>\n  );\n\n  const editBlockWrapper = children || defaultBlockWrapper;\n\n  return (\n    <div className=\"blocks-form\" ref={ref}>\n      <fieldset className=\"invisible\" disabled={!editable}>\n        <DragDropList\n          childList={blockList}\n          onMoveItem={(result) => {\n            const { source, destination } = result;\n            if (!destination) {\n              return;\n            }\n            const newFormData = moveBlock(\n              properties,\n              source.index,\n              destination.index,\n            );\n            onChangeFormData(newFormData);\n            return true;\n          }}\n        >\n          {(dragProps) => {\n            const { child, childId, index } = dragProps;\n            const blockProps = {\n              allowedBlocks,\n              showRestricted,\n              block: childId,\n              data: child,\n              handleKeyDown,\n              id: childId,\n              formTitle: title,\n              formDescription: description,\n              index,\n              manage,\n              onAddBlock,\n              onInsertBlock,\n              onChangeBlock,\n              onChangeField,\n              onChangeFormData,\n              onDeleteBlock,\n              onFocusNextBlock,\n              onFocusPreviousBlock,\n              onMoveBlock,\n              onMutateBlock,\n              onSelectBlock,\n              pathname,\n              metadata,\n              properties,\n              blocksConfig,\n              selected: selectedBlock === childId,\n              multiSelected: multiSelected?.includes(childId),\n              type: child['@type'],\n              editable,\n            };\n            return editBlockWrapper(\n              dragProps,\n              <EditBlock key={childId} {...blockProps} />,\n              blockProps,\n            );\n          }}\n        </DragDropList>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default BlocksForm;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}