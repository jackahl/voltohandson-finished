{"ast":null,"code":"import { v4 as uuid } from 'uuid';\nimport { Editor, Transforms } from 'slate';\nimport { IMAGE } from '@plone/volto-slate/constants';\nexport function syncCreateImageBlock(url) {\n  const id = uuid();\n  const block = {\n    '@type': 'image',\n    url\n  };\n  return [id, block];\n} // This function is used by deconstructToVoltoBlocks, so not directly by the\n// <SlateEditor>. File exists here because there's no \"blocks/Image\" folder\n\nexport const extractImages = (editor, pathRef) => {\n  const imageNodes = Array.from(Editor.nodes(editor, {\n    at: pathRef.current,\n    match: node => node.type === IMAGE\n  }));\n  const images = imageNodes.map(_ref => {\n    let [el, path] = _ref;\n    return el;\n  });\n  Transforms.removeNodes(editor, {\n    at: pathRef.current,\n    match: node => node.type === IMAGE\n  });\n  return images.map(el => syncCreateImageBlock(el.url));\n};","map":{"version":3,"names":["v4","uuid","Editor","Transforms","IMAGE","syncCreateImageBlock","url","id","block","extractImages","editor","pathRef","imageNodes","Array","from","nodes","at","current","match","node","type","images","map","el","path","removeNodes"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Image/deconstruct.js"],"sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { Editor, Transforms } from 'slate';\nimport { IMAGE } from '@plone/volto-slate/constants';\n\nexport function syncCreateImageBlock(url) {\n  const id = uuid();\n  const block = {\n    '@type': 'image',\n    url,\n  };\n  return [id, block];\n}\n\n// This function is used by deconstructToVoltoBlocks, so not directly by the\n// <SlateEditor>. File exists here because there's no \"blocks/Image\" folder\nexport const extractImages = (editor, pathRef) => {\n  const imageNodes = Array.from(\n    Editor.nodes(editor, {\n      at: pathRef.current,\n      match: (node) => node.type === IMAGE,\n    }),\n  );\n  const images = imageNodes.map(([el, path]) => el);\n  Transforms.removeNodes(editor, {\n    at: pathRef.current,\n    match: (node) => node.type === IMAGE,\n  });\n\n  return images.map((el) => syncCreateImageBlock(el.url));\n};\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,OAAnC;AACA,SAASC,KAAT,QAAsB,8BAAtB;AAEA,OAAO,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;EACxC,MAAMC,EAAE,GAAGN,IAAI,EAAf;EACA,MAAMO,KAAK,GAAG;IACZ,SAAS,OADG;IAEZF;EAFY,CAAd;EAIA,OAAO,CAACC,EAAD,EAAKC,KAAL,CAAP;AACD,C,CAED;AACA;;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;EAChD,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAN,CACjBZ,MAAM,CAACa,KAAP,CAAaL,MAAb,EAAqB;IACnBM,EAAE,EAAEL,OAAO,CAACM,OADO;IAEnBC,KAAK,EAAGC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAchB;EAFZ,CAArB,CADiB,CAAnB;EAMA,MAAMiB,MAAM,GAAGT,UAAU,CAACU,GAAX,CAAe;IAAA,IAAC,CAACC,EAAD,EAAKC,IAAL,CAAD;IAAA,OAAgBD,EAAhB;EAAA,CAAf,CAAf;EACApB,UAAU,CAACsB,WAAX,CAAuBf,MAAvB,EAA+B;IAC7BM,EAAE,EAAEL,OAAO,CAACM,OADiB;IAE7BC,KAAK,EAAGC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAchB;EAFF,CAA/B;EAKA,OAAOiB,MAAM,CAACC,GAAP,CAAYC,EAAD,IAAQlB,oBAAoB,CAACkB,EAAE,CAACjB,GAAJ,CAAvC,CAAP;AACD,CAdM"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}