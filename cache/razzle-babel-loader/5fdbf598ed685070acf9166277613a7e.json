{"ast":null,"code":"import _map from \"lodash/map\";\nimport _groupBy from \"lodash/groupBy\";\nimport _toPairs from \"lodash/toPairs\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/QuerySortOnWidget.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Option, DropdownIndicator, selectTheme, customSelectStyles } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nconst messages = defineMessages({\n  SortOn: {\n    \"id\": \"Sort on\",\n    \"defaultMessage\": \"Sort on\"\n  },\n  NoSelection: {\n    \"id\": \"No selection\",\n    \"defaultMessage\": \"No selection\"\n  }\n});\n\nfunction QueryStringSortOrderWidget(props) {\n  var _sortable_indexes$val;\n\n  const {\n    id,\n    value,\n    onChange,\n    reactSelect,\n    isDisabled\n  } = props;\n  const sortable_indexes = useSelector(state => state.querystring.sortable_indexes);\n  const intl = useIntl();\n  const Select = reactSelect.default;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    draggable: false,\n    className: \"query-sort-on-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), __jsx(Select, {\n    id: \"select-listingblock-sort-on\",\n    name: \"select-listingblock-sort-on\",\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\" // placeholder=\"Select criteria\"\n    ,\n    isDisabled: isDisabled,\n    options: [{\n      label: intl.formatMessage(messages.NoSelection),\n      value: ''\n    }, ..._map(_toPairs(_groupBy(_toPairs(sortable_indexes), item => item[1].group)), group => ({\n      label: group[0],\n      options: _map(group[1], field => ({\n        label: field[1].title,\n        value: field[0]\n      }))\n    }))],\n    styles: customSelectStyles,\n    theme: selectTheme,\n    components: {\n      DropdownIndicator,\n      Option\n    },\n    value: {\n      value: value || '',\n      label: value && sortable_indexes ? (_sortable_indexes$val = sortable_indexes[value]) === null || _sortable_indexes$val === void 0 ? void 0 : _sortable_indexes$val.title : value || intl.formatMessage(messages.NoSelection)\n    },\n    onChange: field => {\n      onChange(id, field.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default injectLazyLibs(['reactSelect'])(QueryStringSortOrderWidget);","map":{"version":3,"names":["React","FormFieldWrapper","defineMessages","useIntl","useSelector","Option","DropdownIndicator","selectTheme","customSelectStyles","injectLazyLibs","messages","SortOn","NoSelection","QueryStringSortOrderWidget","props","id","value","onChange","reactSelect","isDisabled","sortable_indexes","state","querystring","intl","Select","default","label","formatMessage","item","group","options","field","title"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Widgets/QuerySortOnWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { toPairs, groupBy, map } from 'lodash';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst messages = defineMessages({\n  SortOn: {\n    id: 'Sort on',\n    defaultMessage: 'Sort on',\n  },\n  NoSelection: {\n    id: 'No selection',\n    defaultMessage: 'No selection',\n  },\n});\n\nfunction QueryStringSortOrderWidget(props) {\n  const { id, value, onChange, reactSelect, isDisabled } = props;\n  const sortable_indexes = useSelector(\n    (state) => state.querystring.sortable_indexes,\n  );\n  const intl = useIntl();\n  const Select = reactSelect.default;\n\n  return (\n    <FormFieldWrapper\n      {...props}\n      draggable={false}\n      className=\"query-sort-on-widget\"\n    >\n      <Select\n        id=\"select-listingblock-sort-on\"\n        name=\"select-listingblock-sort-on\"\n        className=\"react-select-container\"\n        classNamePrefix=\"react-select\"\n        // placeholder=\"Select criteria\"\n        isDisabled={isDisabled}\n        options={[\n          {\n            label: intl.formatMessage(messages.NoSelection),\n            value: '',\n          },\n          ...map(\n            toPairs(\n              groupBy(toPairs(sortable_indexes), (item) => item[1].group),\n            ),\n            (group) => ({\n              label: group[0],\n              options: map(group[1], (field) => ({\n                label: field[1].title,\n                value: field[0],\n              })),\n            }),\n          ),\n        ]}\n        styles={customSelectStyles}\n        theme={selectTheme}\n        components={{ DropdownIndicator, Option }}\n        value={{\n          value: value || '',\n          label:\n            value && sortable_indexes\n              ? sortable_indexes[value]?.title\n              : value || intl.formatMessage(messages.NoSelection),\n        }}\n        onChange={(field) => {\n          onChange(id, field.value);\n        }}\n      />\n    </FormFieldWrapper>\n  );\n}\n\nexport default injectLazyLibs(['reactSelect'])(QueryStringSortOrderWidget);\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,YAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SACEC,MADF,EAEEC,iBAFF,EAGEC,WAHF,EAIEC,kBAJF,QAKO,sDALP;AAMA,SAASC,cAAT,QAA+B,wCAA/B;AAEA,MAAMC,QAAQ,GAAGR,cAAc,CAAC;EAC9BS,MAAM;IAAA;IAAA;EAAA,CADwB;EAK9BC,WAAW;IAAA;IAAA;EAAA;AALmB,CAAD,CAA/B;;AAWA,SAASC,0BAAT,CAAoCC,KAApC,EAA2C;EAAA;;EACzC,MAAM;IAAEC,EAAF;IAAMC,KAAN;IAAaC,QAAb;IAAuBC,WAAvB;IAAoCC;EAApC,IAAmDL,KAAzD;EACA,MAAMM,gBAAgB,GAAGhB,WAAW,CACjCiB,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,gBADK,CAApC;EAGA,MAAMG,IAAI,GAAGpB,OAAO,EAApB;EACA,MAAMqB,MAAM,GAAGN,WAAW,CAACO,OAA3B;EAEA,OACE,MAAC,gBAAD,eACMX,KADN;IAEE,SAAS,EAAE,KAFb;IAGE,SAAS,EAAC,sBAHZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAKE,MAAC,MAAD;IACE,EAAE,EAAC,6BADL;IAEE,IAAI,EAAC,6BAFP;IAGE,SAAS,EAAC,wBAHZ;IAIE,eAAe,EAAC,cAJlB,CAKE;IALF;IAME,UAAU,EAAEK,UANd;IAOE,OAAO,EAAE,CACP;MACEO,KAAK,EAAEH,IAAI,CAACI,aAAL,CAAmBjB,QAAQ,CAACE,WAA5B,CADT;MAEEI,KAAK,EAAE;IAFT,CADO,EAKP,GAAG,KACD,SACE,SAAQ,SAAQI,gBAAR,CAAR,EAAoCQ,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQC,KAArD,CADF,CADC,EAIAA,KAAD,KAAY;MACVH,KAAK,EAAEG,KAAK,CAAC,CAAD,CADF;MAEVC,OAAO,EAAE,KAAID,KAAK,CAAC,CAAD,CAAT,EAAeE,KAAD,KAAY;QACjCL,KAAK,EAAEK,KAAK,CAAC,CAAD,CAAL,CAASC,KADiB;QAEjChB,KAAK,EAAEe,KAAK,CAAC,CAAD;MAFqB,CAAZ,CAAd;IAFC,CAAZ,CAJC,CALI,CAPX;IAyBE,MAAM,EAAEvB,kBAzBV;IA0BE,KAAK,EAAED,WA1BT;IA2BE,UAAU,EAAE;MAAED,iBAAF;MAAqBD;IAArB,CA3Bd;IA4BE,KAAK,EAAE;MACLW,KAAK,EAAEA,KAAK,IAAI,EADX;MAELU,KAAK,EACHV,KAAK,IAAII,gBAAT,4BACIA,gBAAgB,CAACJ,KAAD,CADpB,0DACI,sBAAyBgB,KAD7B,GAEIhB,KAAK,IAAIO,IAAI,CAACI,aAAL,CAAmBjB,QAAQ,CAACE,WAA5B;IALV,CA5BT;IAmCE,QAAQ,EAAGmB,KAAD,IAAW;MACnBd,QAAQ,CAACF,EAAD,EAAKgB,KAAK,CAACf,KAAX,CAAR;IACD,CArCH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALF,CADF;AA+CD;;AAED,eAAeP,cAAc,CAAC,CAAC,aAAD,CAAD,CAAd,CAAgCI,0BAAhC,CAAf"},"metadata":{"react-intl":{"messages":[{"id":"Sort on","defaultMessage":"Sort on"},{"id":"No selection","defaultMessage":"No selection"}]}},"sourceType":"module"}