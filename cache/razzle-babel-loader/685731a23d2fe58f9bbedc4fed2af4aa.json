{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _omit from \"lodash/omit\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/extensions/withTestingFeatures.jsx\";\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport { ReactEditor } from 'slate-react';\n\nconst withTestingFeatures = WrappedComponent => {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    var _ref$current;\n\n    _s();\n\n    let ref = React.useRef(); // Source: https://stackoverflow.com/a/53623568/258462\n\n    const onTestSelectWord = val => {\n      let slateEditor = val.detail.parentElement.parentElement.parentElement.parentElement; // Events are special, can't use spread or Object.keys\n\n      let selectEvent = {};\n\n      for (let key in val) {\n        if (key === 'currentTarget') {\n          selectEvent['currentTarget'] = slateEditor;\n        } else if (key === 'type') {\n          selectEvent['type'] = 'select';\n        } else {\n          selectEvent[key] = val[key];\n        }\n      } // Make selection\n\n\n      let selection = window.getSelection();\n      let range = document.createRange();\n      range.selectNodeContents(val.detail);\n      selection.removeAllRanges();\n      selection.addRange(range); // Slate monitors DOM selection changes automatically\n    };\n\n    const onTestSelectRange = val => {\n      const newDomRange = val && ReactEditor.toDOMRange(window.focusedSlateEditor, val.detail);\n      let selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(newDomRange);\n    };\n\n    React.useEffect(() => {\n      document.addEventListener('Test_SelectWord', onTestSelectWord);\n      document.addEventListener('Test_SelectRange', onTestSelectRange);\n      return () => {\n        document.removeEventListener('Test_SelectWord', onTestSelectWord);\n        document.removeEventListener('Test_SelectRange', onTestSelectRange);\n      };\n    });\n    const handleFocus = React.useCallback(() => {\n      window.focusedSlateEditor = ref === null || ref === void 0 ? void 0 : ref.current;\n\n      if (props.onFocus) {\n        props.onFocus();\n      }\n    }, [props]);\n    const managedProps = useMemo(() => {\n      return _omit(props, 'onFocus');\n    }, [props]);\n    return __jsx(WrappedComponent, _extends({\n      debug: true,\n      \"debug-values\": {\n        'data-slate-value': JSON.stringify(props.value, null, 2),\n        'data-slate-selection': JSON.stringify(ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.selection, null, 2)\n      },\n      testingEditorRef: ref,\n      onFocus: handleFocus\n    }, managedProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }));\n  }, \"t9kwSoeKSkaL61KrTn4D9ZiYbUU=\");\n};\n\nexport default withTestingFeatures;","map":{"version":3,"names":["React","useMemo","ReactEditor","withTestingFeatures","WrappedComponent","props","ref","useRef","onTestSelectWord","val","slateEditor","detail","parentElement","selectEvent","key","selection","window","getSelection","range","document","createRange","selectNodeContents","removeAllRanges","addRange","onTestSelectRange","newDomRange","toDOMRange","focusedSlateEditor","useEffect","addEventListener","removeEventListener","handleFocus","useCallback","current","onFocus","managedProps","JSON","stringify","value"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/extensions/withTestingFeatures.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ReactEditor } from 'slate-react';\nimport { omit } from 'lodash';\n\nconst withTestingFeatures = (WrappedComponent) => {\n  return (props) => {\n    let ref = React.useRef();\n\n    // Source: https://stackoverflow.com/a/53623568/258462\n    const onTestSelectWord = (val) => {\n      let slateEditor =\n        val.detail.parentElement.parentElement.parentElement.parentElement;\n\n      // Events are special, can't use spread or Object.keys\n      let selectEvent = {};\n      for (let key in val) {\n        if (key === 'currentTarget') {\n          selectEvent['currentTarget'] = slateEditor;\n        } else if (key === 'type') {\n          selectEvent['type'] = 'select';\n        } else {\n          selectEvent[key] = val[key];\n        }\n      }\n\n      // Make selection\n      let selection = window.getSelection();\n      let range = document.createRange();\n      range.selectNodeContents(val.detail);\n      selection.removeAllRanges();\n      selection.addRange(range);\n\n      // Slate monitors DOM selection changes automatically\n    };\n\n    const onTestSelectRange = (val) => {\n      const newDomRange =\n        val && ReactEditor.toDOMRange(window.focusedSlateEditor, val.detail);\n\n      let selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(newDomRange);\n    };\n\n    React.useEffect(() => {\n      document.addEventListener('Test_SelectWord', onTestSelectWord);\n      document.addEventListener('Test_SelectRange', onTestSelectRange);\n      return () => {\n        document.removeEventListener('Test_SelectWord', onTestSelectWord);\n        document.removeEventListener('Test_SelectRange', onTestSelectRange);\n      };\n    });\n\n    const handleFocus = React.useCallback(() => {\n      window.focusedSlateEditor = ref?.current;\n      if (props.onFocus) {\n        props.onFocus();\n      }\n    }, [props]);\n\n    const managedProps = useMemo(() => {\n      return omit(props, 'onFocus');\n    }, [props]);\n\n    return (\n      <WrappedComponent\n        debug\n        debug-values={{\n          'data-slate-value': JSON.stringify(props.value, null, 2),\n          'data-slate-selection': JSON.stringify(\n            ref?.current?.selection,\n            null,\n            2,\n          ),\n        }}\n        testingEditorRef={ref}\n        onFocus={handleFocus}\n        {...managedProps}\n      />\n    );\n  };\n};\n\nexport default withTestingFeatures;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}