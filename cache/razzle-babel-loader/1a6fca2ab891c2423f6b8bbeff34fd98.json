{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchInput.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport loupeSVG from '@plone/volto/icons/zoom.svg';\nconst messages = defineMessages({\n  search: {\n    \"id\": \"Search\",\n    \"defaultMessage\": \"Search\"\n  }\n});\n\nconst SearchInput = props => {\n  _s();\n\n  const {\n    data,\n    searchText,\n    setSearchText,\n    isLive,\n    onTriggerSearch\n  } = props;\n  const intl = useIntl();\n  return __jsx(\"div\", {\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    id: `${props.id}-searchtext`,\n    value: searchText,\n    placeholder: data.searchInputPrompt || intl.formatMessage(messages.search),\n    fluid: true,\n    onKeyPress: event => {\n      if (isLive || event.key === 'Enter') onTriggerSearch(searchText);\n    },\n    onChange: (event, _ref) => {\n      let {\n        value\n      } = _ref;\n      setSearchText(value);\n\n      if (isLive) {\n        onTriggerSearch(value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), isLive && __jsx(Button, {\n    basic: true,\n    icon: true,\n    className: \"search-input-live-icon-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: loupeSVG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(SearchInput, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"names":["React","Button","Input","defineMessages","useIntl","Icon","loupeSVG","messages","search","SearchInput","props","data","searchText","setSearchText","isLive","onTriggerSearch","intl","id","searchInputPrompt","formatMessage","event","key","value"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchInput.jsx"],"sourcesContent":["import React from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport loupeSVG from '@plone/volto/icons/zoom.svg';\n\nconst messages = defineMessages({\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst SearchInput = (props) => {\n  const { data, searchText, setSearchText, isLive, onTriggerSearch } = props;\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-input\">\n      <Input\n        id={`${props.id}-searchtext`}\n        value={searchText}\n        placeholder={\n          data.searchInputPrompt || intl.formatMessage(messages.search)\n        }\n        fluid\n        onKeyPress={(event) => {\n          if (isLive || event.key === 'Enter') onTriggerSearch(searchText);\n        }}\n        onChange={(event, { value }) => {\n          setSearchText(value);\n          if (isLive) {\n            onTriggerSearch(value);\n          }\n        }}\n      />\n      {isLive && (\n        <Button basic icon className=\"search-input-live-icon-button\">\n          <Icon name={loupeSVG} />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default SearchInput;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,YAAxC;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AAEA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,MAAM;IAAA;IAAA;EAAA;AADwB,CAAD,CAA/B;;AAOA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM;IAAEC,IAAF;IAAQC,UAAR;IAAoBC,aAApB;IAAmCC,MAAnC;IAA2CC;EAA3C,IAA+DL,KAArE;EACA,MAAMM,IAAI,GAAGZ,OAAO,EAApB;EAEA,OACE;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,KAAD;IACE,EAAE,EAAG,GAAEM,KAAK,CAACO,EAAG,aADlB;IAEE,KAAK,EAAEL,UAFT;IAGE,WAAW,EACTD,IAAI,CAACO,iBAAL,IAA0BF,IAAI,CAACG,aAAL,CAAmBZ,QAAQ,CAACC,MAA5B,CAJ9B;IAME,KAAK,MANP;IAOE,UAAU,EAAGY,KAAD,IAAW;MACrB,IAAIN,MAAM,IAAIM,KAAK,CAACC,GAAN,KAAc,OAA5B,EAAqCN,eAAe,CAACH,UAAD,CAAf;IACtC,CATH;IAUE,QAAQ,EAAE,CAACQ,KAAD,WAAsB;MAAA,IAAd;QAAEE;MAAF,CAAc;MAC9BT,aAAa,CAACS,KAAD,CAAb;;MACA,IAAIR,MAAJ,EAAY;QACVC,eAAe,CAACO,KAAD,CAAf;MACD;IACF,CAfH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAkBGR,MAAM,IACL,MAAC,MAAD;IAAQ,KAAK,MAAb;IAAc,IAAI,MAAlB;IAAmB,SAAS,EAAC,+BAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAD;IAAM,IAAI,EAAER,QAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAnBJ,CADF;AA0BD,CA9BD;;GAAMG,W;UAESL,O;;;KAFTK,W;AAgCN,eAAeA,WAAf"},"metadata":{"react-intl":{"messages":[{"id":"Search","defaultMessage":"Search"}]}},"sourceType":"module"}