{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/View/View.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * View container.\n * @module components/theme/View/View\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { ContentMetadataTags, Comments, Tags, Toolbar } from '@plone/volto/components';\nimport { listActions, getContent } from '@plone/volto/actions';\nimport { BodyClass, getBaseUrl, flattenToAppURL, getLayoutFieldname } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n/**\n * View container class.\n * @class View\n * @extends Component\n */\n\nclass View extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      hasObjectButtons: null,\n      isClient: false\n    });\n\n    _defineProperty(this, \"getViewDefault\", () => config.views.defaultView);\n\n    _defineProperty(this, \"getViewByType\", () => config.views.contentTypesViews[this.props.content['@type']] || null);\n\n    _defineProperty(this, \"getViewByLayout\", () => config.views.layoutViews[this.props.content[getLayoutFieldname(this.props.content)]] || null);\n\n    _defineProperty(this, \"cleanViewName\", dirtyDisplayName => dirtyDisplayName.replace('Connect(', '').replace('injectIntl(', '').replace(')', '').replace('connect(', '').toLowerCase());\n  }\n\n  componentDidMount() {\n    this.props.listActions(getBaseUrl(this.props.pathname));\n    this.props.getContent(getBaseUrl(this.props.pathname), this.props.versionId);\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n      this.props.getContent(getBaseUrl(nextProps.pathname), this.props.versionId);\n    }\n\n    if (nextProps.actions.object_buttons) {\n      const objectButtons = nextProps.actions.object_buttons;\n      this.setState({\n        hasObjectButtons: !!objectButtons.length\n      });\n    }\n  }\n  /**\n   * Default fallback view\n   * @method getViewDefault\n   * @returns {string} Markup for component.\n   */\n\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      views\n    } = config;\n\n    if (this.props.error && this.props.error.code === 301) {\n      const redirect = flattenToAppURL(this.props.error.url).split('?')[0];\n      return __jsx(Redirect, {\n        to: `${redirect}${this.props.location.search}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 14\n        }\n      });\n    } else if (this.props.error && !this.props.connectionRefused) {\n      let FoundView;\n\n      if (this.props.error.status === undefined) {\n        // For some reason, while development and if CORS is in place and the\n        // requested resource is 404, it returns undefined as status, then the\n        // next statement will fail\n        FoundView = views.errorViews.corsError;\n      } else {\n        FoundView = views.errorViews[this.props.error.status.toString()];\n      }\n\n      if (!FoundView) {\n        FoundView = views.errorViews['404']; // default to 404\n      }\n\n      return __jsx(\"div\", {\n        id: \"view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, __jsx(FoundView, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    if (!this.props.content) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 14\n        }\n      });\n    }\n\n    const RenderedView = this.getViewByType() || this.getViewByLayout() || this.getViewDefault();\n    return __jsx(\"div\", {\n      id: \"view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, __jsx(ContentMetadataTags, {\n      content: this.props.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }), __jsx(BodyClass, {\n      className: RenderedView.displayName ? `view-${this.cleanViewName(RenderedView.displayName)}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }), __jsx(RenderedView, {\n      content: this.props.content,\n      location: this.props.location,\n      token: this.props.token,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }), config.settings.showTags && this.props.content.subjects && this.props.content.subjects.length > 0 && __jsx(Tags, {\n      tags: this.props.content.subjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }), this.props.content.allow_discussion && __jsx(Comments, {\n      pathname: this.props.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      inner: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 60\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\n_defineProperty(View, \"propTypes\", {\n  actions: PropTypes.shape({\n    object: PropTypes.arrayOf(PropTypes.object),\n    object_buttons: PropTypes.arrayOf(PropTypes.object),\n    user: PropTypes.arrayOf(PropTypes.object)\n  }),\n  listActions: PropTypes.func.isRequired,\n\n  /**\n   * Action to get the content\n   */\n  getContent: PropTypes.func.isRequired,\n\n  /**\n   * Pathname of the object\n   */\n  pathname: PropTypes.string.isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string,\n    pathname: PropTypes.string\n  }).isRequired,\n\n  /**\n   * Version id of the object\n   */\n  versionId: PropTypes.string,\n\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Layout of the object\n     */\n    layout: PropTypes.string,\n\n    /**\n     * Allow discussion of the object\n     */\n    allow_discussion: PropTypes.bool,\n\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n\n    /**\n     * Type of the object\n     */\n    '@type': PropTypes.string,\n\n    /**\n     * Subjects of the object\n     */\n    subjects: PropTypes.arrayOf(PropTypes.string),\n    is_folderish: PropTypes.bool\n  }),\n  error: PropTypes.shape({\n    /**\n     * Error type\n     */\n    status: PropTypes.number\n  })\n});\n\n_defineProperty(View, \"defaultProps\", {\n  actions: null,\n  content: null,\n  versionId: null,\n  error: null\n});\n\nexport default compose(injectIntl, connect((state, props) => ({\n  actions: state.actions.actions,\n  token: state.userSession.token,\n  content: state.content.data,\n  error: state.content.get.error,\n  apiError: state.apierror.error,\n  connectionRefused: state.apierror.connectionRefused,\n  pathname: props.location.pathname,\n  versionId: qs.parse(props.location.search) && qs.parse(props.location.search).version\n}), {\n  listActions,\n  getContent\n}))(View);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Redirect","Portal","injectIntl","qs","ContentMetadataTags","Comments","Tags","Toolbar","listActions","getContent","BodyClass","getBaseUrl","flattenToAppURL","getLayoutFieldname","config","View","hasObjectButtons","isClient","views","defaultView","contentTypesViews","props","content","layoutViews","dirtyDisplayName","replace","toLowerCase","componentDidMount","pathname","versionId","setState","UNSAFE_componentWillReceiveProps","nextProps","actions","object_buttons","objectButtons","length","render","error","code","redirect","url","split","location","search","connectionRefused","FoundView","status","undefined","errorViews","corsError","toString","RenderedView","getViewByType","getViewByLayout","getViewDefault","displayName","cleanViewName","token","history","settings","showTags","subjects","allow_discussion","state","document","getElementById","shape","object","arrayOf","user","func","isRequired","string","layout","bool","title","description","is_folderish","number","userSession","data","get","apiError","apierror","parse","version"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/theme/View/View.jsx"],"sourcesContent":["/**\n * View container.\n * @module components/theme/View/View\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport {\n  ContentMetadataTags,\n  Comments,\n  Tags,\n  Toolbar,\n} from '@plone/volto/components';\nimport { listActions, getContent } from '@plone/volto/actions';\nimport {\n  BodyClass,\n  getBaseUrl,\n  flattenToAppURL,\n  getLayoutFieldname,\n} from '@plone/volto/helpers';\n\nimport config from '@plone/volto/registry';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass View extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    listActions: PropTypes.func.isRequired,\n    /**\n     * Action to get the content\n     */\n    getContent: PropTypes.func.isRequired,\n    /**\n     * Pathname of the object\n     */\n    pathname: PropTypes.string.isRequired,\n    location: PropTypes.shape({\n      search: PropTypes.string,\n      pathname: PropTypes.string,\n    }).isRequired,\n    /**\n     * Version id of the object\n     */\n    versionId: PropTypes.string,\n    /**\n     * Content of the object\n     */\n    content: PropTypes.shape({\n      /**\n       * Layout of the object\n       */\n      layout: PropTypes.string,\n      /**\n       * Allow discussion of the object\n       */\n      allow_discussion: PropTypes.bool,\n      /**\n       * Title of the object\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the object\n       */\n      description: PropTypes.string,\n      /**\n       * Type of the object\n       */\n      '@type': PropTypes.string,\n      /**\n       * Subjects of the object\n       */\n      subjects: PropTypes.arrayOf(PropTypes.string),\n      is_folderish: PropTypes.bool,\n    }),\n    error: PropTypes.shape({\n      /**\n       * Error type\n       */\n      status: PropTypes.number,\n    }),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    content: null,\n    versionId: null,\n    error: null,\n  };\n\n  state = {\n    hasObjectButtons: null,\n    isClient: false,\n  };\n\n  componentDidMount() {\n    this.props.listActions(getBaseUrl(this.props.pathname));\n    this.props.getContent(\n      getBaseUrl(this.props.pathname),\n      this.props.versionId,\n    );\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n      this.props.getContent(\n        getBaseUrl(nextProps.pathname),\n        this.props.versionId,\n      );\n    }\n\n    if (nextProps.actions.object_buttons) {\n      const objectButtons = nextProps.actions.object_buttons;\n      this.setState({\n        hasObjectButtons: !!objectButtons.length,\n      });\n    }\n  }\n\n  /**\n   * Default fallback view\n   * @method getViewDefault\n   * @returns {string} Markup for component.\n   */\n  getViewDefault = () => config.views.defaultView;\n\n  /**\n   * Get view by content type\n   * @method getViewByType\n   * @returns {string} Markup for component.\n   */\n  getViewByType = () =>\n    config.views.contentTypesViews[this.props.content['@type']] || null;\n\n  /**\n   * Get view by content layout property\n   * @method getViewByLayout\n   * @returns {string} Markup for component.\n   */\n  getViewByLayout = () =>\n    config.views.layoutViews[\n      this.props.content[getLayoutFieldname(this.props.content)]\n    ] || null;\n\n  /**\n   * Cleans the component displayName (specially for connected components)\n   * which have the Connect(componentDisplayName)\n   * @method cleanViewName\n   * @param  {string} dirtyDisplayName The displayName\n   * @returns {string} Clean displayName (no Connect(...)).\n   */\n  cleanViewName = (dirtyDisplayName) =>\n    dirtyDisplayName\n      .replace('Connect(', '')\n      .replace('injectIntl(', '')\n      .replace(')', '')\n      .replace('connect(', '')\n      .toLowerCase();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { views } = config;\n    if (this.props.error && this.props.error.code === 301) {\n      const redirect = flattenToAppURL(this.props.error.url).split('?')[0];\n      return <Redirect to={`${redirect}${this.props.location.search}`} />;\n    } else if (this.props.error && !this.props.connectionRefused) {\n      let FoundView;\n      if (this.props.error.status === undefined) {\n        // For some reason, while development and if CORS is in place and the\n        // requested resource is 404, it returns undefined as status, then the\n        // next statement will fail\n        FoundView = views.errorViews.corsError;\n      } else {\n        FoundView = views.errorViews[this.props.error.status.toString()];\n      }\n      if (!FoundView) {\n        FoundView = views.errorViews['404']; // default to 404\n      }\n      return (\n        <div id=\"view\">\n          <FoundView {...this.props} />\n        </div>\n      );\n    }\n    if (!this.props.content) {\n      return <span />;\n    }\n    const RenderedView =\n      this.getViewByType() || this.getViewByLayout() || this.getViewDefault();\n\n    return (\n      <div id=\"view\">\n        <ContentMetadataTags content={this.props.content} />\n        {/* Body class if displayName in component is set */}\n        <BodyClass\n          className={\n            RenderedView.displayName\n              ? `view-${this.cleanViewName(RenderedView.displayName)}`\n              : null\n          }\n        />\n        <RenderedView\n          content={this.props.content}\n          location={this.props.location}\n          token={this.props.token}\n          history={this.props.history}\n        />\n        {config.settings.showTags &&\n          this.props.content.subjects &&\n          this.props.content.subjects.length > 0 && (\n            <Tags tags={this.props.content.subjects} />\n          )}\n        {/* Add opt-in social sharing if required, disabled by default */}\n        {/* In the future this might be parameterized from the app config */}\n        {/* <SocialSharing\n          url={typeof window === 'undefined' ? '' : window.location.href}\n          title={this.props.content.title}\n          description={this.props.content.description || ''}\n        /> */}\n        {this.props.content.allow_discussion && (\n          <Comments pathname={this.props.pathname} />\n        )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar pathname={this.props.pathname} inner={<span />} />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      token: state.userSession.token,\n      content: state.content.data,\n      error: state.content.get.error,\n      apiError: state.apierror.error,\n      connectionRefused: state.apierror.connectionRefused,\n      pathname: props.location.pathname,\n      versionId:\n        qs.parse(props.location.search) &&\n        qs.parse(props.location.search).version,\n    }),\n    {\n      listActions,\n      getContent,\n    },\n  ),\n)(View);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}