{"ast":null,"code":"import { nestContent } from '@plone/volto/helpers';\nimport { UPLOAD_CONTENT } from '@plone/volto-slate/constants'; // TODO: the PR has been merged into Volto, so this should be cleaned up\n\n/**\n * @summary Upload content function.\n *\n * @description A custom version of Volto's `createContent` that can take an\n * `origin` block ID. There is an issue on making this a builtin variant of the\n * Volto's `createContent` action: https://github.com/plone/volto/issues/1654.\n *\n * @param {string} url Parent URL.\n * @param {Object|Array} content Content data.\n * @param {string} origin The ID of the block into which the content should be\n * uploaded.\n *\n * @todo Clarify if the parameter `origin` is optional or remove this TODO.\n *\n * @returns {Object} Upload content action.\n */\n\nexport function uploadContent(url, content, origin) {\n  return {\n    type: UPLOAD_CONTENT,\n    origin,\n    request: Array.isArray(content) ? content.map(item => ({\n      op: 'post',\n      path: url,\n      data: item\n    })) : {\n      op: 'post',\n      path: url,\n      data: nestContent(content)\n    }\n  };\n}","map":{"version":3,"names":["nestContent","UPLOAD_CONTENT","uploadContent","url","content","origin","type","request","Array","isArray","map","item","op","path","data"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/actions/content.js"],"sourcesContent":["import { nestContent } from '@plone/volto/helpers';\nimport { UPLOAD_CONTENT } from '@plone/volto-slate/constants';\n\n// TODO: the PR has been merged into Volto, so this should be cleaned up\n\n/**\n * @summary Upload content function.\n *\n * @description A custom version of Volto's `createContent` that can take an\n * `origin` block ID. There is an issue on making this a builtin variant of the\n * Volto's `createContent` action: https://github.com/plone/volto/issues/1654.\n *\n * @param {string} url Parent URL.\n * @param {Object|Array} content Content data.\n * @param {string} origin The ID of the block into which the content should be\n * uploaded.\n *\n * @todo Clarify if the parameter `origin` is optional or remove this TODO.\n *\n * @returns {Object} Upload content action.\n */\nexport function uploadContent(url, content, origin) {\n  return {\n    type: UPLOAD_CONTENT,\n    origin,\n    request: Array.isArray(content)\n      ? content.map((item) => ({ op: 'post', path: url, data: item }))\n      : { op: 'post', path: url, data: nestContent(content) },\n  };\n}\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,cAAT,QAA+B,8BAA/B,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,OAA5B,EAAqCC,MAArC,EAA6C;EAClD,OAAO;IACLC,IAAI,EAAEL,cADD;IAELI,MAFK;IAGLE,OAAO,EAAEC,KAAK,CAACC,OAAN,CAAcL,OAAd,IACLA,OAAO,CAACM,GAAR,CAAaC,IAAD,KAAW;MAAEC,EAAE,EAAE,MAAN;MAAcC,IAAI,EAAEV,GAApB;MAAyBW,IAAI,EAAEH;IAA/B,CAAX,CAAZ,CADK,GAEL;MAAEC,EAAE,EAAE,MAAN;MAAcC,IAAI,EAAEV,GAApB;MAAyBW,IAAI,EAAEd,WAAW,CAACI,OAAD;IAA1C;EALC,CAAP;AAOD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}