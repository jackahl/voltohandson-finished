{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Block/Settings.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport BlockDataForm from '@plone/volto/components/manage/Form/BlockDataForm';\n\nconst Settings = _ref => {\n  let {\n    data,\n    block,\n    onChangeBlock,\n    schema\n  } = _ref;\n  return __jsx(BlockDataForm, {\n    schema: schema,\n    title: schema.title,\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    formData: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  });\n};\n\n_c = Settings;\nSettings.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default _c2 = injectIntl(Settings);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Settings\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","injectIntl","BlockDataForm","Settings","data","block","onChangeBlock","schema","title","id","value","propTypes","objectOf","any","isRequired","string","func"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Block/Settings.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport BlockDataForm from '@plone/volto/components/manage/Form/BlockDataForm';\n\nconst Settings = ({ data, block, onChangeBlock, schema }) => {\n  return (\n    <BlockDataForm\n      schema={schema}\n      title={schema.title}\n      onChangeField={(id, value) => {\n        onChangeBlock(block, {\n          ...data,\n          [id]: value,\n        });\n      }}\n      formData={data}\n    />\n  );\n};\n\nSettings.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default injectIntl(Settings);\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,aAAP,MAA0B,mDAA1B;;AAEA,MAAMC,QAAQ,GAAG,QAA4C;EAAA,IAA3C;IAAEC,IAAF;IAAQC,KAAR;IAAeC,aAAf;IAA8BC;EAA9B,CAA2C;EAC3D,OACE,MAAC,aAAD;IACE,MAAM,EAAEA,MADV;IAEE,KAAK,EAAEA,MAAM,CAACC,KAFhB;IAGE,aAAa,EAAE,CAACC,EAAD,EAAKC,KAAL,KAAe;MAC5BJ,aAAa,CAACD,KAAD,kCACRD,IADQ;QAEX,CAACK,EAAD,GAAMC;MAFK,GAAb;IAID,CARH;IASE,QAAQ,EAAEN,IATZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AAaD,CAdD;;KAAMD,Q;AAgBNA,QAAQ,CAACQ,SAAT,GAAqB;EACnBP,IAAI,EAAEJ,SAAS,CAACY,QAAV,CAAmBZ,SAAS,CAACa,GAA7B,EAAkCC,UADrB;EAEnBT,KAAK,EAAEL,SAAS,CAACe,MAAV,CAAiBD,UAFL;EAGnBR,aAAa,EAAEN,SAAS,CAACgB,IAAV,CAAeF,UAHX;EAInBP,MAAM,EAAEP,SAAS,CAACY,QAAV,CAAmBZ,SAAS,CAACa,GAA7B,EAAkCC;AAJvB,CAArB;AAOA,qBAAeb,UAAU,CAACE,QAAD,CAAzB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}