{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _join from \"lodash/join\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowserBody.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Input, Segment, Breadcrumb } from 'semantic-ui-react';\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport { searchContent } from '@plone/volto/actions/search/search';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport searchSVG from '@plone/volto/icons/zoom.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\nimport ObjectBrowserNav from '@plone/volto/components/manage/Sidebar/ObjectBrowserNav';\nconst messages = defineMessages({\n  SearchInputPlaceholder: {\n    \"id\": \"Search content\",\n    \"defaultMessage\": \"Search content\"\n  },\n  SelectedItems: {\n    \"id\": \"Selected items\",\n    \"defaultMessage\": \"Selected items\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  search: {\n    \"id\": \"Search SVG\",\n    \"defaultMessage\": \"Search SVG\"\n  },\n  of: {\n    \"id\": \"Selected items - x of y\",\n    \"defaultMessage\": \"of\"\n  }\n});\n\nfunction getParentURL(url) {\n  return flattenToAppURL(`${_join(url.split('/').slice(0, -1), '/')}`) || '/';\n}\n/**\n * ObjectBrowserBody container class.\n * @class ObjectBrowserBody\n * @extends Component\n */\n\n\nclass ObjectBrowserBody extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    var _this$props$data, _this$props$data2, _this$props$data3, _this$props$data4;\n\n    super(props);\n\n    _defineProperty(this, \"initialSearch\", mode => {\n      const currentSelected = mode === 'multiple' ? '' : mode === 'image' ? this.state.selectedImage : this.state.selectedHref;\n\n      if (currentSelected && isInternalURL(currentSelected)) {\n        this.props.searchContent(getParentURL(currentSelected), {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000\n        }, `${this.props.block}-${mode}`);\n      } else {\n        this.props.searchContent(this.state.currentFolder, {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000\n        }, `${this.props.block}-${mode}`);\n      }\n    });\n\n    _defineProperty(this, \"navigateTo\", id => {\n      this.props.searchContent(id, {\n        'path.depth': 1,\n        sort_on: 'getObjPositionInParent',\n        metadata_fields: '_all',\n        b_size: 1000\n      }, `${this.props.block}-${this.props.mode}`);\n      const parent = `${_join(id.split('/').slice(0, -1), '/')}` || '/';\n      this.setState(() => ({\n        parentFolder: parent,\n        currentFolder: id || '/'\n      }));\n    });\n\n    _defineProperty(this, \"toggleSearchInput\", () => this.setState(prevState => ({\n      showSearchInput: !prevState.showSearchInput\n    }), () => {\n      var _this$searchInputRef;\n\n      if ((_this$searchInputRef = this.searchInputRef) !== null && _this$searchInputRef !== void 0 && _this$searchInputRef.current) this.searchInputRef.current.focus();\n    }));\n\n    _defineProperty(this, \"onSearch\", e => {\n      const text = flattenToAppURL(e.target.value);\n\n      if (text.startsWith('/')) {\n        this.setState({\n          currentFolder: text\n        });\n        this.props.searchContent(text, {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all'\n        }, `${this.props.block}-${this.props.mode}`);\n      } else {\n        text.length > 2 ? this.props.searchContent('/', {\n          SearchableText: `${text}*`,\n          metadata_fields: '_all'\n        }, `${this.props.block}-${this.props.mode}`) : this.props.searchContent('/', {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all'\n        }, `${this.props.block}-${this.props.mode}`);\n      }\n    });\n\n    _defineProperty(this, \"onSelectItem\", item => {\n      const url = item['@id'];\n      const {\n        block,\n        data,\n        mode,\n        dataName,\n        onChangeBlock\n      } = this.props;\n\n      const updateState = mode => {\n        switch (mode) {\n          case 'image':\n            this.setState({\n              selectedImage: url,\n              currentImageFolder: getParentURL(url)\n            });\n            break;\n\n          case 'link':\n            this.setState({\n              selectedHref: url,\n              currentLinkFolder: getParentURL(url)\n            });\n            break;\n\n          default:\n            break;\n        }\n      };\n\n      if (dataName) {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          [dataName]: url\n        }));\n      } else if (this.props.onSelectItem) {\n        this.props.onSelectItem(url, item);\n      } else if (mode === 'image') {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          url: flattenToAppURL(item.getURL),\n          alt: ''\n        }));\n      } else if (mode === 'link') {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          href: flattenToAppURL(url)\n        }));\n      }\n\n      updateState(mode);\n    });\n\n    _defineProperty(this, \"onChangeBlockData\", (key, value) => {\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        [key]: value\n      }));\n    });\n\n    _defineProperty(this, \"isSelectable\", item => {\n      return this.props.selectableTypes.length > 0 ? this.props.selectableTypes.indexOf(item['@type']) >= 0 : true;\n    });\n\n    _defineProperty(this, \"handleClickOnItem\", item => {\n      if (this.props.mode === 'image') {\n        if (item.is_folderish) {\n          this.navigateTo(item['@id']);\n        }\n\n        if (config.settings.imageObjects.includes(item['@type'])) {\n          this.onSelectItem(item);\n        }\n      } else {\n        if (this.isSelectable(item)) {\n          if (!this.props.maximumSelectionSize || this.props.mode === 'multiple' || !this.props.data || this.props.data.length < this.props.maximumSelectionSize) {\n            this.onSelectItem(item);\n            let length = this.props.data ? this.props.data.length : 0;\n            let stopSelecting = this.props.mode !== 'multiple' || this.props.maximumSelectionSize > 0 && length + 1 >= this.props.maximumSelectionSize;\n\n            if (stopSelecting) {\n              this.props.closeObjectBrowser();\n            }\n          } else {\n            this.props.closeObjectBrowser();\n          }\n        } else {\n          this.navigateTo(item['@id']);\n        }\n      }\n    });\n\n    _defineProperty(this, \"handleDoubleClickOnItem\", item => {\n      if (this.props.mode === 'image') {\n        if (item.is_folderish) {\n          this.navigateTo(item['@id']);\n        }\n\n        if (config.settings.imageObjects.includes(item['@type'])) {\n          this.onSelectItem(item);\n          this.props.closeObjectBrowser();\n        }\n      } else {\n        if (this.isSelectable(item)) {\n          if (this.props.data.length < this.props.maximumSelectionSize) {\n            this.onSelectItem(item);\n          }\n\n          this.props.closeObjectBrowser();\n        } else {\n          this.navigateTo(item['@id']);\n        }\n      }\n    });\n\n    this.state = {\n      currentFolder: this.props.mode === 'multiple' ? '/' : this.props.contextURL || '/',\n      currentImageFolder: this.props.mode === 'multiple' ? '/' : this.props.mode === 'image' && (_this$props$data = this.props.data) !== null && _this$props$data !== void 0 && _this$props$data.url ? getParentURL(this.props.data.url) : '/',\n      currentLinkFolder: this.props.mode === 'multiple' ? '/' : this.props.mode === 'link' && (_this$props$data2 = this.props.data) !== null && _this$props$data2 !== void 0 && _this$props$data2.href ? getParentURL(this.props.data.href) : '/',\n      parentFolder: '',\n      selectedImage: this.props.mode === 'multiple' ? '' : this.props.mode === 'image' && (_this$props$data3 = this.props.data) !== null && _this$props$data3 !== void 0 && _this$props$data3.url ? flattenToAppURL(this.props.data.url) : '',\n      selectedHref: this.props.mode === 'multiple' ? '' : this.props.mode === 'link' && (_this$props$data4 = this.props.data) !== null && _this$props$data4 !== void 0 && _this$props$data4.href ? flattenToAppURL(this.props.data.href) : '',\n      showSearchInput: false\n    };\n    this.searchInputRef = /*#__PURE__*/React.createRef();\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.initialSearch(this.props.mode);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$data5;\n\n    return __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      className: \"header pulled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"vertical divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }\n    }), this.state.currentFolder === '/' ? __jsx(React.Fragment, null, this.props.mode === 'image' ? __jsx(Icon, {\n      name: folderSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    }) : __jsx(Icon, {\n      name: linkSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    })) : __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.back),\n      onClick: () => this.navigateTo(this.state.parentFolder),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: backSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 15\n      }\n    })), this.state.showSearchInput ? __jsx(Input, {\n      className: \"search\",\n      ref: this.searchInputRef,\n      onChange: this.onSearch,\n      placeholder: this.props.intl.formatMessage(messages.SearchInputPlaceholder),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }) : this.props.mode === 'image' ? __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Choose Image\",\n      defaultMessage: \"Choose Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    })) : __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Choose Target\",\n      defaultMessage: \"Choose Target\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    })), __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.search),\n      onClick: this.toggleSearchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: searchSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 13\n      }\n    })), __jsx(\"button\", {\n      className: \"clearSVG\",\n      onClick: this.props.closeObjectBrowser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }\n    }))), __jsx(Segment, {\n      secondary: true,\n      className: \"breadcrumbs\",\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }\n    }, __jsx(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }\n    }, this.state.currentFolder !== '/' ? this.state.currentFolder.split('/').map((item, index, items) => {\n      return __jsx(React.Fragment, {\n        key: `divider-${item}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 19\n        }\n      }, index === 0 ? __jsx(Breadcrumb.Section, {\n        onClick: () => this.navigateTo('/'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 23\n        }\n      }, __jsx(Icon, {\n        className: \"home-icon\",\n        name: homeSVG,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }\n      })) : __jsx(React.Fragment, null, __jsx(Breadcrumb.Divider, {\n        key: `divider-${item.url}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 25\n        }\n      }), __jsx(Breadcrumb.Section, {\n        onClick: () => this.navigateTo(items.slice(0, index + 1).join('/')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }\n      }, item)));\n    }) : __jsx(Breadcrumb.Section, {\n      onClick: () => this.navigateTo('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      className: \"home-icon\",\n      name: homeSVG,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }\n    })))), this.props.mode === 'multiple' && __jsx(Segment, {\n      className: \"infos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }\n    }, this.props.intl.formatMessage(messages.SelectedItems), \":\", ' ', (_this$props$data5 = this.props.data) === null || _this$props$data5 === void 0 ? void 0 : _this$props$data5.length, this.props.maximumSelectionSize > 0 && __jsx(React.Fragment, null, ' ', this.props.intl.formatMessage(messages.of), ' ', this.props.maximumSelectionSize)), __jsx(ObjectBrowserNav, {\n      currentSearchResults: this.props.searchSubrequests[`${this.props.block}-${this.props.mode}`],\n      selected: this.props.mode === 'multiple' ? this.props.data : [{\n        '@id': this.props.mode === 'image' ? this.state.selectedImage : this.state.selectedHref\n      }],\n      handleClickOnItem: this.handleClickOnItem,\n      handleDoubleClickOnItem: this.handleDoubleClickOnItem,\n      mode: this.props.mode,\n      navigateTo: this.navigateTo,\n      isSelectable: this.isSelectable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n_defineProperty(ObjectBrowserBody, \"propTypes\", {\n  block: PropTypes.string.isRequired,\n  mode: PropTypes.string.isRequired,\n  data: PropTypes.any.isRequired,\n  searchSubrequests: PropTypes.objectOf(PropTypes.any).isRequired,\n  searchContent: PropTypes.func.isRequired,\n  closeObjectBrowser: PropTypes.func.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onSelectItem: PropTypes.func,\n  dataName: PropTypes.string,\n  maximumSelectionSize: PropTypes.number,\n  contextURL: PropTypes.string\n});\n\n_defineProperty(ObjectBrowserBody, \"defaultProps\", {\n  image: '',\n  href: '',\n  onSelectItem: null,\n  dataName: null,\n  selectableTypes: [],\n  maximumSelectionSize: null\n});\n\nexport default compose(injectIntl, connect(state => ({\n  searchSubrequests: state.search.subrequests\n}), {\n  searchContent\n}))(ObjectBrowserBody);","map":{"version":3,"names":["React","Component","PropTypes","compose","connect","defineMessages","FormattedMessage","injectIntl","Input","Segment","Breadcrumb","searchContent","Icon","flattenToAppURL","isInternalURL","config","backSVG","folderSVG","clearSVG","searchSVG","linkSVG","homeSVG","ObjectBrowserNav","messages","SearchInputPlaceholder","SelectedItems","back","search","of","getParentURL","url","split","slice","ObjectBrowserBody","constructor","props","mode","currentSelected","state","selectedImage","selectedHref","sort_on","metadata_fields","b_size","block","currentFolder","id","parent","setState","parentFolder","prevState","showSearchInput","searchInputRef","current","focus","e","text","target","value","startsWith","length","SearchableText","item","data","dataName","onChangeBlock","updateState","currentImageFolder","currentLinkFolder","onSelectItem","getURL","alt","href","key","selectableTypes","indexOf","is_folderish","navigateTo","settings","imageObjects","includes","isSelectable","maximumSelectionSize","stopSelecting","closeObjectBrowser","contextURL","createRef","componentDidMount","initialSearch","render","intl","formatMessage","onSearch","toggleSearchInput","map","index","items","join","searchSubrequests","handleClickOnItem","handleDoubleClickOnItem","string","isRequired","any","objectOf","func","number","image","subrequests"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowserBody.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Input, Segment, Breadcrumb } from 'semantic-ui-react';\n\nimport { join } from 'lodash';\n\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport { searchContent } from '@plone/volto/actions/search/search';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport searchSVG from '@plone/volto/icons/zoom.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nimport ObjectBrowserNav from '@plone/volto/components/manage/Sidebar/ObjectBrowserNav';\n\nconst messages = defineMessages({\n  SearchInputPlaceholder: {\n    id: 'Search content',\n    defaultMessage: 'Search content',\n  },\n  SelectedItems: {\n    id: 'Selected items',\n    defaultMessage: 'Selected items',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  search: {\n    id: 'Search SVG',\n    defaultMessage: 'Search SVG',\n  },\n  of: { id: 'Selected items - x of y', defaultMessage: 'of' },\n});\n\nfunction getParentURL(url) {\n  return flattenToAppURL(`${join(url.split('/').slice(0, -1), '/')}`) || '/';\n}\n\n/**\n * ObjectBrowserBody container class.\n * @class ObjectBrowserBody\n * @extends Component\n */\nclass ObjectBrowserBody extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    block: PropTypes.string.isRequired,\n    mode: PropTypes.string.isRequired,\n    data: PropTypes.any.isRequired,\n    searchSubrequests: PropTypes.objectOf(PropTypes.any).isRequired,\n    searchContent: PropTypes.func.isRequired,\n    closeObjectBrowser: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectItem: PropTypes.func,\n    dataName: PropTypes.string,\n    maximumSelectionSize: PropTypes.number,\n    contextURL: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    image: '',\n    href: '',\n    onSelectItem: null,\n    dataName: null,\n    selectableTypes: [],\n    maximumSelectionSize: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentFolder:\n        this.props.mode === 'multiple' ? '/' : this.props.contextURL || '/',\n      currentImageFolder:\n        this.props.mode === 'multiple'\n          ? '/'\n          : this.props.mode === 'image' && this.props.data?.url\n          ? getParentURL(this.props.data.url)\n          : '/',\n      currentLinkFolder:\n        this.props.mode === 'multiple'\n          ? '/'\n          : this.props.mode === 'link' && this.props.data?.href\n          ? getParentURL(this.props.data.href)\n          : '/',\n      parentFolder: '',\n      selectedImage:\n        this.props.mode === 'multiple'\n          ? ''\n          : this.props.mode === 'image' && this.props.data?.url\n          ? flattenToAppURL(this.props.data.url)\n          : '',\n      selectedHref:\n        this.props.mode === 'multiple'\n          ? ''\n          : this.props.mode === 'link' && this.props.data?.href\n          ? flattenToAppURL(this.props.data.href)\n          : '',\n      showSearchInput: false,\n    };\n    this.searchInputRef = React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.initialSearch(this.props.mode);\n  }\n\n  initialSearch = (mode) => {\n    const currentSelected =\n      mode === 'multiple'\n        ? ''\n        : mode === 'image'\n        ? this.state.selectedImage\n        : this.state.selectedHref;\n    if (currentSelected && isInternalURL(currentSelected)) {\n      this.props.searchContent(\n        getParentURL(currentSelected),\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000,\n        },\n        `${this.props.block}-${mode}`,\n      );\n    } else {\n      this.props.searchContent(\n        this.state.currentFolder,\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000,\n        },\n        `${this.props.block}-${mode}`,\n      );\n    }\n  };\n\n  navigateTo = (id) => {\n    this.props.searchContent(\n      id,\n      {\n        'path.depth': 1,\n        sort_on: 'getObjPositionInParent',\n        metadata_fields: '_all',\n        b_size: 1000,\n      },\n      `${this.props.block}-${this.props.mode}`,\n    );\n    const parent = `${join(id.split('/').slice(0, -1), '/')}` || '/';\n    this.setState(() => ({\n      parentFolder: parent,\n      currentFolder: id || '/',\n    }));\n  };\n\n  toggleSearchInput = () =>\n    this.setState(\n      (prevState) => ({\n        showSearchInput: !prevState.showSearchInput,\n      }),\n      () => {\n        if (this.searchInputRef?.current) this.searchInputRef.current.focus();\n      },\n    );\n\n  onSearch = (e) => {\n    const text = flattenToAppURL(e.target.value);\n    if (text.startsWith('/')) {\n      this.setState({ currentFolder: text });\n      this.props.searchContent(\n        text,\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n        },\n        `${this.props.block}-${this.props.mode}`,\n      );\n    } else {\n      text.length > 2\n        ? this.props.searchContent(\n            '/',\n            {\n              SearchableText: `${text}*`,\n              metadata_fields: '_all',\n            },\n            `${this.props.block}-${this.props.mode}`,\n          )\n        : this.props.searchContent(\n            '/',\n            {\n              'path.depth': 1,\n              sort_on: 'getObjPositionInParent',\n              metadata_fields: '_all',\n            },\n            `${this.props.block}-${this.props.mode}`,\n          );\n    }\n  };\n\n  onSelectItem = (item) => {\n    const url = item['@id'];\n    const { block, data, mode, dataName, onChangeBlock } = this.props;\n\n    const updateState = (mode) => {\n      switch (mode) {\n        case 'image':\n          this.setState({\n            selectedImage: url,\n            currentImageFolder: getParentURL(url),\n          });\n          break;\n        case 'link':\n          this.setState({\n            selectedHref: url,\n            currentLinkFolder: getParentURL(url),\n          });\n          break;\n        default:\n          break;\n      }\n    };\n\n    if (dataName) {\n      onChangeBlock(block, {\n        ...data,\n        [dataName]: url,\n      });\n    } else if (this.props.onSelectItem) {\n      this.props.onSelectItem(url, item);\n    } else if (mode === 'image') {\n      onChangeBlock(block, {\n        ...data,\n        url: flattenToAppURL(item.getURL),\n        alt: '',\n      });\n    } else if (mode === 'link') {\n      onChangeBlock(block, {\n        ...data,\n        href: flattenToAppURL(url),\n      });\n    }\n    updateState(mode);\n  };\n\n  onChangeBlockData = (key, value) => {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      [key]: value,\n    });\n  };\n\n  isSelectable = (item) => {\n    return this.props.selectableTypes.length > 0\n      ? this.props.selectableTypes.indexOf(item['@type']) >= 0\n      : true;\n  };\n\n  handleClickOnItem = (item) => {\n    if (this.props.mode === 'image') {\n      if (item.is_folderish) {\n        this.navigateTo(item['@id']);\n      }\n      if (config.settings.imageObjects.includes(item['@type'])) {\n        this.onSelectItem(item);\n      }\n    } else {\n      if (this.isSelectable(item)) {\n        if (\n          !this.props.maximumSelectionSize ||\n          this.props.mode === 'multiple' ||\n          !this.props.data ||\n          this.props.data.length < this.props.maximumSelectionSize\n        ) {\n          this.onSelectItem(item);\n          let length = this.props.data ? this.props.data.length : 0;\n\n          let stopSelecting =\n            this.props.mode !== 'multiple' ||\n            (this.props.maximumSelectionSize > 0 &&\n              length + 1 >= this.props.maximumSelectionSize);\n\n          if (stopSelecting) {\n            this.props.closeObjectBrowser();\n          }\n        } else {\n          this.props.closeObjectBrowser();\n        }\n      } else {\n        this.navigateTo(item['@id']);\n      }\n    }\n  };\n\n  handleDoubleClickOnItem = (item) => {\n    if (this.props.mode === 'image') {\n      if (item.is_folderish) {\n        this.navigateTo(item['@id']);\n      }\n      if (config.settings.imageObjects.includes(item['@type'])) {\n        this.onSelectItem(item);\n        this.props.closeObjectBrowser();\n      }\n    } else {\n      if (this.isSelectable(item)) {\n        if (this.props.data.length < this.props.maximumSelectionSize) {\n          this.onSelectItem(item);\n        }\n        this.props.closeObjectBrowser();\n      } else {\n        this.navigateTo(item['@id']);\n      }\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Segment.Group raised>\n        <header className=\"header pulled\">\n          <div className=\"vertical divider\" />\n          {this.state.currentFolder === '/' ? (\n            <>\n              {this.props.mode === 'image' ? (\n                <Icon name={folderSVG} size=\"24px\" />\n              ) : (\n                <Icon name={linkSVG} size=\"24px\" />\n              )}\n            </>\n          ) : (\n            <button\n              aria-label={this.props.intl.formatMessage(messages.back)}\n              onClick={() => this.navigateTo(this.state.parentFolder)}\n            >\n              <Icon name={backSVG} size=\"24px\" />\n            </button>\n          )}\n          {this.state.showSearchInput ? (\n            <Input\n              className=\"search\"\n              ref={this.searchInputRef}\n              onChange={this.onSearch}\n              placeholder={this.props.intl.formatMessage(\n                messages.SearchInputPlaceholder,\n              )}\n            />\n          ) : this.props.mode === 'image' ? (\n            <h2>\n              <FormattedMessage\n                id=\"Choose Image\"\n                defaultMessage=\"Choose Image\"\n              />\n            </h2>\n          ) : (\n            <h2>\n              <FormattedMessage\n                id=\"Choose Target\"\n                defaultMessage=\"Choose Target\"\n              />\n            </h2>\n          )}\n\n          <button\n            aria-label={this.props.intl.formatMessage(messages.search)}\n            onClick={this.toggleSearchInput}\n          >\n            <Icon name={searchSVG} size=\"24px\" />\n          </button>\n          <button className=\"clearSVG\" onClick={this.props.closeObjectBrowser}>\n            <Icon name={clearSVG} size=\"24px\" />\n          </button>\n        </header>\n        <Segment secondary className=\"breadcrumbs\" vertical>\n          <Breadcrumb>\n            {this.state.currentFolder !== '/' ? (\n              this.state.currentFolder.split('/').map((item, index, items) => {\n                return (\n                  <React.Fragment key={`divider-${item}-${index}`}>\n                    {index === 0 ? (\n                      <Breadcrumb.Section onClick={() => this.navigateTo('/')}>\n                        <Icon\n                          className=\"home-icon\"\n                          name={homeSVG}\n                          size=\"18px\"\n                        />\n                      </Breadcrumb.Section>\n                    ) : (\n                      <>\n                        <Breadcrumb.Divider key={`divider-${item.url}`} />\n                        <Breadcrumb.Section\n                          onClick={() =>\n                            this.navigateTo(items.slice(0, index + 1).join('/'))\n                          }\n                        >\n                          {item}\n                        </Breadcrumb.Section>\n                      </>\n                    )}\n                  </React.Fragment>\n                );\n              })\n            ) : (\n              <Breadcrumb.Section onClick={() => this.navigateTo('/')}>\n                <Icon className=\"home-icon\" name={homeSVG} size=\"18px\" />\n              </Breadcrumb.Section>\n            )}\n          </Breadcrumb>\n        </Segment>\n        {this.props.mode === 'multiple' && (\n          <Segment className=\"infos\">\n            {this.props.intl.formatMessage(messages.SelectedItems)}:{' '}\n            {this.props.data?.length}\n            {this.props.maximumSelectionSize > 0 && (\n              <>\n                {' '}\n                {this.props.intl.formatMessage(messages.of)}{' '}\n                {this.props.maximumSelectionSize}\n              </>\n            )}\n          </Segment>\n        )}\n        <ObjectBrowserNav\n          currentSearchResults={\n            this.props.searchSubrequests[\n              `${this.props.block}-${this.props.mode}`\n            ]\n          }\n          selected={\n            this.props.mode === 'multiple'\n              ? this.props.data\n              : [\n                  {\n                    '@id':\n                      this.props.mode === 'image'\n                        ? this.state.selectedImage\n                        : this.state.selectedHref,\n                  },\n                ]\n          }\n          handleClickOnItem={this.handleClickOnItem}\n          handleDoubleClickOnItem={this.handleDoubleClickOnItem}\n          mode={this.props.mode}\n          navigateTo={this.navigateTo}\n          isSelectable={this.isSelectable}\n        />\n      </Segment.Group>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      searchSubrequests: state.search.subrequests,\n    }),\n    { searchContent },\n  ),\n)(ObjectBrowserBody);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Search content","defaultMessage":"Search content"},{"id":"Selected items","defaultMessage":"Selected items"},{"id":"Back","defaultMessage":"Back"},{"id":"Search SVG","defaultMessage":"Search SVG"},{"id":"Selected items - x of y","defaultMessage":"of"},{"id":"Choose Image","defaultMessage":"Choose Image"},{"id":"Choose Target","defaultMessage":"Choose Target"}]}},"sourceType":"module"}