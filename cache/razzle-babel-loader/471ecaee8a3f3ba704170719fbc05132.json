{"ast":null,"code":"import _extends from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Link/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages } from 'react-intl'; // , defineMessages\n\nimport { ReactEditor, useSlate } from 'slate-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AddLinkForm from '@plone/volto/components/manage/AnchorPlugin/components/LinkButton/AddLinkForm';\nimport { _insertElement, _unwrapElement, _isActiveElement, _getActiveElement } from '@plone/volto-slate/elementEditor/utils';\nimport { SIMPLELINK, LINK } from '@plone/volto-slate/constants';\nimport { LinkElement } from './render';\nimport { simpleLinkDeserializer, withSimpleLink } from './extensions';\nimport { setPluginOptions } from '@plone/volto-slate/actions';\nimport { ToolbarButton as UIToolbarButton, PositionedToolbar } from '@plone/volto-slate/editor/ui';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport unlinkSVG from '@plone/volto/icons/unlink.svg';\nconst messages = defineMessages({\n  add: {\n    \"id\": \"Add link\",\n    \"defaultMessage\": \"Add link\"\n  },\n  edit: {\n    \"id\": \"Edit link\",\n    \"defaultMessage\": \"Edit link\"\n  }\n});\n\nfunction getPositionStyle() {\n  const domSelection = window.getSelection();\n\n  if (domSelection.rangeCount < 1) {\n    return {};\n  }\n\n  const domRange = domSelection.getRangeAt(0);\n  const rect = domRange.getBoundingClientRect();\n  return {\n    style: {\n      opacity: 1,\n      top: rect.top + window.pageYOffset - 6,\n      left: rect.left + window.pageXOffset + rect.width / 2\n    }\n  };\n}\n\nconst LinkEditor = props => {\n  _s();\n\n  var _node$data;\n\n  const {\n    editor,\n    pluginId,\n    getActiveElement,\n    unwrapElement,\n    insertElement\n  } = props;\n  const pid = `${editor.uid}-${pluginId}`;\n  const showEditor = useSelector(state => {\n    var _state$slate_plugins, _state$slate_plugins$;\n\n    return (_state$slate_plugins = state['slate_plugins']) === null || _state$slate_plugins === void 0 ? void 0 : (_state$slate_plugins$ = _state$slate_plugins[pid]) === null || _state$slate_plugins$ === void 0 ? void 0 : _state$slate_plugins$.show_sidebar_editor;\n  });\n  const savedPosition = React.useRef();\n  const dispatch = useDispatch();\n  const active = getActiveElement(editor);\n  const [node] = active || [];\n\n  if (showEditor && !savedPosition.current) {\n    savedPosition.current = getPositionStyle();\n  }\n\n  return showEditor ? __jsx(PositionedToolbar, {\n    className: \"add-link\",\n    position: savedPosition.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(AddLinkForm, {\n    block: \"draft-js\",\n    placeholder: 'Add link',\n    data: {\n      url: (node === null || node === void 0 ? void 0 : (_node$data = node.data) === null || _node$data === void 0 ? void 0 : _node$data.url) || ''\n    },\n    theme: {},\n    onChangeValue: url => {\n      if (!active) {\n        if (!editor.selection) editor.selection = editor.savedSelection;\n        insertElement(editor, {\n          url\n        });\n      } else {\n        const selection = unwrapElement(editor);\n        editor.selection = selection;\n        insertElement(editor, {\n          url\n        });\n      }\n\n      ReactEditor.focus(editor);\n      dispatch(setPluginOptions(pid, {\n        show_sidebar_editor: false\n      }));\n      savedPosition.current = null;\n    },\n    onClear: () => {\n      // clear button was pressed in the link edit popup\n      const newSelection = JSON.parse(JSON.stringify(unwrapElement(editor)));\n      editor.selection = newSelection;\n      editor.savedSelection = newSelection;\n    },\n    onOverrideContent: c => {\n      dispatch(setPluginOptions(pid, {\n        show_sidebar_editor: false\n      }));\n      savedPosition.current = null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  })) : '';\n};\n\n_s(LinkEditor, \"DOag5F512jlkvCre9RpNOTqnzgM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LinkEditor;\nexport default (config => {\n  var _s2 = $RefreshSig$();\n\n  const {\n    slate\n  } = config.settings;\n  const PLUGINID = SIMPLELINK;\n  const linkBtnIndex = slate.toolbarButtons.findIndex(b => b === LINK);\n  slate.expandedToolbarButtons = slate.expandedToolbarButtons.filter(b => b !== LINK);\n\n  const insertElement = _insertElement(PLUGINID);\n\n  const getActiveElement = _getActiveElement(PLUGINID);\n\n  const isActiveElement = _isActiveElement(PLUGINID);\n\n  const unwrapElement = _unwrapElement(PLUGINID);\n\n  const ToolbarButton = props => {\n    _s2();\n\n    const dispatch = useDispatch();\n    const editor = useSlate();\n    const isElement = isActiveElement(editor);\n    return __jsx(UIToolbarButton, {\n      title: isElement ? messages.edit : messages.add,\n      icon: isElement ? unlinkSVG : linkSVG,\n      active: isElement,\n      onMouseDown: e => {\n        e.stopPropagation();\n        e.preventDefault();\n        const pid = `${editor.uid}-${PLUGINID}`;\n        editor.savedSelection = JSON.parse(JSON.stringify(editor.selection));\n        dispatch(setPluginOptions(pid, {\n          show_sidebar_editor: true\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    });\n  };\n\n  _s2(ToolbarButton, \"aAx7GXR7zpxEcsdQTzrRjyDVO9M=\", false, function () {\n    return [useDispatch, useSlate];\n  });\n\n  const pluginOptions = {\n    insertElement,\n    getActiveElement,\n    isActiveElement,\n    unwrapElement\n  };\n  slate.buttons[PLUGINID] = ToolbarButton;\n  slate.toolbarButtons[linkBtnIndex] = PLUGINID;\n  slate.htmlTagsToSlate.A = simpleLinkDeserializer;\n  slate.extensions.push(withSimpleLink);\n  slate.elements[PLUGINID] = LinkElement;\n  slate.nodeTypesToHighlight.push(PLUGINID);\n  slate.persistentHelpers.push(props => __jsx(LinkEditor, _extends({}, props, {\n    pluginId: PLUGINID\n  }, pluginOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  })));\n  return config;\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkEditor\");","map":{"version":3,"names":["React","defineMessages","ReactEditor","useSlate","useSelector","useDispatch","AddLinkForm","_insertElement","_unwrapElement","_isActiveElement","_getActiveElement","SIMPLELINK","LINK","LinkElement","simpleLinkDeserializer","withSimpleLink","setPluginOptions","ToolbarButton","UIToolbarButton","PositionedToolbar","linkSVG","unlinkSVG","messages","add","edit","getPositionStyle","domSelection","window","getSelection","rangeCount","domRange","getRangeAt","rect","getBoundingClientRect","style","opacity","top","pageYOffset","left","pageXOffset","width","LinkEditor","props","editor","pluginId","getActiveElement","unwrapElement","insertElement","pid","uid","showEditor","state","show_sidebar_editor","savedPosition","useRef","dispatch","active","node","current","url","data","selection","savedSelection","focus","newSelection","JSON","parse","stringify","c","config","slate","settings","PLUGINID","linkBtnIndex","toolbarButtons","findIndex","b","expandedToolbarButtons","filter","isActiveElement","isElement","e","stopPropagation","preventDefault","pluginOptions","buttons","htmlTagsToSlate","A","extensions","push","elements","nodeTypesToHighlight","persistentHelpers"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Link/index.js"],"sourcesContent":["import React from 'react';\nimport { defineMessages } from 'react-intl'; // , defineMessages\nimport { ReactEditor, useSlate } from 'slate-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AddLinkForm from '@plone/volto/components/manage/AnchorPlugin/components/LinkButton/AddLinkForm';\nimport {\n  _insertElement,\n  _unwrapElement,\n  _isActiveElement,\n  _getActiveElement,\n} from '@plone/volto-slate/elementEditor/utils';\nimport { SIMPLELINK, LINK } from '@plone/volto-slate/constants';\nimport { LinkElement } from './render';\nimport { simpleLinkDeserializer, withSimpleLink } from './extensions';\nimport { setPluginOptions } from '@plone/volto-slate/actions';\nimport {\n  ToolbarButton as UIToolbarButton,\n  PositionedToolbar,\n} from '@plone/volto-slate/editor/ui';\n\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport unlinkSVG from '@plone/volto/icons/unlink.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add link',\n    defaultMessage: 'Add link',\n  },\n  edit: {\n    id: 'Edit link',\n    defaultMessage: 'Edit link',\n  },\n});\n\nfunction getPositionStyle() {\n  const domSelection = window.getSelection();\n  if (domSelection.rangeCount < 1) {\n    return {};\n  }\n  const domRange = domSelection.getRangeAt(0);\n  const rect = domRange.getBoundingClientRect();\n\n  return {\n    style: {\n      opacity: 1,\n      top: rect.top + window.pageYOffset - 6,\n      left: rect.left + window.pageXOffset + rect.width / 2,\n    },\n  };\n}\n\nconst LinkEditor = (props) => {\n  const {\n    editor,\n    pluginId,\n    getActiveElement,\n    unwrapElement,\n    insertElement,\n  } = props;\n  const pid = `${editor.uid}-${pluginId}`;\n  const showEditor = useSelector((state) => {\n    return state['slate_plugins']?.[pid]?.show_sidebar_editor;\n  });\n  const savedPosition = React.useRef();\n\n  const dispatch = useDispatch();\n\n  const active = getActiveElement(editor);\n  const [node] = active || [];\n\n  if (showEditor && !savedPosition.current) {\n    savedPosition.current = getPositionStyle();\n  }\n\n  return showEditor ? (\n    <PositionedToolbar className=\"add-link\" position={savedPosition.current}>\n      <AddLinkForm\n        block=\"draft-js\"\n        placeholder={'Add link'}\n        data={{ url: node?.data?.url || '' }}\n        theme={{}}\n        onChangeValue={(url) => {\n          if (!active) {\n            if (!editor.selection) editor.selection = editor.savedSelection;\n            insertElement(editor, { url });\n          } else {\n            const selection = unwrapElement(editor);\n            editor.selection = selection;\n            insertElement(editor, { url });\n          }\n          ReactEditor.focus(editor);\n          dispatch(setPluginOptions(pid, { show_sidebar_editor: false }));\n          savedPosition.current = null;\n        }}\n        onClear={() => {\n          // clear button was pressed in the link edit popup\n          const newSelection = JSON.parse(\n            JSON.stringify(unwrapElement(editor)),\n          );\n          editor.selection = newSelection;\n          editor.savedSelection = newSelection;\n        }}\n        onOverrideContent={(c) => {\n          dispatch(setPluginOptions(pid, { show_sidebar_editor: false }));\n          savedPosition.current = null;\n        }}\n      />\n    </PositionedToolbar>\n  ) : (\n    ''\n  );\n};\n\nexport default (config) => {\n  const { slate } = config.settings;\n\n  const PLUGINID = SIMPLELINK;\n\n  const linkBtnIndex = slate.toolbarButtons.findIndex((b) => b === LINK);\n  slate.expandedToolbarButtons = slate.expandedToolbarButtons.filter(\n    (b) => b !== LINK,\n  );\n\n  const insertElement = _insertElement(PLUGINID);\n  const getActiveElement = _getActiveElement(PLUGINID);\n  const isActiveElement = _isActiveElement(PLUGINID);\n  const unwrapElement = _unwrapElement(PLUGINID);\n\n  const ToolbarButton = (props) => {\n    const dispatch = useDispatch();\n    const editor = useSlate();\n    const isElement = isActiveElement(editor);\n\n    return (\n      <UIToolbarButton\n        title={isElement ? messages.edit : messages.add}\n        icon={isElement ? unlinkSVG : linkSVG}\n        active={isElement}\n        onMouseDown={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n          const pid = `${editor.uid}-${PLUGINID}`;\n          editor.savedSelection = JSON.parse(JSON.stringify(editor.selection));\n          dispatch(setPluginOptions(pid, { show_sidebar_editor: true }));\n        }}\n      />\n    );\n  };\n\n  const pluginOptions = {\n    insertElement,\n    getActiveElement,\n    isActiveElement,\n    unwrapElement,\n  };\n\n  slate.buttons[PLUGINID] = ToolbarButton;\n  slate.toolbarButtons[linkBtnIndex] = PLUGINID;\n  slate.htmlTagsToSlate.A = simpleLinkDeserializer;\n  slate.extensions.push(withSimpleLink);\n  slate.elements[PLUGINID] = LinkElement;\n  slate.nodeTypesToHighlight.push(PLUGINID);\n  slate.persistentHelpers.push((props) => (\n    <LinkEditor {...props} pluginId={PLUGINID} {...pluginOptions} />\n  ));\n\n  return config;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add link","defaultMessage":"Add link"},{"id":"Edit link","defaultMessage":"Edit link"}]}},"sourceType":"module"}