{"ast":null,"code":"import _objectSpread from \"/home/jakob/workspace/training-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n/**\n * Types reducer.\n * @module reducers/types/types\n */\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n  types: []\n};\n/**\n * Types reducer.\n * @function types\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\n\nexport default function types() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case `${GET_TYPES}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loading: true,\n        loaded: false\n      });\n\n    case `${GET_TYPES}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loading: false,\n        loaded: true,\n        types: action.result\n      });\n\n    case `${GET_TYPES}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        loading: false,\n        loaded: false,\n        types: []\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_TYPES","initialState","error","loaded","loading","types","state","action","type","result"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/reducers/types/types.js"],"sourcesContent":["/**\n * Types reducer.\n * @module reducers/types/types\n */\n\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n  types: [],\n};\n\n/**\n * Types reducer.\n * @function types\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function types(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_TYPES}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n        loaded: false,\n      };\n    case `${GET_TYPES}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        loaded: true,\n        types: action.result,\n      };\n    case `${GET_TYPES}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n        loaded: false,\n        types: [],\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,oCAA1B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IADY;EAEnBC,MAAM,EAAE,KAFW;EAGnBC,OAAO,EAAE,KAHU;EAInBC,KAAK,EAAE;AAJY,CAArB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASA,KAAT,GAAkD;EAAA,IAAnCC,KAAmC,uEAA3BL,YAA2B;EAAA,IAAbM,MAAa,uEAAJ,EAAI;;EAC/D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAM,GAAER,SAAU,UAAlB;MACE,uCACKM,KADL;QAEEJ,KAAK,EAAE,IAFT;QAGEE,OAAO,EAAE,IAHX;QAIED,MAAM,EAAE;MAJV;;IAMF,KAAM,GAAEH,SAAU,UAAlB;MACE,uCACKM,KADL;QAEEJ,KAAK,EAAE,IAFT;QAGEE,OAAO,EAAE,KAHX;QAIED,MAAM,EAAE,IAJV;QAKEE,KAAK,EAAEE,MAAM,CAACE;MALhB;;IAOF,KAAM,GAAET,SAAU,OAAlB;MACE,uCACKM,KADL;QAEEJ,KAAK,EAAEK,MAAM,CAACL,KAFhB;QAGEE,OAAO,EAAE,KAHX;QAIED,MAAM,EAAE,KAJV;QAKEE,KAAK,EAAE;MALT;;IAOF;MACE,OAAOC,KAAP;EAzBJ;AA2BD"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}