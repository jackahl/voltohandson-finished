{"ast":null,"code":"import { Node } from 'slate';\nimport { _unwrapElement, _getActiveElement } from '@plone/volto-slate/elementEditor/utils';\nimport config from '@plone/volto/registry';\n/**\n * Handles empty string cases in the given `editor`.\n * It will unwrap empty strings for any major type (ex: a, mentions, footnote, zotero).\n * @param {Editor} editor\n * @param {Event} event\n */\n\nexport function unwrapEmptyString(props) {\n  const {\n    nodeTypesToHighlight\n  } = config.settings.slate;\n  const uniqueNodeTypesToHighligh = [...new Set(nodeTypesToHighlight)];\n\n  const getActiveElement = _getActiveElement(uniqueNodeTypesToHighligh);\n\n  const unwrapElement = _unwrapElement(uniqueNodeTypesToHighligh);\n\n  const {\n    editor\n  } = props;\n  const actEl = getActiveElement(editor);\n\n  if (actEl && Node.string(actEl[0]).length === 1) {\n    unwrapElement(editor);\n  }\n}","map":{"version":3,"names":["Node","_unwrapElement","_getActiveElement","config","unwrapEmptyString","props","nodeTypesToHighlight","settings","slate","uniqueNodeTypesToHighligh","Set","getActiveElement","unwrapElement","editor","actEl","string","length"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/blocks/Text/keyboard/unwrapEmptyString.js"],"sourcesContent":["import { Node } from 'slate';\nimport {\n  _unwrapElement,\n  _getActiveElement,\n} from '@plone/volto-slate/elementEditor/utils';\nimport config from '@plone/volto/registry';\n\n/**\n * Handles empty string cases in the given `editor`.\n * It will unwrap empty strings for any major type (ex: a, mentions, footnote, zotero).\n * @param {Editor} editor\n * @param {Event} event\n */\nexport function unwrapEmptyString(props) {\n  const { nodeTypesToHighlight } = config.settings.slate;\n  const uniqueNodeTypesToHighligh = [...new Set(nodeTypesToHighlight)];\n  const getActiveElement = _getActiveElement(uniqueNodeTypesToHighligh);\n  const unwrapElement = _unwrapElement(uniqueNodeTypesToHighligh);\n\n  const { editor } = props;\n  const actEl = getActiveElement(editor);\n\n  if (actEl && Node.string(actEl[0]).length === 1) {\n    unwrapElement(editor);\n  }\n}\n"],"mappings":"AAAA,SAASA,IAAT,QAAqB,OAArB;AACA,SACEC,cADF,EAEEC,iBAFF,QAGO,wCAHP;AAIA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;EACvC,MAAM;IAAEC;EAAF,IAA2BH,MAAM,CAACI,QAAP,CAAgBC,KAAjD;EACA,MAAMC,yBAAyB,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQJ,oBAAR,CAAJ,CAAlC;;EACA,MAAMK,gBAAgB,GAAGT,iBAAiB,CAACO,yBAAD,CAA1C;;EACA,MAAMG,aAAa,GAAGX,cAAc,CAACQ,yBAAD,CAApC;;EAEA,MAAM;IAAEI;EAAF,IAAaR,KAAnB;EACA,MAAMS,KAAK,GAAGH,gBAAgB,CAACE,MAAD,CAA9B;;EAEA,IAAIC,KAAK,IAAId,IAAI,CAACe,MAAL,CAAYD,KAAK,CAAC,CAAD,CAAjB,EAAsBE,MAAtB,KAAiC,CAA9C,EAAiD;IAC/CJ,aAAa,CAACC,MAAD,CAAb;EACD;AACF"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}