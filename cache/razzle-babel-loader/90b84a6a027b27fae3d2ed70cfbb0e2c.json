{"ast":null,"code":"/**\n * Clipboard actions.\n * @module actions/clipboard/clipboard\n */\nimport { COPY_CONTENT, MOVE_CONTENT, COPY, CUT } from '@plone/volto/constants/ActionTypes';\n/**\n * Copy content function.\n * @function copyContent\n * @param {array} source Source urls.\n * @param {string} target Target url.\n * @returns {Object} Copy content action.\n */\n\nexport function copyContent(source, target) {\n  return {\n    type: COPY_CONTENT,\n    request: {\n      op: 'post',\n      path: `${target}/@copy`,\n      data: {\n        source\n      }\n    }\n  };\n}\n/**\n * Move content function.\n * @function moveContent\n * @param {array} source Source urls.\n * @param {string} target Target url.\n * @returns {Object} Move content action.\n */\n\nexport function moveContent(source, target) {\n  return {\n    type: MOVE_CONTENT,\n    request: {\n      op: 'post',\n      path: `${target}/@move`,\n      data: {\n        source\n      }\n    }\n  };\n}\n/**\n * Copy function.\n * @function copy\n * @param {array} urls Source urls.\n * @returns {Object} Copy action.\n */\n\nexport function copy(urls) {\n  return {\n    type: COPY,\n    source: urls\n  };\n}\n/**\n * Cut function.\n * @function cut\n * @param {array} urls Source urls.\n * @returns {Object} Cut action.\n */\n\nexport function cut(urls) {\n  return {\n    type: CUT,\n    source: urls\n  };\n}","map":{"version":3,"names":["COPY_CONTENT","MOVE_CONTENT","COPY","CUT","copyContent","source","target","type","request","op","path","data","moveContent","copy","urls","cut"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/actions/clipboard/clipboard.js"],"sourcesContent":["/**\n * Clipboard actions.\n * @module actions/clipboard/clipboard\n */\n\nimport {\n  COPY_CONTENT,\n  MOVE_CONTENT,\n  COPY,\n  CUT,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Copy content function.\n * @function copyContent\n * @param {array} source Source urls.\n * @param {string} target Target url.\n * @returns {Object} Copy content action.\n */\nexport function copyContent(source, target) {\n  return {\n    type: COPY_CONTENT,\n    request: {\n      op: 'post',\n      path: `${target}/@copy`,\n      data: { source },\n    },\n  };\n}\n\n/**\n * Move content function.\n * @function moveContent\n * @param {array} source Source urls.\n * @param {string} target Target url.\n * @returns {Object} Move content action.\n */\nexport function moveContent(source, target) {\n  return {\n    type: MOVE_CONTENT,\n    request: {\n      op: 'post',\n      path: `${target}/@move`,\n      data: { source },\n    },\n  };\n}\n\n/**\n * Copy function.\n * @function copy\n * @param {array} urls Source urls.\n * @returns {Object} Copy action.\n */\nexport function copy(urls) {\n  return {\n    type: COPY,\n    source: urls,\n  };\n}\n\n/**\n * Cut function.\n * @function cut\n * @param {array} urls Source urls.\n * @returns {Object} Cut action.\n */\nexport function cut(urls) {\n  return {\n    type: CUT,\n    source: urls,\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SACEA,YADF,EAEEC,YAFF,EAGEC,IAHF,EAIEC,GAJF,QAKO,oCALP;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqC;EAC1C,OAAO;IACLC,IAAI,EAAEP,YADD;IAELQ,OAAO,EAAE;MACPC,EAAE,EAAE,MADG;MAEPC,IAAI,EAAG,GAAEJ,MAAO,QAFT;MAGPK,IAAI,EAAE;QAAEN;MAAF;IAHC;EAFJ,CAAP;AAQD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,WAAT,CAAqBP,MAArB,EAA6BC,MAA7B,EAAqC;EAC1C,OAAO;IACLC,IAAI,EAAEN,YADD;IAELO,OAAO,EAAE;MACPC,EAAE,EAAE,MADG;MAEPC,IAAI,EAAG,GAAEJ,MAAO,QAFT;MAGPK,IAAI,EAAE;QAAEN;MAAF;IAHC;EAFJ,CAAP;AAQD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASQ,IAAT,CAAcC,IAAd,EAAoB;EACzB,OAAO;IACLP,IAAI,EAAEL,IADD;IAELG,MAAM,EAAES;EAFH,CAAP;AAID;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,GAAT,CAAaD,IAAb,EAAmB;EACxB,OAAO;IACLP,IAAI,EAAEJ,GADD;IAELE,MAAM,EAAES;EAFH,CAAP;AAID"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}