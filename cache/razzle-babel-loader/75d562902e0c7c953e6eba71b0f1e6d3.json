{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/start-client.jsx\";\nvar __jsx = React.createElement;\nimport '@plone/volto/config'; // This is the bootstrap for the global config - client side\n\nimport '@root/theme';\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { IntlProvider } from 'react-intl-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { ReduxAsyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport loadable, { loadableReady } from '@loadable/component';\nimport { CookiesProvider } from 'react-cookie';\nimport debug from 'debug';\nimport routes from '@root/routes';\nimport config from '@plone/volto/registry';\nimport configureStore from '@plone/volto/store';\nimport { Api, persistAuthToken, ScrollToTop } from '@plone/volto/helpers';\nimport initSentry from '@plone/volto/sentry';\nexport const history = createBrowserHistory();\nconst sentryLibraries = {\n  Sentry: loadable.lib({\n    resolved: {},\n\n    chunkName() {\n      return \"sentry-browser\";\n    },\n\n    isReady(props) {\n      const key = this.resolve(props);\n\n      if (this.resolved[key] !== true) {\n        return false;\n      }\n\n      if (typeof __webpack_modules__ !== 'undefined') {\n        return !!__webpack_modules__[key];\n      }\n\n      return false;\n    },\n\n    importAsync: () => import(\n    /* webpackChunkName: \"sentry-browser\" */\n    '@sentry/browser'),\n\n    requireAsync(props) {\n      const key = this.resolve(props);\n      this.resolved[key] = false;\n      return this.importAsync(props).then(resolved => {\n        this.resolved[key] = true;\n        return resolved;\n      });\n    },\n\n    requireSync(props) {\n      const id = this.resolve(props);\n\n      if (typeof __webpack_require__ !== 'undefined') {\n        return __webpack_require__(id);\n      }\n\n      return eval('module.require')(id);\n    },\n\n    resolve() {\n      if (require.resolveWeak) {\n        return require.resolveWeak(\"@sentry/browser\");\n      }\n\n      return eval('require.resolve')(\"@sentry/browser\");\n    }\n\n  }),\n  SentryIntegrations: loadable.lib({\n    resolved: {},\n\n    chunkName() {\n      return \"sentry-integrations\";\n    },\n\n    isReady(props) {\n      const key = this.resolve(props);\n\n      if (this.resolved[key] !== true) {\n        return false;\n      }\n\n      if (typeof __webpack_modules__ !== 'undefined') {\n        return !!__webpack_modules__[key];\n      }\n\n      return false;\n    },\n\n    importAsync: () => import(\n    /* webpackChunkName: \"sentry-integrations\" */\n    '@sentry/integrations'),\n\n    requireAsync(props) {\n      const key = this.resolve(props);\n      this.resolved[key] = false;\n      return this.importAsync(props).then(resolved => {\n        this.resolved[key] = true;\n        return resolved;\n      });\n    },\n\n    requireSync(props) {\n      const id = this.resolve(props);\n\n      if (typeof __webpack_require__ !== 'undefined') {\n        return __webpack_require__(id);\n      }\n\n      return eval('module.require')(id);\n    },\n\n    resolve() {\n      if (require.resolveWeak) {\n        return require.resolveWeak(\"@sentry/integrations\");\n      }\n\n      return eval('require.resolve')(\"@sentry/integrations\");\n    }\n\n  })\n};\n\nconst loadSentry = () => {\n  const loaders = Object.entries(sentryLibraries).map(_ref => {\n    let [name, Lib] = _ref;\n    return new Promise(resolve => Lib.load().then(mod => resolve([name, mod])));\n  });\n  Promise.all(loaders).then(libs => {\n    const libraries = Object.assign({}, ...libs.map(_ref2 => {\n      let [name, lib] = _ref2;\n      return {\n        [name]: lib\n      };\n    }));\n    initSentry(libraries);\n  });\n};\n\nloadSentry();\n\nfunction reactIntlErrorHandler(error) {\n  debug('i18n')(error);\n}\n\nexport default (() => {\n  const api = new Api();\n  const store = configureStore(window.__data, history, api);\n  persistAuthToken(store); // On Cypress we expose the history, the store and the settings\n  // so we can access from Cypress and manipulate them\n\n  if (window.Cypress) {\n    window.appHistory = history;\n    window.store = store;\n    window.settings = config.settings;\n  } // Setup the client registry from the SSR response values, presents in the `window.env`\n  // variable. This is key for the Seamless mode to work.\n\n\n  if (window.env.apiPath) {\n    config.settings.apiPath = window.env.apiPath;\n  }\n\n  if (window.env.publicURL) {\n    config.settings.publicURL = window.env.publicURL;\n  } // There are some cases that the client needs to know the internal server URL\n  // too, as some helpers (isInternalURL and flattenToAppURL) need to be aware of it.\n  // This is specially important when the hydration of the store coming from the first SSR\n  // request happens, since there all the server URLs might be the internalApiPath ones,\n  // and the client should be able to take care of them properly.\n\n\n  if (window.env.RAZZLE_INTERNAL_API_PATH) {\n    config.settings.internalApiPath = window.env.RAZZLE_INTERNAL_API_PATH;\n  } // TODO: To be removed when the use of the legacy traverse is deprecated.\n\n\n  if (window.env.RAZZLE_LEGACY_TRAVERSE) {\n    config.settings.legacyTraverse = true;\n  }\n\n  loadableReady(() => {\n    hydrate(__jsx(CookiesProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, __jsx(IntlProvider, {\n      onError: reactIntlErrorHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, __jsx(ConnectedRouter, {\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, __jsx(ScrollToTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, __jsx(ReduxAsyncConnect, {\n      routes: routes,\n      helpers: api,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    })))))), document.getElementById('main'));\n  });\n});","map":{"version":3,"names":["React","hydrate","Provider","IntlProvider","ConnectedRouter","createBrowserHistory","ReduxAsyncConnect","loadable","loadableReady","CookiesProvider","debug","routes","config","configureStore","Api","persistAuthToken","ScrollToTop","initSentry","history","sentryLibraries","Sentry","lib","SentryIntegrations","loadSentry","loaders","Object","entries","map","name","Lib","Promise","resolve","load","then","mod","all","libs","libraries","assign","reactIntlErrorHandler","error","api","store","window","__data","Cypress","appHistory","settings","env","apiPath","publicURL","RAZZLE_INTERNAL_API_PATH","internalApiPath","RAZZLE_LEGACY_TRAVERSE","legacyTraverse","document","getElementById"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/start-client.jsx"],"sourcesContent":["import '@plone/volto/config'; // This is the bootstrap for the global config - client side\nimport '@root/theme';\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { IntlProvider } from 'react-intl-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { ReduxAsyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport loadable, { loadableReady } from '@loadable/component';\nimport { CookiesProvider } from 'react-cookie';\nimport debug from 'debug';\nimport routes from '@root/routes';\nimport config from '@plone/volto/registry';\n\nimport configureStore from '@plone/volto/store';\nimport { Api, persistAuthToken, ScrollToTop } from '@plone/volto/helpers';\nimport initSentry from '@plone/volto/sentry';\n\nexport const history = createBrowserHistory();\n\nconst sentryLibraries = {\n  Sentry: loadable.lib(() => import('@sentry/browser')),\n  SentryIntegrations: loadable.lib(() => import('@sentry/integrations')),\n};\n\nconst loadSentry = () => {\n  const loaders = Object.entries(sentryLibraries).map(\n    ([name, Lib]) =>\n      new Promise((resolve) => Lib.load().then((mod) => resolve([name, mod]))),\n  );\n  Promise.all(loaders).then((libs) => {\n    const libraries = Object.assign(\n      {},\n      ...libs.map(([name, lib]) => ({ [name]: lib })),\n    );\n    initSentry(libraries);\n  });\n};\n\nloadSentry();\n\nfunction reactIntlErrorHandler(error) {\n  debug('i18n')(error);\n}\n\nexport default () => {\n  const api = new Api();\n\n  const store = configureStore(window.__data, history, api);\n  persistAuthToken(store);\n\n  // On Cypress we expose the history, the store and the settings\n  // so we can access from Cypress and manipulate them\n  if (window.Cypress) {\n    window.appHistory = history;\n    window.store = store;\n    window.settings = config.settings;\n  }\n\n  // Setup the client registry from the SSR response values, presents in the `window.env`\n  // variable. This is key for the Seamless mode to work.\n  if (window.env.apiPath) {\n    config.settings.apiPath = window.env.apiPath;\n  }\n  if (window.env.publicURL) {\n    config.settings.publicURL = window.env.publicURL;\n  }\n  // There are some cases that the client needs to know the internal server URL\n  // too, as some helpers (isInternalURL and flattenToAppURL) need to be aware of it.\n  // This is specially important when the hydration of the store coming from the first SSR\n  // request happens, since there all the server URLs might be the internalApiPath ones,\n  // and the client should be able to take care of them properly.\n  if (window.env.RAZZLE_INTERNAL_API_PATH) {\n    config.settings.internalApiPath = window.env.RAZZLE_INTERNAL_API_PATH;\n  }\n  // TODO: To be removed when the use of the legacy traverse is deprecated.\n  if (window.env.RAZZLE_LEGACY_TRAVERSE) {\n    config.settings.legacyTraverse = true;\n  }\n\n  loadableReady(() => {\n    hydrate(\n      <CookiesProvider>\n        <Provider store={store}>\n          <IntlProvider onError={reactIntlErrorHandler}>\n            <ConnectedRouter history={history}>\n              <ScrollToTop>\n                <ReduxAsyncConnect routes={routes} helpers={api} />\n              </ScrollToTop>\n            </ConnectedRouter>\n          </IntlProvider>\n        </Provider>\n      </CookiesProvider>,\n      document.getElementById('main'),\n    );\n  });\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}