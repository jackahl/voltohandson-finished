{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nimport _keys from \"lodash/keys\";\nvar _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Add/Add.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Add container.\n * @module components/manage/Add/Add\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BodyClass, Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport { v4 as uuid } from 'uuid';\nimport qs from 'query-string';\nimport { toast } from 'react-toastify';\nimport { createContent, getSchema, changeLanguage } from '@plone/volto/actions';\nimport { Form, Icon, Toolbar, Sidebar, Toast, TranslationObject } from '@plone/volto/components';\nimport { getBaseUrl, hasBlocksData, flattenToAppURL, getBlocksFieldname, getBlocksLayoutFieldname, getLanguageIndependentFields, langmap, normalizeLanguageName } from '@plone/volto/helpers';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\nimport config from '@plone/volto/registry';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  add: {\n    \"id\": \"Add {type}\",\n    \"defaultMessage\": \"Add {type}\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  translateTo: {\n    \"id\": \"Translate to {lang}\",\n    \"defaultMessage\": \"Translate to {lang}\"\n  }\n});\n/**\n * Add class.\n * @class Add\n * @extends Component\n */\n\nclass Add extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    var _config$blocks;\n\n    super(props);\n\n    _defineProperty(this, \"form\", /*#__PURE__*/React.createRef());\n\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    if ((_config$blocks = config.blocks) !== null && _config$blocks !== void 0 && _config$blocks.initialBlocks[props.type]) {\n      this.initialBlocksLayout = config.blocks.initialBlocks[props.type].map(item => uuid());\n      this.initialBlocks = this.initialBlocksLayout.reduce((acc, value, index) => _objectSpread(_objectSpread({}, acc), {}, {\n        [value]: {\n          '@type': config.blocks.initialBlocks[props.type][index]\n        }\n      }), {});\n    }\n\n    this.state = {\n      isClient: false,\n      error: null,\n      formSelected: 'addForm'\n    };\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n\n\n  componentDidMount() {\n    this.props.getSchema(this.props.type, getBaseUrl(this.props.pathname));\n    this.setState({\n      isClient: true\n    });\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.createRequest.loading && nextProps.createRequest.loaded && nextProps.content['@type'] === this.props.type) {\n      this.props.history.push(this.props.returnUrl || flattenToAppURL(nextProps.content['@id']));\n    }\n\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      var _nextProps$createRequ, _nextProps$createRequ2, _nextProps$createRequ3, _DOMParser$parseFromS, _DOMParser$parseFromS2;\n\n      const message = ((_nextProps$createRequ = nextProps.createRequest.error.response) === null || _nextProps$createRequ === void 0 ? void 0 : (_nextProps$createRequ2 = _nextProps$createRequ.body) === null || _nextProps$createRequ2 === void 0 ? void 0 : _nextProps$createRequ2.message) || ((_nextProps$createRequ3 = nextProps.createRequest.error.response) === null || _nextProps$createRequ3 === void 0 ? void 0 : _nextProps$createRequ3.text);\n      const error = ((_DOMParser$parseFromS = new DOMParser().parseFromString(message, 'text/html')) === null || _DOMParser$parseFromS === void 0 ? void 0 : (_DOMParser$parseFromS2 = _DOMParser$parseFromS.all[0]) === null || _DOMParser$parseFromS2 === void 0 ? void 0 : _DOMParser$parseFromS2.textContent) || message;\n      this.setState({\n        error: error\n      });\n      toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: `${nextProps.createRequest.error.status}:  ${error}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n\n\n  onSubmit(data) {\n    var _this$props$location, _this$props$location$;\n\n    this.props.createContent(getBaseUrl(this.props.pathname), _objectSpread(_objectSpread({}, data), {}, {\n      '@static_behaviors': this.props.schema.definitions ? _keys(this.props.schema.definitions) : null,\n      '@type': this.props.type\n    }, config.settings.isMultilingual && ((_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.translationOf) && {\n      translation_of: this.props.location.state.translationOf,\n      language: this.props.location.state.language\n    }));\n  }\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n\n\n  onCancel() {\n    var _this$props$location2, _this$props$location3;\n\n    if ((_this$props$location2 = this.props.location) !== null && _this$props$location2 !== void 0 && (_this$props$location3 = _this$props$location2.state) !== null && _this$props$location3 !== void 0 && _this$props$location3.translationOf) {\n      var _this$props$location4, _this$props$location5;\n\n      const language = this.props.location.state.languageFrom;\n      const langFileName = normalizeLanguageName(language);\n      import('@root/../locales/' + langFileName + '.json').then(locale => {\n        this.props.changeLanguage(language, locale.default);\n      });\n      this.props.history.push((_this$props$location4 = this.props.location) === null || _this$props$location4 === void 0 ? void 0 : (_this$props$location5 = _this$props$location4.state) === null || _this$props$location5 === void 0 ? void 0 : _this$props$location5.translationOf);\n    } else {\n      this.props.history.push(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.schemaRequest.loaded) {\n      var _this$props$location6, _this$props$location7, _langmap$this$props$l, _this$props$location8, _this$props$location9, _this$props$schema$pr, _this$props$schema$pr2, _this$props$schema$pr3, _this$props$schema$pr4, _this$props$schema$pr5, _this$props$schema$pr6, _this$props, _this$props$schema;\n\n      const visual = hasBlocksData(this.props.schema.properties);\n      const blocksFieldname = getBlocksFieldname(this.props.schema.properties);\n      const blocksLayoutFieldname = getBlocksLayoutFieldname(this.props.schema.properties);\n      const translationObject = (_this$props$location6 = this.props.location) === null || _this$props$location6 === void 0 ? void 0 : (_this$props$location7 = _this$props$location6.state) === null || _this$props$location7 === void 0 ? void 0 : _this$props$location7.translationObject;\n      const translateTo = translationObject ? langmap === null || langmap === void 0 ? void 0 : (_langmap$this$props$l = langmap[(_this$props$location8 = this.props.location) === null || _this$props$location8 === void 0 ? void 0 : (_this$props$location9 = _this$props$location8.state) === null || _this$props$location9 === void 0 ? void 0 : _this$props$location9.language]) === null || _langmap$this$props$l === void 0 ? void 0 : _langmap$this$props$l.nativeName : null; // Lookup initialBlocks and initialBlocksLayout within schema\n\n      const schemaBlocks = (_this$props$schema$pr = this.props.schema.properties[blocksFieldname]) === null || _this$props$schema$pr === void 0 ? void 0 : _this$props$schema$pr.default;\n      const schemaBlocksLayout = (_this$props$schema$pr2 = this.props.schema.properties[blocksLayoutFieldname]) === null || _this$props$schema$pr2 === void 0 ? void 0 : (_this$props$schema$pr3 = _this$props$schema$pr2.default) === null || _this$props$schema$pr3 === void 0 ? void 0 : _this$props$schema$pr3.items;\n      let initialBlocks = this.initialBlocks;\n      let initialBlocksLayout = this.initialBlocksLayout;\n\n      if (!_isEmpty(schemaBlocksLayout) && !_isEmpty(schemaBlocks)) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        schemaBlocksLayout.forEach(value => {\n          if (!_isEmpty(schemaBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = schemaBlocks[value];\n            initialBlocks[newUid].block = newUid; // Layout ID - keep a reference to the original block id within layout\n\n            initialBlocks[newUid]['@layout'] = value;\n          }\n        });\n      } //copy blocks from translationObject\n\n\n      if (translationObject && blocksFieldname && blocksLayoutFieldname) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        const originalBlocks = JSON.parse(JSON.stringify(translationObject[blocksFieldname]));\n        const originalBlocksLayout = translationObject[blocksLayoutFieldname].items;\n        originalBlocksLayout.forEach(value => {\n          if (!_isEmpty(originalBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = originalBlocks[value];\n            initialBlocks[newUid].block = newUid; // Layout ID - keep a reference to the original block id within layout\n\n            initialBlocks[newUid]['@canonical'] = value;\n          }\n        });\n      }\n\n      const lifData = () => {\n        const data = {};\n\n        if (translationObject) {\n          getLanguageIndependentFields(this.props.schema).forEach(lif => data[lif] = translationObject[lif]);\n        }\n\n        return data;\n      };\n\n      const pageAdd = __jsx(\"div\", {\n        id: \"page-add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.add, {\n          type: this.props.type\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }\n      }), __jsx(Form, {\n        ref: this.form,\n        key: \"translated-or-new-content-form\",\n        schema: this.props.schema,\n        type: this.props.type,\n        formData: _objectSpread(_objectSpread(_objectSpread({}, blocksFieldname && {\n          [blocksFieldname]: initialBlocks || ((_this$props$schema$pr4 = this.props.schema.properties[blocksFieldname]) === null || _this$props$schema$pr4 === void 0 ? void 0 : _this$props$schema$pr4.default)\n        }), blocksLayoutFieldname && {\n          [blocksLayoutFieldname]: {\n            items: initialBlocksLayout || ((_this$props$schema$pr5 = this.props.schema.properties[blocksLayoutFieldname]) === null || _this$props$schema$pr5 === void 0 ? void 0 : (_this$props$schema$pr6 = _this$props$schema$pr5.default) === null || _this$props$schema$pr6 === void 0 ? void 0 : _this$props$schema$pr6.items)\n          }\n        }), lifData()),\n        requestError: this.state.error,\n        onSubmit: this.onSubmit,\n        hideActions: true,\n        pathname: this.props.pathname,\n        visual: visual,\n        title: (_this$props = this.props) !== null && _this$props !== void 0 && (_this$props$schema = _this$props.schema) !== null && _this$props$schema !== void 0 && _this$props$schema.title ? this.props.intl.formatMessage(messages.add, {\n          type: this.props.schema.title\n        }) : null,\n        loading: this.props.createRequest.loading,\n        isFormSelected: this.state.formSelected === 'addForm',\n        onSelectForm: () => {\n          this.setState({\n            formSelected: 'addForm'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }\n      }), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Button, {\n          id: \"toolbar-save\",\n          className: \"save\",\n          \"aria-label\": this.props.intl.formatMessage(messages.save),\n          onClick: () => this.form.current.onSubmit(),\n          loading: this.props.createRequest.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: saveSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.save),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 23\n          }\n        })), __jsx(Button, {\n          className: \"cancel\",\n          onClick: () => this.onCancel(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          className: \"circled\",\n          \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.cancel),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 23\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }\n      })), visual && this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('sidebar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }\n      }, __jsx(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }\n      })));\n\n      return translationObject ? __jsx(React.Fragment, null, __jsx(BodyClass, {\n        className: \"babel-view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }\n      }), __jsx(Grid, {\n        celled: \"internally\",\n        stackable: true,\n        columns: 2,\n        id: \"page-add-translation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }\n      }, __jsx(Grid.Column, {\n        className: \"source-object\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }\n      }, __jsx(TranslationObject, {\n        translationObject: translationObject,\n        schema: this.props.schema,\n        pathname: this.props.pathname,\n        visual: visual,\n        isFormSelected: this.state.formSelected === 'translationObjectForm',\n        onSelectForm: () => {\n          this.setState({\n            formSelected: 'translationObjectForm'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }\n      })), __jsx(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"new-translation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 15\n        }\n      }, __jsx(Menu, {\n        pointing: true,\n        secondary: true,\n        attached: true,\n        tabular: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 17\n        }\n      }, __jsx(Menu.Item, {\n        name: translateTo.toUpperCase(),\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 19\n        }\n      }, `${this.props.intl.formatMessage(messages.translateTo, {\n        lang: translateTo\n      })}`)), pageAdd)))) : pageAdd;\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\n_defineProperty(Add, \"propTypes\", {\n  createContent: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any),\n  content: PropTypes.shape({\n    // eslint-disable-line react/no-unused-prop-types\n    '@id': PropTypes.string,\n    '@type': PropTypes.string\n  }),\n  returnUrl: PropTypes.string,\n  createRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  schemaRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  type: PropTypes.string,\n  location: PropTypes.objectOf(PropTypes.any)\n});\n\n_defineProperty(Add, \"defaultProps\", {\n  schema: null,\n  content: null,\n  returnUrl: null,\n  type: 'Default'\n});\n\nexport default compose(injectIntl, connect((state, props) => ({\n  createRequest: state.content.create,\n  schemaRequest: state.schema,\n  content: state.content.data,\n  schema: state.schema.schema,\n  pathname: props.location.pathname,\n  returnUrl: qs.parse(props.location.search).return_url,\n  type: qs.parse(props.location.search).type\n}), {\n  createContent,\n  getSchema,\n  changeLanguage\n}), preloadLazyLibs('cms'))(Add);","map":{"version":3,"names":["React","Component","PropTypes","BodyClass","Helmet","connect","compose","defineMessages","injectIntl","Button","Grid","Menu","Portal","v4","uuid","qs","toast","createContent","getSchema","changeLanguage","Form","Icon","Toolbar","Sidebar","Toast","TranslationObject","getBaseUrl","hasBlocksData","flattenToAppURL","getBlocksFieldname","getBlocksLayoutFieldname","getLanguageIndependentFields","langmap","normalizeLanguageName","preloadLazyLibs","config","saveSVG","clearSVG","messages","add","save","cancel","error","translateTo","Add","constructor","props","createRef","onCancel","bind","onSubmit","blocks","initialBlocks","type","initialBlocksLayout","map","item","reduce","acc","value","index","state","isClient","formSelected","componentDidMount","pathname","setState","UNSAFE_componentWillReceiveProps","nextProps","createRequest","loading","loaded","content","history","push","returnUrl","message","response","body","text","DOMParser","parseFromString","all","textContent","intl","formatMessage","status","data","schema","definitions","settings","isMultilingual","location","translationOf","translation_of","language","languageFrom","langFileName","then","locale","default","render","schemaRequest","visual","properties","blocksFieldname","blocksLayoutFieldname","translationObject","nativeName","schemaBlocks","schemaBlocksLayout","items","forEach","newUid","block","originalBlocks","JSON","parse","stringify","originalBlocksLayout","lifData","lif","pageAdd","form","title","document","getElementById","current","toUpperCase","lang","func","isRequired","string","objectOf","any","shape","bool","create","search","return_url"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Add/Add.jsx"],"sourcesContent":["/**\n * Add container.\n * @module components/manage/Add/Add\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BodyClass, Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { keys, isEmpty } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport { v4 as uuid } from 'uuid';\nimport qs from 'query-string';\nimport { toast } from 'react-toastify';\n\nimport { createContent, getSchema, changeLanguage } from '@plone/volto/actions';\nimport {\n  Form,\n  Icon,\n  Toolbar,\n  Sidebar,\n  Toast,\n  TranslationObject,\n} from '@plone/volto/components';\nimport {\n  getBaseUrl,\n  hasBlocksData,\n  flattenToAppURL,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  getLanguageIndependentFields,\n  langmap,\n  normalizeLanguageName,\n} from '@plone/volto/helpers';\n\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\n\nimport config from '@plone/volto/registry';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add {type}',\n    defaultMessage: 'Add {type}',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  translateTo: {\n    id: 'Translate to {lang}',\n    defaultMessage: 'Translate to {lang}',\n  },\n});\n\n/**\n * Add class.\n * @class Add\n * @extends Component\n */\nclass Add extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    createContent: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    content: PropTypes.shape({\n      // eslint-disable-line react/no-unused-prop-types\n      '@id': PropTypes.string,\n      '@type': PropTypes.string,\n    }),\n    returnUrl: PropTypes.string,\n    createRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    schemaRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    type: PropTypes.string,\n    location: PropTypes.objectOf(PropTypes.any),\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n    content: null,\n    returnUrl: null,\n    type: 'Default',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    if (config.blocks?.initialBlocks[props.type]) {\n      this.initialBlocksLayout = config.blocks.initialBlocks[\n        props.type\n      ].map((item) => uuid());\n      this.initialBlocks = this.initialBlocksLayout.reduce(\n        (acc, value, index) => ({\n          ...acc,\n          [value]: { '@type': config.blocks.initialBlocks[props.type][index] },\n        }),\n        {},\n      );\n    }\n    this.state = {\n      isClient: false,\n      error: null,\n      formSelected: 'addForm',\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type, getBaseUrl(this.props.pathname));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.createRequest.loading &&\n      nextProps.createRequest.loaded &&\n      nextProps.content['@type'] === this.props.type\n    ) {\n      this.props.history.push(\n        this.props.returnUrl || flattenToAppURL(nextProps.content['@id']),\n      );\n    }\n\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      const message =\n        nextProps.createRequest.error.response?.body?.message ||\n        nextProps.createRequest.error.response?.text;\n\n      const error =\n        new DOMParser().parseFromString(message, 'text/html')?.all[0]\n          ?.textContent || message;\n\n      this.setState({ error: error });\n\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={`${nextProps.createRequest.error.status}:  ${error}`}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.createContent(getBaseUrl(this.props.pathname), {\n      ...data,\n      '@static_behaviors': this.props.schema.definitions\n        ? keys(this.props.schema.definitions)\n        : null,\n      '@type': this.props.type,\n      ...(config.settings.isMultilingual &&\n        this.props.location?.state?.translationOf && {\n          translation_of: this.props.location.state.translationOf,\n          language: this.props.location.state.language,\n        }),\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    if (this.props.location?.state?.translationOf) {\n      const language = this.props.location.state.languageFrom;\n      const langFileName = normalizeLanguageName(language);\n      import('@root/../locales/' + langFileName + '.json').then((locale) => {\n        this.props.changeLanguage(language, locale.default);\n      });\n      this.props.history.push(this.props.location?.state?.translationOf);\n    } else {\n      this.props.history.push(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  form = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.schemaRequest.loaded) {\n      const visual = hasBlocksData(this.props.schema.properties);\n      const blocksFieldname = getBlocksFieldname(this.props.schema.properties);\n      const blocksLayoutFieldname = getBlocksLayoutFieldname(\n        this.props.schema.properties,\n      );\n      const translationObject = this.props.location?.state?.translationObject;\n\n      const translateTo = translationObject\n        ? langmap?.[this.props.location?.state?.language]?.nativeName\n        : null;\n\n      // Lookup initialBlocks and initialBlocksLayout within schema\n      const schemaBlocks = this.props.schema.properties[blocksFieldname]\n        ?.default;\n      const schemaBlocksLayout = this.props.schema.properties[\n        blocksLayoutFieldname\n      ]?.default?.items;\n      let initialBlocks = this.initialBlocks;\n      let initialBlocksLayout = this.initialBlocksLayout;\n\n      if (!isEmpty(schemaBlocksLayout) && !isEmpty(schemaBlocks)) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        schemaBlocksLayout.forEach((value) => {\n          if (!isEmpty(schemaBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = schemaBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@layout'] = value;\n          }\n        });\n      }\n      //copy blocks from translationObject\n      if (translationObject && blocksFieldname && blocksLayoutFieldname) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        const originalBlocks = JSON.parse(\n          JSON.stringify(translationObject[blocksFieldname]),\n        );\n        const originalBlocksLayout =\n          translationObject[blocksLayoutFieldname].items;\n\n        originalBlocksLayout.forEach((value) => {\n          if (!isEmpty(originalBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = originalBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@canonical'] = value;\n          }\n        });\n      }\n\n      const lifData = () => {\n        const data = {};\n        if (translationObject) {\n          getLanguageIndependentFields(this.props.schema).forEach(\n            (lif) => (data[lif] = translationObject[lif]),\n          );\n        }\n        return data;\n      };\n\n      const pageAdd = (\n        <div id=\"page-add\">\n          <Helmet\n            title={this.props.intl.formatMessage(messages.add, {\n              type: this.props.type,\n            })}\n          />\n          <Form\n            ref={this.form}\n            key=\"translated-or-new-content-form\"\n            schema={this.props.schema}\n            type={this.props.type}\n            formData={{\n              ...(blocksFieldname && {\n                [blocksFieldname]:\n                  initialBlocks ||\n                  this.props.schema.properties[blocksFieldname]?.default,\n              }),\n              ...(blocksLayoutFieldname && {\n                [blocksLayoutFieldname]: {\n                  items:\n                    initialBlocksLayout ||\n                    this.props.schema.properties[blocksLayoutFieldname]?.default\n                      ?.items,\n                },\n              }),\n              // Copy the Language Independent Fields values from the to-be translated content\n              // into the default values of the translated content Add form.\n              ...lifData(),\n            }}\n            requestError={this.state.error}\n            onSubmit={this.onSubmit}\n            hideActions\n            pathname={this.props.pathname}\n            visual={visual}\n            title={\n              this.props?.schema?.title\n                ? this.props.intl.formatMessage(messages.add, {\n                    type: this.props.schema.title,\n                  })\n                : null\n            }\n            loading={this.props.createRequest.loading}\n            isFormSelected={this.state.formSelected === 'addForm'}\n            onSelectForm={() => {\n              this.setState({ formSelected: 'addForm' });\n            }}\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      loading={this.props.createRequest.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button className=\"cancel\" onClick={() => this.onCancel()}>\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        aria-label={this.props.intl.formatMessage(\n                          messages.cancel,\n                        )}\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n          {visual && this.state.isClient && (\n            <Portal node={document.getElementById('sidebar')}>\n              <Sidebar />\n            </Portal>\n          )}\n        </div>\n      );\n\n      return translationObject ? (\n        <>\n          <BodyClass className=\"babel-view\" />\n          <Grid\n            celled=\"internally\"\n            stackable\n            columns={2}\n            id=\"page-add-translation\"\n          >\n            <Grid.Column className=\"source-object\">\n              <TranslationObject\n                translationObject={translationObject}\n                schema={this.props.schema}\n                pathname={this.props.pathname}\n                visual={visual}\n                isFormSelected={\n                  this.state.formSelected === 'translationObjectForm'\n                }\n                onSelectForm={() => {\n                  this.setState({\n                    formSelected: 'translationObjectForm',\n                  });\n                }}\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <div className=\"new-translation\">\n                <Menu pointing secondary attached tabular>\n                  <Menu.Item name={translateTo.toUpperCase()} active={true}>\n                    {`${this.props.intl.formatMessage(messages.translateTo, {\n                      lang: translateTo,\n                    })}`}\n                  </Menu.Item>\n                </Menu>\n                {pageAdd}\n              </div>\n            </Grid.Column>\n          </Grid>\n        </>\n      ) : (\n        pageAdd\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      createRequest: state.content.create,\n      schemaRequest: state.schema,\n      content: state.content.data,\n      schema: state.schema.schema,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n      type: qs.parse(props.location.search).type,\n    }),\n    { createContent, getSchema, changeLanguage },\n  ),\n  preloadLazyLibs('cms'),\n)(Add);\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,sBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,YAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,mBAAnC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,EAAP,MAAe,cAAf;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,cAAnC,QAAyD,sBAAzD;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,KALF,EAMEC,iBANF,QAOO,yBAPP;AAQA,SACEC,UADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,wBALF,EAMEC,4BANF,EAOEC,OAPF,EAQEC,qBARF,QASO,sBATP;AAWA,SAASC,eAAT,QAAgC,+BAAhC;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,MAAMC,QAAQ,GAAG/B,cAAc,CAAC;EAC9BgC,GAAG;IAAA;IAAA;EAAA,CAD2B;EAK9BC,IAAI;IAAA;IAAA;EAAA,CAL0B;EAS9BC,MAAM;IAAA;IAAA;EAAA,CATwB;EAa9BC,KAAK;IAAA;IAAA;EAAA,CAbyB;EAiB9BC,WAAW;IAAA;IAAA;EAAA;AAjBmB,CAAD,CAA/B;AAuBA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkB3C,SAAlB,CAA4B;EAC1B;AACF;AACA;AACA;AACA;;EAwBE;AACF;AACA;AACA;AACA;;EAQE;AACF;AACA;AACA;AACA;AACA;EACE4C,WAAW,CAACC,KAAD,EAAQ;IAAA;;IACjB,MAAMA,KAAN;;IADiB,2CA+GZ9C,KAAK,CAAC+C,SAAN,EA/GY;;IAEjB,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;;IAEA,sBAAId,MAAM,CAACgB,MAAX,2CAAI,eAAeC,aAAf,CAA6BN,KAAK,CAACO,IAAnC,CAAJ,EAA8C;MAC5C,KAAKC,mBAAL,GAA2BnB,MAAM,CAACgB,MAAP,CAAcC,aAAd,CACzBN,KAAK,CAACO,IADmB,EAEzBE,GAFyB,CAEpBC,IAAD,IAAU1C,IAAI,EAFO,CAA3B;MAGA,KAAKsC,aAAL,GAAqB,KAAKE,mBAAL,CAAyBG,MAAzB,CACnB,CAACC,GAAD,EAAMC,KAAN,EAAaC,KAAb,qCACKF,GADL;QAEE,CAACC,KAAD,GAAS;UAAE,SAASxB,MAAM,CAACgB,MAAP,CAAcC,aAAd,CAA4BN,KAAK,CAACO,IAAlC,EAAwCO,KAAxC;QAAX;MAFX,EADmB,EAKnB,EALmB,CAArB;IAOD;;IACD,KAAKC,KAAL,GAAa;MACXC,QAAQ,EAAE,KADC;MAEXpB,KAAK,EAAE,IAFI;MAGXqB,YAAY,EAAE;IAHH,CAAb;EAKD;EAED;AACF;AACA;AACA;AACA;;;EACEC,iBAAiB,GAAG;IAClB,KAAKlB,KAAL,CAAW5B,SAAX,CAAqB,KAAK4B,KAAL,CAAWO,IAAhC,EAAsC3B,UAAU,CAAC,KAAKoB,KAAL,CAAWmB,QAAZ,CAAhD;IACA,KAAKC,QAAL,CAAc;MAAEJ,QAAQ,EAAE;IAAZ,CAAd;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEK,gCAAgC,CAACC,SAAD,EAAY;IAC1C,IACE,KAAKtB,KAAL,CAAWuB,aAAX,CAAyBC,OAAzB,IACAF,SAAS,CAACC,aAAV,CAAwBE,MADxB,IAEAH,SAAS,CAACI,OAAV,CAAkB,OAAlB,MAA+B,KAAK1B,KAAL,CAAWO,IAH5C,EAIE;MACA,KAAKP,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB,CACE,KAAK5B,KAAL,CAAW6B,SAAX,IAAwB/C,eAAe,CAACwC,SAAS,CAACI,OAAV,CAAkB,KAAlB,CAAD,CADzC;IAGD;;IAED,IAAI,KAAK1B,KAAL,CAAWuB,aAAX,CAAyBC,OAAzB,IAAoCF,SAAS,CAACC,aAAV,CAAwB3B,KAAhE,EAAuE;MAAA;;MACrE,MAAMkC,OAAO,GACX,0BAAAR,SAAS,CAACC,aAAV,CAAwB3B,KAAxB,CAA8BmC,QAA9B,0GAAwCC,IAAxC,kFAA8CF,OAA9C,gCACAR,SAAS,CAACC,aAAV,CAAwB3B,KAAxB,CAA8BmC,QAD9B,2DACA,uBAAwCE,IADxC,CADF;MAIA,MAAMrC,KAAK,GACT,8BAAIsC,SAAJ,GAAgBC,eAAhB,CAAgCL,OAAhC,EAAyC,WAAzC,2GAAuDM,GAAvD,CAA2D,CAA3D,mFACIC,WADJ,KACmBP,OAFrB;MAIA,KAAKV,QAAL,CAAc;QAAExB,KAAK,EAAEA;MAAT,CAAd;MAEA1B,KAAK,CAAC0B,KAAN,CACE,MAAC,KAAD;QACE,KAAK,MADP;QAEE,KAAK,EAAE,KAAKI,KAAL,CAAWsC,IAAX,CAAgBC,aAAhB,CAA8B/C,QAAQ,CAACI,KAAvC,CAFT;QAGE,OAAO,EAAG,GAAE0B,SAAS,CAACC,aAAV,CAAwB3B,KAAxB,CAA8B4C,MAAO,MAAK5C,KAAM,EAH9D;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF;IAOD;EACF;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEQ,QAAQ,CAACqC,IAAD,EAAO;IAAA;;IACb,KAAKzC,KAAL,CAAW7B,aAAX,CAAyBS,UAAU,CAAC,KAAKoB,KAAL,CAAWmB,QAAZ,CAAnC,kCACKsB,IADL;MAEE,qBAAqB,KAAKzC,KAAL,CAAW0C,MAAX,CAAkBC,WAAlB,GACjB,MAAK,KAAK3C,KAAL,CAAW0C,MAAX,CAAkBC,WAAvB,CADiB,GAEjB,IAJN;MAKE,SAAS,KAAK3C,KAAL,CAAWO;IALtB,GAMMlB,MAAM,CAACuD,QAAP,CAAgBC,cAAhB,6BACF,KAAK7C,KAAL,CAAW8C,QADT,kFACF,qBAAqB/B,KADnB,0DACF,sBAA4BgC,aAD1B,KAC2C;MAC3CC,cAAc,EAAE,KAAKhD,KAAL,CAAW8C,QAAX,CAAoB/B,KAApB,CAA0BgC,aADC;MAE3CE,QAAQ,EAAE,KAAKjD,KAAL,CAAW8C,QAAX,CAAoB/B,KAApB,CAA0BkC;IAFO,CAPjD;EAYD;EAED;AACF;AACA;AACA;AACA;;;EACE/C,QAAQ,GAAG;IAAA;;IACT,6BAAI,KAAKF,KAAL,CAAW8C,QAAf,2EAAI,sBAAqB/B,KAAzB,kDAAI,sBAA4BgC,aAAhC,EAA+C;MAAA;;MAC7C,MAAME,QAAQ,GAAG,KAAKjD,KAAL,CAAW8C,QAAX,CAAoB/B,KAApB,CAA0BmC,YAA3C;MACA,MAAMC,YAAY,GAAGhE,qBAAqB,CAAC8D,QAAD,CAA1C;MACA,OAAO,sBAAsBE,YAAtB,GAAqC,OAA5C,EAAqDC,IAArD,CAA2DC,MAAD,IAAY;QACpE,KAAKrD,KAAL,CAAW3B,cAAX,CAA0B4E,QAA1B,EAAoCI,MAAM,CAACC,OAA3C;MACD,CAFD;MAGA,KAAKtD,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB,0BAAwB,KAAK5B,KAAL,CAAW8C,QAAnC,mFAAwB,sBAAqB/B,KAA7C,0DAAwB,sBAA4BgC,aAApD;IACD,CAPD,MAOO;MACL,KAAK/C,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB,CAAwBhD,UAAU,CAAC,KAAKoB,KAAL,CAAWmB,QAAZ,CAAlC;IACD;EACF;;EAID;AACF;AACA;AACA;AACA;EACEoC,MAAM,GAAG;IACP,IAAI,KAAKvD,KAAL,CAAWwD,aAAX,CAAyB/B,MAA7B,EAAqC;MAAA;;MACnC,MAAMgC,MAAM,GAAG5E,aAAa,CAAC,KAAKmB,KAAL,CAAW0C,MAAX,CAAkBgB,UAAnB,CAA5B;MACA,MAAMC,eAAe,GAAG5E,kBAAkB,CAAC,KAAKiB,KAAL,CAAW0C,MAAX,CAAkBgB,UAAnB,CAA1C;MACA,MAAME,qBAAqB,GAAG5E,wBAAwB,CACpD,KAAKgB,KAAL,CAAW0C,MAAX,CAAkBgB,UADkC,CAAtD;MAGA,MAAMG,iBAAiB,4BAAG,KAAK7D,KAAL,CAAW8C,QAAd,mFAAG,sBAAqB/B,KAAxB,0DAAG,sBAA4B8C,iBAAtD;MAEA,MAAMhE,WAAW,GAAGgE,iBAAiB,GACjC3E,OADiC,aACjCA,OADiC,gDACjCA,OAAO,0BAAG,KAAKc,KAAL,CAAW8C,QAAd,mFAAG,sBAAqB/B,KAAxB,0DAAG,sBAA4BkC,QAA/B,CAD0B,0DACjC,sBAAiDa,UADhB,GAEjC,IAFJ,CARmC,CAYnC;;MACA,MAAMC,YAAY,4BAAG,KAAK/D,KAAL,CAAW0C,MAAX,CAAkBgB,UAAlB,CAA6BC,eAA7B,CAAH,0DAAG,sBACjBL,OADJ;MAEA,MAAMU,kBAAkB,6BAAG,KAAKhE,KAAL,CAAW0C,MAAX,CAAkBgB,UAAlB,CACzBE,qBADyB,CAAH,qFAAG,uBAExBN,OAFqB,2DAAG,uBAEfW,KAFZ;MAGA,IAAI3D,aAAa,GAAG,KAAKA,aAAzB;MACA,IAAIE,mBAAmB,GAAG,KAAKA,mBAA/B;;MAEA,IAAI,CAAC,SAAQwD,kBAAR,CAAD,IAAgC,CAAC,SAAQD,YAAR,CAArC,EAA4D;QAC1DzD,aAAa,GAAG,EAAhB;QACAE,mBAAmB,GAAG,EAAtB;QACAwD,kBAAkB,CAACE,OAAnB,CAA4BrD,KAAD,IAAW;UACpC,IAAI,CAAC,SAAQkD,YAAY,CAAClD,KAAD,CAApB,CAAL,EAAmC;YACjC,IAAIsD,MAAM,GAAGnG,IAAI,EAAjB;YACAwC,mBAAmB,CAACoB,IAApB,CAAyBuC,MAAzB;YACA7D,aAAa,CAAC6D,MAAD,CAAb,GAAwBJ,YAAY,CAAClD,KAAD,CAApC;YACAP,aAAa,CAAC6D,MAAD,CAAb,CAAsBC,KAAtB,GAA8BD,MAA9B,CAJiC,CAMjC;;YACA7D,aAAa,CAAC6D,MAAD,CAAb,CAAsB,SAAtB,IAAmCtD,KAAnC;UACD;QACF,CAVD;MAWD,CAnCkC,CAoCnC;;;MACA,IAAIgD,iBAAiB,IAAIF,eAArB,IAAwCC,qBAA5C,EAAmE;QACjEtD,aAAa,GAAG,EAAhB;QACAE,mBAAmB,GAAG,EAAtB;QACA,MAAM6D,cAAc,GAAGC,IAAI,CAACC,KAAL,CACrBD,IAAI,CAACE,SAAL,CAAeX,iBAAiB,CAACF,eAAD,CAAhC,CADqB,CAAvB;QAGA,MAAMc,oBAAoB,GACxBZ,iBAAiB,CAACD,qBAAD,CAAjB,CAAyCK,KAD3C;QAGAQ,oBAAoB,CAACP,OAArB,CAA8BrD,KAAD,IAAW;UACtC,IAAI,CAAC,SAAQwD,cAAc,CAACxD,KAAD,CAAtB,CAAL,EAAqC;YACnC,IAAIsD,MAAM,GAAGnG,IAAI,EAAjB;YACAwC,mBAAmB,CAACoB,IAApB,CAAyBuC,MAAzB;YACA7D,aAAa,CAAC6D,MAAD,CAAb,GAAwBE,cAAc,CAACxD,KAAD,CAAtC;YACAP,aAAa,CAAC6D,MAAD,CAAb,CAAsBC,KAAtB,GAA8BD,MAA9B,CAJmC,CAMnC;;YACA7D,aAAa,CAAC6D,MAAD,CAAb,CAAsB,YAAtB,IAAsCtD,KAAtC;UACD;QACF,CAVD;MAWD;;MAED,MAAM6D,OAAO,GAAG,MAAM;QACpB,MAAMjC,IAAI,GAAG,EAAb;;QACA,IAAIoB,iBAAJ,EAAuB;UACrB5E,4BAA4B,CAAC,KAAKe,KAAL,CAAW0C,MAAZ,CAA5B,CAAgDwB,OAAhD,CACGS,GAAD,IAAUlC,IAAI,CAACkC,GAAD,CAAJ,GAAYd,iBAAiB,CAACc,GAAD,CADzC;QAGD;;QACD,OAAOlC,IAAP;MACD,CARD;;MAUA,MAAMmC,OAAO,GACX;QAAK,EAAE,EAAC,UAAR;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,MAAC,MAAD;QACE,KAAK,EAAE,KAAK5E,KAAL,CAAWsC,IAAX,CAAgBC,aAAhB,CAA8B/C,QAAQ,CAACC,GAAvC,EAA4C;UACjDc,IAAI,EAAE,KAAKP,KAAL,CAAWO;QADgC,CAA5C,CADT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,EAME,MAAC,IAAD;QACE,GAAG,EAAE,KAAKsE,IADZ;QAEE,GAAG,EAAC,gCAFN;QAGE,MAAM,EAAE,KAAK7E,KAAL,CAAW0C,MAHrB;QAIE,IAAI,EAAE,KAAK1C,KAAL,CAAWO,IAJnB;QAKE,QAAQ,gDACFoD,eAAe,IAAI;UACrB,CAACA,eAAD,GACErD,aAAa,+BACb,KAAKN,KAAL,CAAW0C,MAAX,CAAkBgB,UAAlB,CAA6BC,eAA7B,CADa,2DACb,uBAA+CL,OADlC;QAFM,CADjB,GAMFM,qBAAqB,IAAI;UAC3B,CAACA,qBAAD,GAAyB;YACvBK,KAAK,EACHzD,mBAAmB,+BACnB,KAAKR,KAAL,CAAW0C,MAAX,CAAkBgB,UAAlB,CAA6BE,qBAA7B,CADmB,qFACnB,uBAAqDN,OADlC,2DACnB,uBACIW,KAFe;UAFE;QADE,CANvB,GAgBHS,OAAO,EAhBJ,CALV;QAuBE,YAAY,EAAE,KAAK3D,KAAL,CAAWnB,KAvB3B;QAwBE,QAAQ,EAAE,KAAKQ,QAxBjB;QAyBE,WAAW,MAzBb;QA0BE,QAAQ,EAAE,KAAKJ,KAAL,CAAWmB,QA1BvB;QA2BE,MAAM,EAAEsC,MA3BV;QA4BE,KAAK,EACH,oBAAKzD,KAAL,0EAAY0C,MAAZ,kEAAoBoC,KAApB,GACI,KAAK9E,KAAL,CAAWsC,IAAX,CAAgBC,aAAhB,CAA8B/C,QAAQ,CAACC,GAAvC,EAA4C;UAC1Cc,IAAI,EAAE,KAAKP,KAAL,CAAW0C,MAAX,CAAkBoC;QADkB,CAA5C,CADJ,GAII,IAjCR;QAmCE,OAAO,EAAE,KAAK9E,KAAL,CAAWuB,aAAX,CAAyBC,OAnCpC;QAoCE,cAAc,EAAE,KAAKT,KAAL,CAAWE,YAAX,KAA4B,SApC9C;QAqCE,YAAY,EAAE,MAAM;UAClB,KAAKG,QAAL,CAAc;YAAEH,YAAY,EAAE;UAAhB,CAAd;QACD,CAvCH;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EANF,EA+CG,KAAKF,KAAL,CAAWC,QAAX,IACC,MAAC,MAAD;QAAQ,IAAI,EAAE+D,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,MAAC,OAAD;QACE,QAAQ,EAAE,KAAKhF,KAAL,CAAWmB,QADvB;QAEE,sBAAsB,MAFxB;QAGE,KAAK,EACH,4BACE,MAAC,MAAD;UACE,EAAE,EAAC,cADL;UAEE,SAAS,EAAC,MAFZ;UAGE,cAAY,KAAKnB,KAAL,CAAWsC,IAAX,CAAgBC,aAAhB,CAA8B/C,QAAQ,CAACE,IAAvC,CAHd;UAIE,OAAO,EAAE,MAAM,KAAKmF,IAAL,CAAUI,OAAV,CAAkB7E,QAAlB,EAJjB;UAKE,OAAO,EAAE,KAAKJ,KAAL,CAAWuB,aAAX,CAAyBC,OALpC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAOE,MAAC,IAAD;UACE,IAAI,EAAElC,OADR;UAEE,SAAS,EAAC,SAFZ;UAGE,IAAI,EAAC,MAHP;UAIE,KAAK,EAAE,KAAKU,KAAL,CAAWsC,IAAX,CAAgBC,aAAhB,CAA8B/C,QAAQ,CAACE,IAAvC,CAJT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAPF,CADF,EAeE,MAAC,MAAD;UAAQ,SAAS,EAAC,QAAlB;UAA2B,OAAO,EAAE,MAAM,KAAKQ,QAAL,EAA1C;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACE,MAAC,IAAD;UACE,IAAI,EAAEX,QADR;UAEE,SAAS,EAAC,SAFZ;UAGE,cAAY,KAAKS,KAAL,CAAWsC,IAAX,CAAgBC,aAAhB,CACV/C,QAAQ,CAACG,MADC,CAHd;UAME,IAAI,EAAC,MANP;UAOE,KAAK,EAAE,KAAKK,KAAL,CAAWsC,IAAX,CAAgBC,aAAhB,CAA8B/C,QAAQ,CAACG,MAAvC,CAPT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,CAfF,CAJJ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CAhDJ,EAoFG8D,MAAM,IAAI,KAAK1C,KAAL,CAAWC,QAArB,IACC,MAAC,MAAD;QAAQ,IAAI,EAAE+D,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,MAAC,OAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CArFJ,CADF;;MA6FA,OAAOnB,iBAAiB,GACtB,4BACE,MAAC,SAAD;QAAW,SAAS,EAAC,YAArB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,EAEE,MAAC,IAAD;QACE,MAAM,EAAC,YADT;QAEE,SAAS,MAFX;QAGE,OAAO,EAAE,CAHX;QAIE,EAAE,EAAC,sBAJL;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAME,MAAC,IAAD,CAAM,MAAN;QAAa,SAAS,EAAC,eAAvB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,MAAC,iBAAD;QACE,iBAAiB,EAAEA,iBADrB;QAEE,MAAM,EAAE,KAAK7D,KAAL,CAAW0C,MAFrB;QAGE,QAAQ,EAAE,KAAK1C,KAAL,CAAWmB,QAHvB;QAIE,MAAM,EAAEsC,MAJV;QAKE,cAAc,EACZ,KAAK1C,KAAL,CAAWE,YAAX,KAA4B,uBANhC;QAQE,YAAY,EAAE,MAAM;UAClB,KAAKG,QAAL,CAAc;YACZH,YAAY,EAAE;UADF,CAAd;QAGD,CAZH;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CANF,EAsBE,MAAC,IAAD,CAAM,MAAN;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE;QAAK,SAAS,EAAC,iBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,MAAC,IAAD;QAAM,QAAQ,MAAd;QAAe,SAAS,MAAxB;QAAyB,QAAQ,MAAjC;QAAkC,OAAO,MAAzC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACE,MAAC,IAAD,CAAM,IAAN;QAAW,IAAI,EAAEpB,WAAW,CAACqF,WAAZ,EAAjB;QAA4C,MAAM,EAAE,IAApD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACI,GAAE,KAAKlF,KAAL,CAAWsC,IAAX,CAAgBC,aAAhB,CAA8B/C,QAAQ,CAACK,WAAvC,EAAoD;QACtDsF,IAAI,EAAEtF;MADgD,CAApD,CAED,EAHL,CADF,CADF,EAQG+E,OARH,CADF,CAtBF,CAFF,CADsB,GAwCtBA,OAxCF;IA0CD;;IACD,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EACD;;AApXyB;;gBAAtB9E,G,eAMe;EACjB3B,aAAa,EAAEf,SAAS,CAACgI,IAAV,CAAeC,UADb;EAEjBjH,SAAS,EAAEhB,SAAS,CAACgI,IAAV,CAAeC,UAFT;EAGjBlE,QAAQ,EAAE/D,SAAS,CAACkI,MAAV,CAAiBD,UAHV;EAIjB3C,MAAM,EAAEtF,SAAS,CAACmI,QAAV,CAAmBnI,SAAS,CAACoI,GAA7B,CAJS;EAKjB9D,OAAO,EAAEtE,SAAS,CAACqI,KAAV,CAAgB;IACvB;IACA,OAAOrI,SAAS,CAACkI,MAFM;IAGvB,SAASlI,SAAS,CAACkI;EAHI,CAAhB,CALQ;EAUjBzD,SAAS,EAAEzE,SAAS,CAACkI,MAVJ;EAWjB/D,aAAa,EAAEnE,SAAS,CAACqI,KAAV,CAAgB;IAC7BjE,OAAO,EAAEpE,SAAS,CAACsI,IADU;IAE7BjE,MAAM,EAAErE,SAAS,CAACsI;EAFW,CAAhB,EAGZL,UAdc;EAejB7B,aAAa,EAAEpG,SAAS,CAACqI,KAAV,CAAgB;IAC7BjE,OAAO,EAAEpE,SAAS,CAACsI,IADU;IAE7BjE,MAAM,EAAErE,SAAS,CAACsI;EAFW,CAAhB,EAGZL,UAlBc;EAmBjB9E,IAAI,EAAEnD,SAAS,CAACkI,MAnBC;EAoBjBxC,QAAQ,EAAE1F,SAAS,CAACmI,QAAV,CAAmBnI,SAAS,CAACoI,GAA7B;AApBO,C;;gBANf1F,G,kBAkCkB;EACpB4C,MAAM,EAAE,IADY;EAEpBhB,OAAO,EAAE,IAFW;EAGpBG,SAAS,EAAE,IAHS;EAIpBtB,IAAI,EAAE;AAJc,C;;AAqVxB,eAAe/C,OAAO,CACpBE,UADoB,EAEpBH,OAAO,CACL,CAACwD,KAAD,EAAQf,KAAR,MAAmB;EACjBuB,aAAa,EAAER,KAAK,CAACW,OAAN,CAAciE,MADZ;EAEjBnC,aAAa,EAAEzC,KAAK,CAAC2B,MAFJ;EAGjBhB,OAAO,EAAEX,KAAK,CAACW,OAAN,CAAce,IAHN;EAIjBC,MAAM,EAAE3B,KAAK,CAAC2B,MAAN,CAAaA,MAJJ;EAKjBvB,QAAQ,EAAEnB,KAAK,CAAC8C,QAAN,CAAe3B,QALR;EAMjBU,SAAS,EAAE5D,EAAE,CAACsG,KAAH,CAASvE,KAAK,CAAC8C,QAAN,CAAe8C,MAAxB,EAAgCC,UAN1B;EAOjBtF,IAAI,EAAEtC,EAAE,CAACsG,KAAH,CAASvE,KAAK,CAAC8C,QAAN,CAAe8C,MAAxB,EAAgCrF;AAPrB,CAAnB,CADK,EAUL;EAAEpC,aAAF;EAAiBC,SAAjB;EAA4BC;AAA5B,CAVK,CAFa,EAcpBe,eAAe,CAAC,KAAD,CAdK,CAAP,CAebU,GAfa,CAAf"},"metadata":{"react-intl":{"messages":[{"id":"Add {type}","defaultMessage":"Add {type}"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"},{"id":"Translate to {lang}","defaultMessage":"Translate to {lang}"}]}},"sourceType":"module"}