{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/ui/InlineToolbar.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react'; // , useState\n\nimport SlateToolbar from './SlateToolbar';\nimport SlateContextToolbar from './SlateContextToolbar';\nimport config from '@plone/volto/registry';\nimport { hasRangeSelection } from '@plone/volto-slate/utils';\nimport { ReactEditor } from 'slate-react';\nimport cx from 'classnames';\n/**\n * The main Slate toolbar. All the others are just wrappers, UI or used here\n */\n\nconst InlineToolbar = props => {\n  const {\n    editor,\n    className,\n    showExpandedToolbar,\n    setShowExpandedToolbar\n  } = props;\n  const {\n    slate\n  } = config.settings;\n  const [showMainToolbar, setShowMainToolbar] = React.useState(!!(editor.selection && hasRangeSelection(editor)));\n  React.useEffect(() => {\n    let el;\n\n    try {\n      el = ReactEditor.toDOMNode(editor, editor);\n    } catch {\n      return;\n    }\n\n    const toggleToolbar = () => {\n      const selection = window.getSelection();\n      const {\n        activeElement\n      } = window.document;\n      if (activeElement !== el) return;\n\n      if (!selection.isCollapsed && !showMainToolbar) {\n        setShowMainToolbar(true);\n      } else if (selection.isCollapsed && showMainToolbar) {\n        setShowMainToolbar(false);\n      }\n    };\n\n    window.document.addEventListener('selectionchange', toggleToolbar);\n    return () => document.removeEventListener('selectionchange', toggleToolbar);\n  }, [editor, showMainToolbar]);\n  const showContextToolbar = slate.contextToolbarButtons.map(plug => plug(editor)).filter(c => !!c).length > 0;\n  return __jsx(React.Fragment, null, __jsx(SlateToolbar, {\n    className: cx(className, {\n      upper: showContextToolbar\n    }),\n    selected: true,\n    enableExpando: slate.enableExpandedToolbar,\n    showExpandedToolbar: showExpandedToolbar,\n    setShowExpandedToolbar: setShowExpandedToolbar,\n    show: showMainToolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), __jsx(SlateContextToolbar, {\n    editor: editor,\n    plugins: slate.contextToolbarButtons,\n    show: showContextToolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default InlineToolbar;","map":{"version":3,"names":["React","SlateToolbar","SlateContextToolbar","config","hasRangeSelection","ReactEditor","cx","InlineToolbar","props","editor","className","showExpandedToolbar","setShowExpandedToolbar","slate","settings","showMainToolbar","setShowMainToolbar","useState","selection","useEffect","el","toDOMNode","toggleToolbar","window","getSelection","activeElement","document","isCollapsed","addEventListener","removeEventListener","showContextToolbar","contextToolbarButtons","map","plug","filter","c","length","upper","enableExpandedToolbar"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/packages/volto-slate/src/editor/ui/InlineToolbar.jsx"],"sourcesContent":["import React from 'react'; // , useState\nimport SlateToolbar from './SlateToolbar';\nimport SlateContextToolbar from './SlateContextToolbar';\nimport config from '@plone/volto/registry';\nimport { hasRangeSelection } from '@plone/volto-slate/utils';\nimport { ReactEditor } from 'slate-react';\nimport cx from 'classnames';\n\n/**\n * The main Slate toolbar. All the others are just wrappers, UI or used here\n */\nconst InlineToolbar = (props) => {\n  const {\n    editor,\n    className,\n    showExpandedToolbar,\n    setShowExpandedToolbar,\n  } = props;\n\n  const { slate } = config.settings;\n  const [showMainToolbar, setShowMainToolbar] = React.useState(\n    !!(editor.selection && hasRangeSelection(editor)),\n  );\n\n  React.useEffect(() => {\n    let el;\n    try {\n      el = ReactEditor.toDOMNode(editor, editor);\n    } catch {\n      return;\n    }\n    const toggleToolbar = () => {\n      const selection = window.getSelection();\n      const { activeElement } = window.document;\n      if (activeElement !== el) return;\n      if (!selection.isCollapsed && !showMainToolbar) {\n        setShowMainToolbar(true);\n      } else if (selection.isCollapsed && showMainToolbar) {\n        setShowMainToolbar(false);\n      }\n    };\n    window.document.addEventListener('selectionchange', toggleToolbar);\n    return () => document.removeEventListener('selectionchange', toggleToolbar);\n  }, [editor, showMainToolbar]);\n\n  const showContextToolbar =\n    slate.contextToolbarButtons.map((plug) => plug(editor)).filter((c) => !!c)\n      .length > 0;\n\n  return (\n    <>\n      <SlateToolbar\n        className={cx(className, {\n          upper: showContextToolbar,\n        })}\n        selected={true}\n        enableExpando={slate.enableExpandedToolbar}\n        showExpandedToolbar={showExpandedToolbar}\n        setShowExpandedToolbar={setShowExpandedToolbar}\n        show={showMainToolbar}\n      />\n      <SlateContextToolbar\n        editor={editor}\n        plugins={slate.contextToolbarButtons}\n        show={showContextToolbar}\n      />\n    </>\n  );\n};\n\nexport default InlineToolbar;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA;AACA;AACA;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAC/B,MAAM;IACJC,MADI;IAEJC,SAFI;IAGJC,mBAHI;IAIJC;EAJI,IAKFJ,KALJ;EAOA,MAAM;IAAEK;EAAF,IAAYV,MAAM,CAACW,QAAzB;EACA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwChB,KAAK,CAACiB,QAAN,CAC5C,CAAC,EAAER,MAAM,CAACS,SAAP,IAAoBd,iBAAiB,CAACK,MAAD,CAAvC,CAD2C,CAA9C;EAIAT,KAAK,CAACmB,SAAN,CAAgB,MAAM;IACpB,IAAIC,EAAJ;;IACA,IAAI;MACFA,EAAE,GAAGf,WAAW,CAACgB,SAAZ,CAAsBZ,MAAtB,EAA8BA,MAA9B,CAAL;IACD,CAFD,CAEE,MAAM;MACN;IACD;;IACD,MAAMa,aAAa,GAAG,MAAM;MAC1B,MAAMJ,SAAS,GAAGK,MAAM,CAACC,YAAP,EAAlB;MACA,MAAM;QAAEC;MAAF,IAAoBF,MAAM,CAACG,QAAjC;MACA,IAAID,aAAa,KAAKL,EAAtB,EAA0B;;MAC1B,IAAI,CAACF,SAAS,CAACS,WAAX,IAA0B,CAACZ,eAA/B,EAAgD;QAC9CC,kBAAkB,CAAC,IAAD,CAAlB;MACD,CAFD,MAEO,IAAIE,SAAS,CAACS,WAAV,IAAyBZ,eAA7B,EAA8C;QACnDC,kBAAkB,CAAC,KAAD,CAAlB;MACD;IACF,CATD;;IAUAO,MAAM,CAACG,QAAP,CAAgBE,gBAAhB,CAAiC,iBAAjC,EAAoDN,aAApD;IACA,OAAO,MAAMI,QAAQ,CAACG,mBAAT,CAA6B,iBAA7B,EAAgDP,aAAhD,CAAb;EACD,CAnBD,EAmBG,CAACb,MAAD,EAASM,eAAT,CAnBH;EAqBA,MAAMe,kBAAkB,GACtBjB,KAAK,CAACkB,qBAAN,CAA4BC,GAA5B,CAAiCC,IAAD,IAAUA,IAAI,CAACxB,MAAD,CAA9C,EAAwDyB,MAAxD,CAAgEC,CAAD,IAAO,CAAC,CAACA,CAAxE,EACGC,MADH,GACY,CAFd;EAIA,OACE,4BACE,MAAC,YAAD;IACE,SAAS,EAAE9B,EAAE,CAACI,SAAD,EAAY;MACvB2B,KAAK,EAAEP;IADgB,CAAZ,CADf;IAIE,QAAQ,EAAE,IAJZ;IAKE,aAAa,EAAEjB,KAAK,CAACyB,qBALvB;IAME,mBAAmB,EAAE3B,mBANvB;IAOE,sBAAsB,EAAEC,sBAP1B;IAQE,IAAI,EAAEG,eARR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAWE,MAAC,mBAAD;IACE,MAAM,EAAEN,MADV;IAEE,OAAO,EAAEI,KAAK,CAACkB,qBAFjB;IAGE,IAAI,EAAED,kBAHR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXF,CADF;AAmBD,CAzDD;;AA2DA,eAAevB,aAAf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}