{"ast":null,"code":"var _jsxFileName = \"/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Maps/MapsSidebar.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { MapsSchema } from './schema';\nimport { BlockDataForm } from '@plone/volto/components';\nimport { useIntl, defineMessages } from 'react-intl';\nimport globeSVG from '@plone/volto/icons/globe.svg';\nimport { Icon } from '@plone/volto/components';\nimport { Segment } from 'semantic-ui-react';\nconst messages = defineMessages({\n  Maps: {\n    \"id\": \"Maps\",\n    \"defaultMessage\": \"Maps\"\n  },\n  NoMaps: {\n    \"id\": \"No map selected\",\n    \"defaultMessage\": \"No map selected\"\n  }\n});\n\nconst MapsSidebar = props => {\n  const {\n    data,\n    block,\n    onChangeBlock\n  } = props;\n  const intl = useIntl();\n  const schema = MapsSchema(_objectSpread(_objectSpread({}, props), {}, {\n    intl\n  }));\n  return __jsx(React.Fragment, null, !data.url ? __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, props.intl.formatMessage(messages.NoMaps), __jsx(Icon, {\n    name: globeSVG,\n    size: \"100px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })) : __jsx(BlockDataForm, {\n    schema: schema,\n    title: intl.formatMessage(messages.Maps),\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    formData: data,\n    block: block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default MapsSidebar;","map":{"version":3,"names":["React","MapsSchema","BlockDataForm","useIntl","defineMessages","globeSVG","Icon","Segment","messages","Maps","NoMaps","MapsSidebar","props","data","block","onChangeBlock","intl","schema","url","formatMessage","id","value"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/components/manage/Blocks/Maps/MapsSidebar.jsx"],"sourcesContent":["import React from 'react';\nimport { MapsSchema } from './schema';\nimport { BlockDataForm } from '@plone/volto/components';\nimport { useIntl, defineMessages } from 'react-intl';\nimport globeSVG from '@plone/volto/icons/globe.svg';\nimport { Icon } from '@plone/volto/components';\nimport { Segment } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  Maps: {\n    id: 'Maps',\n    defaultMessage: 'Maps',\n  },\n  NoMaps: {\n    id: 'No map selected',\n    defaultMessage: 'No map selected',\n  },\n});\n\nconst MapsSidebar = (props) => {\n  const { data, block, onChangeBlock } = props;\n  const intl = useIntl();\n  const schema = MapsSchema({ ...props, intl });\n\n  return (\n    <>\n      {!data.url ? (\n        <Segment className=\"sidebar-metadata-container\" secondary>\n          {props.intl.formatMessage(messages.NoMaps)}\n          <Icon name={globeSVG} size=\"100px\" color=\"#b8c6c8\" />\n        </Segment>\n      ) : (\n        <BlockDataForm\n          schema={schema}\n          title={intl.formatMessage(messages.Maps)}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          formData={data}\n          block={block}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MapsSidebar;\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,YAAxC;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,IAAI;IAAA;IAAA;EAAA,CAD0B;EAK9BC,MAAM;IAAA;IAAA;EAAA;AALwB,CAAD,CAA/B;;AAWA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAC7B,MAAM;IAAEC,IAAF;IAAQC,KAAR;IAAeC;EAAf,IAAiCH,KAAvC;EACA,MAAMI,IAAI,GAAGb,OAAO,EAApB;EACA,MAAMc,MAAM,GAAGhB,UAAU,iCAAMW,KAAN;IAAaI;EAAb,GAAzB;EAEA,OACE,4BACG,CAACH,IAAI,CAACK,GAAN,GACC,MAAC,OAAD;IAAS,SAAS,EAAC,4BAAnB;IAAgD,SAAS,MAAzD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGN,KAAK,CAACI,IAAN,CAAWG,aAAX,CAAyBX,QAAQ,CAACE,MAAlC,CADH,EAEE,MAAC,IAAD;IAAM,IAAI,EAAEL,QAAZ;IAAsB,IAAI,EAAC,OAA3B;IAAmC,KAAK,EAAC,SAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADD,GAMC,MAAC,aAAD;IACE,MAAM,EAAEY,MADV;IAEE,KAAK,EAAED,IAAI,CAACG,aAAL,CAAmBX,QAAQ,CAACC,IAA5B,CAFT;IAGE,aAAa,EAAE,CAACW,EAAD,EAAKC,KAAL,KAAe;MAC5BN,aAAa,CAACD,KAAD,kCACRD,IADQ;QAEX,CAACO,EAAD,GAAMC;MAFK,GAAb;IAID,CARH;IASE,QAAQ,EAAER,IATZ;IAUE,KAAK,EAAEC,KAVT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,CADF;AAuBD,CA5BD;;AA8BA,eAAeH,WAAf"},"metadata":{"react-intl":{"messages":[{"id":"Maps","defaultMessage":"Maps"},{"id":"No map selected","defaultMessage":"No map selected"}]}},"sourceType":"module"}