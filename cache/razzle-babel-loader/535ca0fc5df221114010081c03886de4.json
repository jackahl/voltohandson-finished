{"ast":null,"code":"import { matchRoutes } from 'react-router-config';\nexport function isPromise(obj) {\n  return typeof obj === 'object' && obj && obj.then instanceof Function;\n}\nexport const mapSeries = Promise.mapSeries || function promiseMapSeries(iterable, iterator) {\n  const {\n    length\n  } = iterable;\n  const results = new Array(length);\n  let i = 0;\n\n  function iterateOverResults() {\n    return iterator(iterable[i], i, iterable).then(result => {\n      results[i] = result;\n      i += 1;\n\n      if (i < length) {\n        return iterateOverResults();\n      }\n\n      return results;\n    });\n  }\n\n  return iterateOverResults();\n};\n\nconst identity = arg => arg;\n\nlet immutableStateFunc = identity;\nlet mutableStateFunc = identity;\nexport const getImmutableState = state => immutableStateFunc(state);\nexport const getMutableState = state => mutableStateFunc(state);\nexport const matchAllRoutes = (routes, pathname) => {\n  const matching = routes.reduce((acc, route) => [...acc, ...matchRoutes([route], pathname)], []);\n  return matching;\n};","map":{"version":3,"names":["matchRoutes","isPromise","obj","then","Function","mapSeries","Promise","promiseMapSeries","iterable","iterator","length","results","Array","i","iterateOverResults","result","identity","arg","immutableStateFunc","mutableStateFunc","getImmutableState","state","getMutableState","matchAllRoutes","routes","pathname","matching","reduce","acc","route"],"sources":["/home/jakob/workspace/training-project/node_modules/@plone/volto/src/helpers/AsyncConnect/utils.js"],"sourcesContent":["import { matchRoutes } from 'react-router-config';\nexport function isPromise(obj) {\n  return typeof obj === 'object' && obj && obj.then instanceof Function;\n}\n\nexport const mapSeries =\n  Promise.mapSeries ||\n  function promiseMapSeries(iterable, iterator) {\n    const { length } = iterable;\n    const results = new Array(length);\n    let i = 0;\n\n    function iterateOverResults() {\n      return iterator(iterable[i], i, iterable).then((result) => {\n        results[i] = result;\n        i += 1;\n        if (i < length) {\n          return iterateOverResults();\n        }\n\n        return results;\n      });\n    }\n\n    return iterateOverResults();\n  };\n\nconst identity = (arg) => arg;\nlet immutableStateFunc = identity;\nlet mutableStateFunc = identity;\nexport const getImmutableState = (state) => immutableStateFunc(state);\nexport const getMutableState = (state) => mutableStateFunc(state);\n\nexport const matchAllRoutes = (routes, pathname) => {\n  const matching = routes.reduce(\n    (acc, route) => [...acc, ...matchRoutes([route], pathname)],\n    [],\n  );\n  return matching;\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;EAC7B,OAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAA3B,IAAkCA,GAAG,CAACC,IAAJ,YAAoBC,QAA7D;AACD;AAED,OAAO,MAAMC,SAAS,GACpBC,OAAO,CAACD,SAAR,IACA,SAASE,gBAAT,CAA0BC,QAA1B,EAAoCC,QAApC,EAA8C;EAC5C,MAAM;IAAEC;EAAF,IAAaF,QAAnB;EACA,MAAMG,OAAO,GAAG,IAAIC,KAAJ,CAAUF,MAAV,CAAhB;EACA,IAAIG,CAAC,GAAG,CAAR;;EAEA,SAASC,kBAAT,GAA8B;IAC5B,OAAOL,QAAQ,CAACD,QAAQ,CAACK,CAAD,CAAT,EAAcA,CAAd,EAAiBL,QAAjB,CAAR,CAAmCL,IAAnC,CAAyCY,MAAD,IAAY;MACzDJ,OAAO,CAACE,CAAD,CAAP,GAAaE,MAAb;MACAF,CAAC,IAAI,CAAL;;MACA,IAAIA,CAAC,GAAGH,MAAR,EAAgB;QACd,OAAOI,kBAAkB,EAAzB;MACD;;MAED,OAAOH,OAAP;IACD,CARM,CAAP;EASD;;EAED,OAAOG,kBAAkB,EAAzB;AACD,CApBI;;AAsBP,MAAME,QAAQ,GAAIC,GAAD,IAASA,GAA1B;;AACA,IAAIC,kBAAkB,GAAGF,QAAzB;AACA,IAAIG,gBAAgB,GAAGH,QAAvB;AACA,OAAO,MAAMI,iBAAiB,GAAIC,KAAD,IAAWH,kBAAkB,CAACG,KAAD,CAAvD;AACP,OAAO,MAAMC,eAAe,GAAID,KAAD,IAAWF,gBAAgB,CAACE,KAAD,CAAnD;AAEP,OAAO,MAAME,cAAc,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;EAClD,MAAMC,QAAQ,GAAGF,MAAM,CAACG,MAAP,CACf,CAACC,GAAD,EAAMC,KAAN,KAAgB,CAAC,GAAGD,GAAJ,EAAS,GAAG5B,WAAW,CAAC,CAAC6B,KAAD,CAAD,EAAUJ,QAAV,CAAvB,CADD,EAEf,EAFe,CAAjB;EAIA,OAAOC,QAAP;AACD,CANM"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}